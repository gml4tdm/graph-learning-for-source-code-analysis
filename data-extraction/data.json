{
  "1": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A graph-based code representation method to improve code readability classification",
        "volume": "28",
        "ISSN": "1573-7616",
        "url": "http://dx.doi.org/10.1007/s10664-023-10319-6",
        "DOI": "10.1007/s10664-023-10319-6",
        "number": "4",
        "journal": "Empirical Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Mi, Qing and Zhan, Yi and Weng, Han and Bao, Qinghang and Cui, Longjie and Ma, Wei",
        "year": "2023",
        "month": "may"
      }
    },
    "domains": [
      "misc (smell prediction & detection)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "dataflow-1": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dataflow-2": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dataflow-3": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "dataflow-1": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (CodeBERT)"
      ],
      "dataflow-2": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: node code tokens (CodeBERT)"
      ],
      "dataflow-3": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: node code tokens (CodeBERT)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: k-gnn",
          "gnn-functionality: pooling: graph: dmonpooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "3": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Towards Learning Generalizable Code Embeddings Using Task-agnostic Graph Convolutional Networks",
        "volume": "32",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3542944",
        "DOI": "10.1145/3542944",
        "number": "2",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Ding, Zishuo and Li, Heng and Shang, Weiyi and Chen, Tse-Hsun (Peter)",
        "year": "2023",
        "month": "mar",
        "pages": "1\u201343"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "syntactic-dependency-parse": {
        "vertices": [
          {
            "value": "ast leaf",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "edge annotated with path between two nodes in full ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "syntactic-dependency-parse": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: gcn w. edge-wise sigmoidal gating"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "230": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Pride: Prioritizing Documentation Effort Based on a PageRank-Like Algorithm and Simple Filtering Rules",
        "volume": "49",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2022.3171469",
        "DOI": "10.1109/tse.2022.3171469",
        "number": "3",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Pan, Weifeng and Ming, Hua and Kim, Dae-Kyoo and Yang, Zijiang",
        "year": "2023",
        "month": "mar",
        "pages": "1118\u20131151"
      }
    },
    "domains": [
      "misc (documentation assistance)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "distribution-based-weighting": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      },
      "ordinal-scale-based-weighting": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      },
      "empirical-weighting": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "distribution-based-weighting": [
        "graph: graph (uses edge features)",
        "edge feature: weights"
      ],
      "ordinal-scale-based-weighting": [
        "graph: graph (uses edge features)",
        "edge feature: weights"
      ],
      "empirical-weighting": [
        "graph: graph (uses edge features)",
        "edge feature: weights"
      ]
    },
    "models": {
      "classrank": {
        "tags": [
          "base-type: classic",
          "mode: ranking",
          "misc: model: ranking: pagerank"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "5": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Unsupervised Graph Neural Networks for\u00a0Source Code Similarity Detection",
        "ISBN": "9783031452758",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-031-45275-8_36",
        "DOI": "10.1007/978-3-031-45275-8_36",
        "booktitle": "Discovery Science",
        "publisher": "Springer Nature Switzerland",
        "author": "Cassagne, Julien and Merlo, Ettore and Branco, Paula and Jourdan, Guy-Vincent and Onut, Iosif-Viorel",
        "year": "2023",
        "pages": "535\u2013549"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gvae": {
        "tags": [
          "base-type: gnn",
          "mode: vae",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: misc: vae: dot product decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "6": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning Graph-based Code Representations for Source-level Functional Similarity Detection",
        "url": "http://dx.doi.org/10.1109/ICSE48619.2023.00040",
        "DOI": "10.1109/icse48619.2023.00040",
        "booktitle": "2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)",
        "publisher": "IEEE",
        "author": "Liu, Jiahao and Zeng, Jun and Wang, Xiang and Liang, Zhenkai",
        "year": "2023",
        "month": "may"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node type (word2vec)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "iterative-updater": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: gnn layers with residual connections into concatenation",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph/other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "8": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Embedding Context as Code Dependencies for Neural Program Repair",
        "url": "http://dx.doi.org/10.1109/ICST57152.2023.00018",
        "DOI": "10.1109/icst57152.2023.00018",
        "booktitle": "2023 IEEE Conference on Software Testing, Verification and Validation (ICST)",
        "publisher": "IEEE",
        "author": "Nashid, Noor and Sintaha, Mifta and Mesbah, Ali",
        "year": "2023",
        "month": "apr"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "seqgraph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "fag": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "seqgraph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "fag": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: node-transform: bidirectional lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "9": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning Program Representations with a Tree-Structured Transformer",
        "url": "http://dx.doi.org/10.1109/SANER56733.2023.00032",
        "DOI": "10.1109/saner56733.2023.00032",
        "booktitle": "2023 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Wang, Wenhan and Zhang, Kechi and Li, Ge and Liu, Shangqing and Li, Anran and Jin, Zhi and Liu, Yang",
        "year": "2023",
        "month": "mar"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "tree-transformer": {
        "tags": [
          "mode: general-model-with-examples",
          "base-type: transformer",
          "gnn-functionality: tree: transformer (first bottom up w. attention, then top down without attention)",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "10": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Automated program improvement with reinforcement learning and graph neural networks",
        "volume": "28",
        "ISSN": "1433-7479",
        "url": "http://dx.doi.org/10.1007/s00500-023-08559-1",
        "DOI": "10.1007/s00500-023-08559-1",
        "number": "3",
        "journal": "Soft Computing",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Sukur, Nata\u0161a and Milo\u0161evi\u0107, Nemanja and Pracner, Doni and Budimac, Zoran",
        "year": "2023",
        "month": "jun",
        "pages": "2593\u20132604"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (n/a)"
      ],
      "ast ": [
        "node feature: node type (n/a)"
      ]
    },
    "models": {
      "auto-encoder": {
        "tags": [
          "base-type: gnn",
          "mode: autoencoder",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: misc: vae: dot product decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/graph"
      },
      "agent": {
        "tags": [
          "mode: reinforcement-agent",
          "base-type: other",
          "misc: reinforcement-learning: maskable ppo (mlp as policy holder)"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      }
    }
  },
  "11": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Holistic Combination of Structural and Textual Code Information for Context Based API Recommendation",
        "volume": "48",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2021.3074309",
        "DOI": "10.1109/tse.2021.3074309",
        "number": "8",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Chen, Chi and Peng, Xin and Xing, Zhenchang and Sun, Jun and Wang, Xin and Zhao, Yifan and Zhao, Wenyun",
        "year": "2022",
        "month": "aug",
        "pages": "2987\u20133009"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "api-context-graph": {
        "vertices": [
          {
            "value": "api usages",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "api-context-graph": [
        "graph: graph (uses node features)",
        "node feature: program element name[s] (embedding layer)"
      ]
    },
    "models": {
      "apirec-so": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": "unclear",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "apirec-cst": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": "unclear",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "12": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201922",
        "title": "Using graph neural networks for program termination",
        "url": "http://dx.doi.org/10.1145/3540250.3549095",
        "DOI": "10.1145/3540250.3549095",
        "booktitle": "Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "Alon, Yoav and David, Cristina",
        "year": "2022",
        "month": "nov",
        "collection": "ESEC/FSE \u201922"
      }
    },
    "domains": [
      "misc (non-termination analysis of code)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gcn-graph": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat-node": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat-graph": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gcn-node": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "13": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ISSTA \u201922",
        "title": "TeLL: log level suggestions via modeling multi-level code block information",
        "url": "http://dx.doi.org/10.1145/3533767.3534379",
        "DOI": "10.1145/3533767.3534379",
        "booktitle": "Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis",
        "publisher": "ACM",
        "author": "Liu, Jiahao and Zeng, Jun and Wang, Xiang and Ji, Kaihang and Liang, Zhenkai",
        "year": "2022",
        "month": "jul",
        "collection": "ISSTA \u201922"
      }
    },
    "domains": [
      "misc (log level prediction)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "fast": {
        "vertices": [
          {
            "value": "basic block",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg[inter method] + ast subtrees"
      }
    },
    "features": {
      "fast": [
        "graph: graph (uses node features)",
        "node feature (terminal): node code tokens (word2vec)",
        "node feature (internal): node type (word2vec)"
      ],
      "n/a": [
        "other: log message (word2vec)"
      ]
    },
    "models": {
      "tell-softmax": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: gnn layer with residual connections into concatenation",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "tell-sigmoid": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: gnn layer with residual connections into concatenation",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "14": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "KDD \u201922",
        "title": "Rep2Vec: Repository Embedding via Heterogeneous Graph Adversarial Contrastive Learning",
        "url": "http://dx.doi.org/10.1145/3534678.3539324",
        "DOI": "10.1145/3534678.3539324",
        "booktitle": "Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining",
        "publisher": "ACM",
        "author": "Qian, Yiyue and Zhang, Yiming and Wen, Qianlong and Ye, Yanfang and Zhang, Chuxu",
        "year": "2022",
        "month": "aug",
        "collection": "KDD \u201922"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "user data (e.g. github)",
      "repository",
      "tags/topics"
    ],
    "graphs": {
      "rep-hg": {
        "vertices": [
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          },
          {
            "value": "user",
            "details": [],
            "modifiers": []
          },
          {
            "value": "topic",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "belongs to",
            "details": [],
            "modifiers": []
          },
          {
            "value": "contains topic",
            "details": [],
            "modifiers": []
          },
          {
            "value": "fork",
            "details": [],
            "modifiers": []
          },
          {
            "value": "star",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "rep-hg": [
        "graph: graph (uses node features)",
        "node feature: repository metadata (BERT)",
        "node feature: node code tokens (BERT)",
        "subgraphs: subgraphs based on meta-paths",
        "node feature: user data (BERT)",
        "node feature: repository metadata (BERT)",
        "node feature: github topic (BERT)"
      ]
    },
    "models": {
      "embedder": {
        "tags": [
          "base-type: gnn",
          "mode: embedding-model-with-pretraining",
          "gnn-functionality: gnn: gcn",
          "misc: training method: adverserial training"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "15": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SAC \u201922",
        "title": "Design patterns mining using neural sub-graph matching",
        "url": "http://dx.doi.org/10.1145/3477314.3507073",
        "DOI": "10.1145/3477314.3507073",
        "booktitle": "Proceedings of the 37th ACM/SIGAPP Symposium on Applied Computing",
        "publisher": "ACM",
        "author": "Ardimento, Pasquale and Aversano, Lerina and Bernardi, Mario Luca and Cimitile, Marta",
        "year": "2022",
        "month": "apr",
        "collection": "SAC \u201922"
      }
    },
    "domains": [
      "misc (design pattern mining)"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "design pattern specifications"
    ],
    "graphs": {
      "pattern-meta-model": {
        "vertices": [
          {
            "value": "types",
            "details": [],
            "modifiers": []
          },
          {
            "value": "members of types",
            "details": [],
            "modifiers": []
          },
          {
            "value": "behaviours",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "type has <property>",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "design pattern specification - patterns"
      },
      "code-meta-model": {
        "vertices": [
          {
            "value": "types",
            "details": [],
            "modifiers": []
          },
          {
            "value": "members of types",
            "details": [
              "fields or methods"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "structural relationships in and between types",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "design pattern specification - source code"
      }
    },
    "features": {
      "code-meta-model": [
        "unclear"
      ],
      "pattern-meta-model": [
        "unclear"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: other",
          "misc: model: unclear"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "16": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Path context augmented statement and network for learning programs",
        "volume": "27",
        "ISSN": "1573-7616",
        "url": "http://dx.doi.org/10.1007/s10664-021-10098-y",
        "DOI": "10.1007/s10664-021-10098-y",
        "number": "2",
        "journal": "Empirical Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Xiao, Da and Hang, Dengji and Ai, Lu and Li, Shengping and Liang, Hongliang",
        "year": "2022",
        "month": "jan"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "sc-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "some edges reversed to point to statements"
            ]
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "sc-ast": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)"
      ]
    },
    "models": {
      "pcan": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: node-transform: attention",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "17": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Precise Learning of Source Code Contextual Semantics via Hierarchical Dependence Structure and Graph Attention Networks",
        "volume": "184",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2021.111108",
        "DOI": "10.1016/j.jss.2021.111108",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Zhao, Zhehao and Yang, Bo and Li, Ge and Liu, Huai and Jin, Zhi",
        "year": "2022",
        "month": "feb",
        "pages": "111108"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "basic block",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg + ast subtree"
      }
    },
    "features": {
      "graph": [
        "graph: graph (has node subtrees)",
        "node feature: features from [sub-]graph associated with node"
      ]
    },
    "models": {
      "mfgnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat variant",
          "gnn-functionality: tree: tbcnn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "18": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Prediction of Types in Python with Pre-trained Graph Neural Networks",
        "url": "http://dx.doi.org/10.1109/IVMEM57067.2022.9983956",
        "DOI": "10.1109/ivmem57067.2022.9983956",
        "booktitle": "2022 Ivannikov Memorial Workshop (IVMEM)",
        "publisher": "IEEE",
        "author": "Romanov, Vitaly and Ivanov, Vladimir",
        "year": "2022",
        "month": "sep"
      }
    },
    "domains": [
      "misc (type prediction)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "import",
            "details": [],
            "modifiers": []
          },
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": [
              "linear"
            ]
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: rgcn"
        ],
        "classification-regression-granularity": "link prediction/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "19": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "MANDO: Multi-Level Heterogeneous Graph Embeddings for Fine-Grained Detection of Smart Contract Vulnerabilities",
        "url": "http://dx.doi.org/10.1109/DSAA54385.2022.10032337",
        "DOI": "10.1109/dsaa54385.2022.10032337",
        "booktitle": "2022 IEEE 9th International Conference on Data Science and Advanced Analytics (DSAA)",
        "publisher": "IEEE",
        "author": "Nguyen, Hoang H. and Nguyen, Nhat-Minh and Xie, Chunyao and Ahmadi, Zahra and Kudendo, Daniel and Doan, Thanh-Nam and Jiang, Lingxiao",
        "year": "2022",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "heterogeneous-contract-graph": {
        "vertices": [
          {
            "value": "control statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "heterogeneous-contract-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: node embedding (node2vec)",
        "node feature: node embedding (LINE)",
        "node feature: node embedding (metapath2vec)",
        "metapaths"
      ]
    },
    "models": {
      "mando-node2vec": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "mando-gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "mando-one-hot": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "mando-metapath2vec": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "mando-line": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "20": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "MSR \u201922",
        "title": "GraphCode2Vec: generic code embedding via lexical and program dependence analyses",
        "url": "http://dx.doi.org/10.1145/3524842.3528456",
        "DOI": "10.1145/3524842.3528456",
        "booktitle": "Proceedings of the 19th International Conference on Mining Software Repositories",
        "publisher": "ACM",
        "author": "Ma, Wei and Zhao, Mengjie and Soremekun, Ezekiel and Hu, Qiang and Zhang, Jie M. and Papadakis, Mike and Cordy, Maxime and Xie, Xiaofei and Traon, Yves Le",
        "year": "2022",
        "month": "may",
        "collection": "MSR \u201922"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none[inter method]"
      }
    },
    "features": {
      "pdg": [
        "graph: graph (uses node features)",
        "node feature: instruction (embedding model)"
      ]
    },
    "models": {
      "model-gcn": {
        "tags": [
          "mode: embedding-model-with-pretraining",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: pooling: graph: global attention pooling",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-gin": {
        "tags": [
          "base-type: gnn",
          "mode: embedding-model-with-pretraining",
          "gnn-functionality: gnn: gin",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: pooling: graph: global attention pooling",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-graph-sage": {
        "tags": [
          "mode: embedding-model-with-pretraining",
          "base-type: gnn",
          "gnn-functionality: gnn: graphsage",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: pooling: graph: global attention pooling",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-gat": {
        "tags": [
          "mode: embedding-model-with-pretraining",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: pooling: graph: global attention pooling",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "21": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "TEP-GNN: Accurate Execution Time Prediction of\u00a0Functional Tests Using Graph Neural Networks",
        "ISBN": "9783031213885",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-031-21388-5_32",
        "DOI": "10.1007/978-3-031-21388-5_32",
        "booktitle": "Product-Focused Software Process Improvement",
        "publisher": "Springer International Publishing",
        "author": "Samoaa, Hazem Peter and Longa, Antonio and Mohamad, Mazen and Chehreghani, Morteza Haghir and Leitner, Philipp",
        "year": "2022",
        "pages": "464\u2013479"
      }
    },
    "domains": [
      "misc (code performance prediction)"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "fa-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "fa-ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "tap-gnn-gcn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "tap-gnn-ggnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "22": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A Neural Network Architecture for Program Understanding Inspired by Human Behaviors",
        "url": "http://dx.doi.org/10.18653/v1/2022.acl-long.353",
        "DOI": "10.18653/v1/2022.acl-long.353",
        "booktitle": "Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
        "publisher": "Association for Computational Linguistics",
        "author": "Zhu, Renyu and Yuan, Lei and Li, Xiang and Gao, Ming and Cai, Wenyuan",
        "year": "2022"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "s-ast": {
        "vertices": [
          {
            "value": "api invocation",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "s-ast": [
        "graph: graph (uses node features)",
        "node feature (internal): node type (n/a)",
        "node feature (terminal): node code tokens (n/a)",
        "subgraphs: subgraphs (subtrees) based on statements",
        "sequence: pre-order linearised ast concatenated with api description"
      ]
    },
    "models": {
      "gnn": {
        "tags": [
          "base-type: gnn",
          "mode: general-model-with-examples",
          "base-type: transformer",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: architecture: lstm over subgraph embeddings",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "23": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Message Passing Graph Neural Networks for Software Security Vulnerability Detection",
        "url": "http://dx.doi.org/10.1109/ICCNEA57056.2022.00041",
        "DOI": "10.1109/iccnea57056.2022.00041",
        "booktitle": "2022 International Conference on Computer Network, Electronic and Automation (ICCNEA)",
        "publisher": "IEEE",
        "author": "Xue, Yang and Guo, Junjun and Zhang, Li and Song, Huiyu",
        "year": "2022",
        "month": "sep"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "token-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "token-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (BERT)"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "24": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Code Aggregate Graph: Effective Representation for Graph Neural Networks to Detect Vulnerable Code",
        "volume": "10",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/ACCESS.2022.3216395",
        "DOI": "10.1109/access.2022.3216395",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Nguyen, Hoang Viet and Zheng, Junjun and Inomata, Atsuo and Uehara, Tetsutaro",
        "year": "2022",
        "pages": "123786\u2013123800"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cag-word2vec": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dominator",
            "details": [],
            "modifiers": []
          },
          {
            "value": "post dominator",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "cag-fasttext": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dominator",
            "details": [],
            "modifiers": []
          },
          {
            "value": "post dominator",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "cag-glove": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dominator",
            "details": [],
            "modifiers": []
          },
          {
            "value": "post dominator",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "cag-word2vec": [
        "node feature: node type (word2vec)",
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "cag-fasttext": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)",
        "node feature: node type (fasttext)",
        "node feature: node code tokens (fasttext)"
      ],
      "cag-glove": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (glove)",
        "node feature: node type (glove)"
      ]
    },
    "models": {
      "gin": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gin",
          "gnn-functionality: pooling: graph: global attention pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: global attention pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "ggnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: global attention pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "25": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Method Name Prediction for Automatically Generated Unit Tests",
        "url": "http://dx.doi.org/10.1109/ICCQ53703.2022.9763112",
        "DOI": "10.1109/iccq53703.2022.9763112",
        "booktitle": "2022 International Conference on Code Quality (ICCQ)",
        "publisher": "IEEE",
        "author": "Petukhov, Maxim and Gudauskayte, Evelina and Kaliyev, Arman and Oskin, Mikhail and Ivanov, Dmitry and Wang, Qianxiang",
        "year": "2022",
        "month": "apr"
      }
    },
    "domains": [
      "program element name prediction"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: misc: sum of attention coefficients [as feature]",
          "gnn-functionality: pooling: node-type: mean pooling",
          "gnn-functionality: pooling: node-type: mean pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "26": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A Novel API Recommendation Approach By Using Graph Attention Network",
        "url": "http://dx.doi.org/10.1109/QRS54544.2021.00082",
        "DOI": "10.1109/qrs54544.2021.00082",
        "booktitle": "2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)",
        "publisher": "IEEE",
        "author": "Chen, Zijie and Zhang, Tao and Peng, Xiao",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "graph: graph (uses node features)",
        "node feature: program element name[s] (embedding layer)"
      ],
      "n/a": [
        "other: program element name (n/a)",
        "other: tokens in program element name with sub-tokens (n/a)",
        "other: program element name (n/a)"
      ]
    },
    "models": {
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: unclear",
          "base-type: rnn",
          "gnn-functionality: gnn: gat",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "28": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Mapping Python Programs to Vectors using Recursive Neural Encodings",
        "volume": "13",
        "url": "https://jedm.educationaldatamining.org/index.php/JEDM/article/view/499",
        "DOI": "10.5281/zenodo.5634224",
        "abstractNote": "&amp;lt;p&amp;gt;Educational data mining involves the application of data mining techniques to student activity. However, in the context of computer programming, many data mining techniques can not be applied because they require vector-shaped input, whereas computer programs have the form of syntax trees. In this paper, we present ast2vec, a neural network that maps Python syntax trees to vectors and back, thereby enabling about a hundred data mining techniques that were previously not applicable. Ast2vec has been trained on almost half a million programs of novice programmers and is designed to be applied across learning tasks without re-training, meaning that users can apply it without any need for deep learning. We demonstrate the generality of ast2vec in three settings. First, we provide example analyses using ast2vec on a classroom-sized dataset, involving two novel techniques, namely progress-variance projection for visualization and a dynamical systems analysis for prediction. In these examples, we also explain how ast2vec can be utilized for educational decisions. Second, we consider the ability of ast2vec to recover the original syntax tree from its vector representation on the training data and two other large-scale programming datasets. Finally, we evaluate the predictive capability of a linear dynamical system on top of ast2vec, obtaining similar results to techniques that work directly on syntax trees while being much faster (constant- instead of linear-time processing). We hope ast2vec can augment the educational data mining toolkit by making analyses of computer programs easier, richer, and more efficient.&amp;lt;/p&amp;gt;",
        "number": "3",
        "journal": "Journal of Educational Data Mining",
        "author": "Paassen, Benjamin and McBroom, Jessica and Jeffries, Bryn and Koprinska, Irena and Yacef, Kalina",
        "year": "2021",
        "month": "Oct.",
        "pages": "1\u201335"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph"
      ]
    },
    "models": {
      "recursive-vae": {
        "tags": [
          "base-type: mlp",
          "mode: vae",
          "gnn-functionality: tree: recursively applied bottom-up auto-encoder for node embeddings"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/nodes-bottom-up"
      }
    }
  },
  "29": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Predicting Type Annotations for Python using Embeddings from Graph Neural Networks",
        "url": "http://dx.doi.org/10.5220/0010500305480556",
        "DOI": "10.5220/0010500305480556",
        "booktitle": "Proceedings of the 23rd International Conference on Enterprise Information Systems",
        "publisher": "SCITEPRESS - Science and Technology Publications",
        "author": "Ivanov, Vladimir and Romanov, Vitaly and Succi, Giancarlo",
        "year": "2021"
      }
    },
    "domains": [
      "misc (type prediction)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "program elements",
            "details": [
              "modules",
              "classes",
              "functions etc"
            ],
            "modifiers": []
          },
          {
            "value": "ast node type",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "dependencies",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast type",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: rgcn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": null
      },
      "model-2": {
        "tags": [
          "base-type: cnn",
          "mode: classification-regression"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": null
      }
    }
  },
  "30": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Comparative Code Structure Analysis using Deep Learning for Performance Prediction",
        "url": "http://dx.doi.org/10.1109/ISPASS51385.2021.00032",
        "DOI": "10.1109/ispass51385.2021.00032",
        "booktitle": "2021 IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS)",
        "publisher": "IEEE",
        "author": "Ramadan, Tarek and Islam, Tanzima Z. and Phelps, Chase and Pinnow, Nathan and Thiagarajan, Jayaraman J.",
        "year": "2021",
        "month": "mar"
      }
    },
    "domains": [
      "misc (code performance prediction)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: tree: child-sum tree-lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "32": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Modular Tree Network for Source Code Representation Learning",
        "volume": "29",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3409331",
        "DOI": "10.1145/3409331",
        "number": "4",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Wang, Wenhan and Li, Ge and Shen, Sijie and Xia, Xin and Jin, Zhi",
        "year": "2020",
        "month": "sep",
        "pages": "1\u201323"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "unclear"
      ]
    },
    "models": {
      "mtn-b": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "mode: classification-regression",
          "gnn-functionality: tree: tree-lstm variant"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "mtn-a": {
        "tags": [
          "mode: siamese (classification)",
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: tree: tree-lstm variant"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "33": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "PACT \u201920",
        "title": "Deep Program Structure Modeling Through Multi-Relational Graph-based Learning",
        "url": "http://dx.doi.org/10.1145/3410463.3414670",
        "DOI": "10.1145/3410463.3414670",
        "booktitle": "Proceedings of the ACM International Conference on Parallel Architectures and Compilation Techniques",
        "publisher": "ACM",
        "author": "Ye, Guixin and Tang, Zhanyong and Wang, Huanting and Fang, Dingyi and Fang, Jianbin and Huang, Songfang and Wang, Zheng",
        "year": "2020",
        "month": "sep",
        "collection": "PACT \u201920"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "cdfg": {
        "vertices": [
          {
            "value": "ir instructions + types",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)",
        "node feature: instruction (word2vec)",
        "subgraphs: subgraphs based on edge type"
      ],
      "cdfg": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)",
        "node feature: instruction (word2vec)",
        "subgraphs: subgraphs based on edge type"
      ]
    },
    "models": {
      "poem-gnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: custom edge-type aware message passing scheme",
          "gnn-functionality: architecture: gnn layer with residual connections into concatenation",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "34": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Algorithm selection for software validation based on graph kernels",
        "volume": "27",
        "ISSN": "1573-7535",
        "url": "http://dx.doi.org/10.1007/s10515-020-00270-x",
        "DOI": "10.1007/s10515-020-00270-x",
        "number": "1\u20132",
        "journal": "Automated Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Richter, Cedric and H\u00fcllermeier, Eyke and Jakobs, Marie-Christine and Wehrheim, Heike",
        "year": "2020",
        "month": "apr",
        "pages": "153\u2013186"
      }
    },
    "domains": [
      "misc (algorithm recommendation)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "augmented ast": [
        "graph feature vector: bag of graphs"
      ]
    },
    "models": {
      "svm": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: kernel: (based on) generalised jaccard similarity",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph/other",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      }
    }
  },
  "35": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Using Graph Embeddings and Machine Learning to Detect Cryptography Misuse in Source Code",
        "url": "http://dx.doi.org/10.1109/ICMLA51294.2020.00171",
        "DOI": "10.1109/icmla51294.2020.00171",
        "booktitle": "2020 19th IEEE International Conference on Machine Learning and Applications (ICMLA)",
        "publisher": "IEEE",
        "author": "Rodrigues, Gustavo Eloi de P. and Braga, Alexandre M. and Dahab, Ricardo",
        "year": "2020",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph feature vector: bag of graphs"
      ]
    },
    "models": {
      "svm": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "36": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Learning semantic program embeddings with graph interval neural network",
        "volume": "4",
        "ISSN": "2475-1421",
        "url": "http://dx.doi.org/10.1145/3428205",
        "DOI": "10.1145/3428205",
        "number": "OOPSLA",
        "journal": "Proceedings of the ACM on Programming Languages",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Wang, Yu and Wang, Ke and Gao, Fengjuan and Wang, Linzhang",
        "year": "2020",
        "month": "nov",
        "pages": "1\u201327"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph-1": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": [
              "in statement"
            ]
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": [
              "between statements"
            ]
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": [
              "in statement"
            ]
          }
        ],
        "name": "none"
      },
      "graph-2": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg[inter method]"
      }
    },
    "features": {
      "graph-1": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)"
      ],
      "graph-2": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)"
      ]
    },
    "models": {
      "method-naming-model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "base-type: gnn",
          "misc: attention: attention",
          "misc: rnn: rnn",
          "gnn-functionality: gnn: graph internal neural network [partitioning, heightening, aggregating, lowering]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "variable-misuse-detection-model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: graph internal neural network [partitioning, heightening, aggregating, lowering]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "null-pointer-dereference-detection-model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: graph internal neural network [partitioning, heightening, aggregating, lowering]"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "ginn": {
        "tags": [
          "mode: other",
          "base-type: gnn",
          "gnn-functionality: gnn: graph internal neural network [partitioning, heightening, aggregating, lowering]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "37": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201920",
        "title": "A multi-task representation learning approach for source code",
        "url": "http://dx.doi.org/10.1145/3416506.3423575",
        "DOI": "10.1145/3416506.3423575",
        "booktitle": "Proceedings of the 1st ACM SIGSOFT International Workshop on Representation Learning for Software Engineering and Program Languages",
        "publisher": "ACM",
        "author": "Wang, Deze and Dong, Wei and Li, Shanshan",
        "year": "2020",
        "month": "nov",
        "collection": "ESEC/FSE \u201920"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "comment"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: tree: tree-lstm",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "38": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "LambdaNet: Probabilistic Type Inference using Graph Neural Networks",
        "author": "Jiayi Wei and Maruth Goyal and Greg Durrett and Isil Dillig",
        "booktitle": "International Conference on Learning Representations",
        "year": "2020",
        "url": "https://openreview.net/forum?id=Hkx6hANtwH"
      }
    },
    "domains": [
      "misc (type prediction)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "type-dependency-graph": {
        "vertices": [
          {
            "value": "types",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "hyperedges encoding relations between types",
            "details": [
              "e.g. function signature",
              "property access",
              "has name",
              "is boolean"
            ],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "type-dependency-graph": [
        "graph: graph (uses node features; uses edge features)",
        "edge feature: sub-tokens in variable names (n/a)",
        "node feature: unique node id",
        "node feature: shared id for all variable nodes"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: message passing scheme (adjusted for hyper-edges) with learnable message transformation function (mlp), using an aggregation scheme similar to gat (but slightly different; uses dot produdct)"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "39": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "CC \u201920",
        "title": "Compiler-based graph representations for deep learning models of code",
        "url": "http://dx.doi.org/10.1145/3377555.3377894",
        "DOI": "10.1145/3377555.3377894",
        "booktitle": "Proceedings of the 29th International Conference on Compiler Construction",
        "publisher": "ACM",
        "author": "Brauckmann, Alexander and Goens, Andr\u00e9s and Ertel, Sebastian and Castrillon, Jeronimo",
        "year": "2020",
        "month": "feb",
        "collection": "CC \u201920"
      }
    },
    "domains": [
      "misc (runtime configuration optimisation)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "dataflow-enriched-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "cdfg-call-mem": {
        "vertices": [
          {
            "value": "instruction",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "dataflow-enriched-graph": [
        "graph: graph (uses node features)"
      ],
      "cdfg-call-mem": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gnn-cdfg": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gnn-ast": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "41": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "CF \u201919",
        "title": "Capturing source code semantics via tree-based convolution over API-enhanced AST",
        "url": "http://dx.doi.org/10.1145/3310273.3321560",
        "DOI": "10.1145/3310273.3321560",
        "booktitle": "Proceedings of the 16th ACM International Conference on Computing Frontiers",
        "publisher": "ACM",
        "author": "Chen, Long and Ye, Wei and Zhang, Shikun",
        "year": "2019",
        "month": "apr",
        "collection": "CF \u201919"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "api-enhanced-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "node type per api call",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "api-enhanced-ast": [
        "graph: graph (uses node features)",
        "node feature: node type (word2vec)"
      ]
    },
    "models": {
      "tree-cnn": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: tree: tbcnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "42": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "LAK19",
        "title": "user2code2vec: Embeddings for Profiling Students Based on Distributional Representations of Source Code",
        "url": "http://dx.doi.org/10.1145/3303772.3303813",
        "DOI": "10.1145/3303772.3303813",
        "booktitle": "Proceedings of the 9th International Conference on Learning Analytics &amp; Knowledge",
        "publisher": "ACM",
        "author": "Azcona, David and Arora, Piyush and Hsiao, I-Han and Smeaton, Alan",
        "year": "2019",
        "month": "mar",
        "collection": "LAK19"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: dfs linearised ast",
        "sequence: dfs linearised ast with [parent, node] pair per node"
      ]
    },
    "models": {
      "bow": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: naive bayes"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-feature"
      },
      "embedding": {
        "tags": [
          "base-type: mlp",
          "mode: classification-regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-feature"
      }
    }
  },
  "47": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "WWW \u201923",
        "title": "Code Recommendation for Open Source Software Developers",
        "url": "http://dx.doi.org/10.1145/3543507.3583503",
        "DOI": "10.1145/3543507.3583503",
        "booktitle": "Proceedings of the ACM Web Conference 2023",
        "publisher": "ACM",
        "author": "Jin, Yiqiao and Bai, Yunsheng and Zhu, Yanqiao and Sun, Yizhou and Wang, Wei",
        "year": "2023",
        "month": "apr",
        "collection": "WWW \u201923"
      }
    },
    "domains": [
      "misc (developer recommendation)"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "user data (e.g. github)",
      "repository"
    ],
    "graphs": {
      "user-file-interaction-graph": {
        "vertices": [
          {
            "value": "source code file",
            "details": [],
            "modifiers": []
          },
          {
            "value": "user",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "user-repository-interaction-graph": {
        "vertices": [
          {
            "value": "user",
            "details": [],
            "modifiers": []
          },
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "repository-graph": {
        "vertices": [
          {
            "value": "source code file",
            "details": [],
            "modifiers": []
          },
          {
            "value": "directory",
            "details": [],
            "modifiers": []
          },
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "project structure",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "repository-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (CodeBERT)",
        "node feature: project owners (n/a)",
        "node feature: repository metadata (n/a)",
        "node feature: directory name with sub-tokens (tf/idf)"
      ],
      "user-file-interaction-graph": [
        "graph: graph (uses node features)",
        "unclear",
        "node feature: node code tokens (custom embedding model)"
      ],
      "user-repository-interaction-graph": [
        "graph: graph (uses node features)",
        "unclear"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: gnn: lightgcn",
          "misc: attention: softmax attention",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "48": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Heterogeneous Graph Neural Network-Based Software Developer Recommendation",
        "ISBN": "9783031243837",
        "ISSN": "1867-822X",
        "url": "http://dx.doi.org/10.1007/978-3-031-24383-7_24",
        "DOI": "10.1007/978-3-031-24383-7_24",
        "booktitle": "Collaborative Computing: Networking, Applications and Worksharing",
        "publisher": "Springer Nature Switzerland",
        "author": "Ye, Zhixiong and Feng, Zhiyong and Xiao, Jianmao and Gao, Yuqing and Fan, Guodong and Zhang, Huwei and Chen, Shizhan",
        "year": "2022",
        "pages": "433\u2013452"
      }
    },
    "domains": [
      "misc (developer recommendation)"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "bug reports/issuses/work items",
      "user data (e.g. github)"
    ],
    "graphs": {
      "dev-network": {
        "vertices": [
          {
            "value": "developer",
            "details": [],
            "modifiers": []
          },
          {
            "value": "issues",
            "details": [],
            "modifiers": []
          },
          {
            "value": "source code file",
            "details": [],
            "modifiers": []
          },
          {
            "value": "tags",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "labelled",
            "details": [],
            "modifiers": []
          },
          {
            "value": "reviewed",
            "details": [],
            "modifiers": []
          },
          {
            "value": "committed",
            "details": [],
            "modifiers": []
          },
          {
            "value": "issue similar to file",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "dev-network": [
        "node feature: developer (average of embeddings of issues created by the developer)",
        "metapaths"
      ],
      "dev-netwrok": [
        "node feature: issue (word2vec)"
      ]
    },
    "models": {
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: architecture: gnn per metapath subgraph",
          "gnn-functionality: fusion: node-wise attention weighted sum over subgraphs"
        ],
        "classification-regression-granularity": "node pairs",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "49": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "An empirical assessment of machine learning approaches for triaging reports of static analysis tools",
        "volume": "28",
        "ISSN": "1573-7616",
        "url": "http://dx.doi.org/10.1007/s10664-022-10253-z",
        "DOI": "10.1007/s10664-022-10253-z",
        "number": "2",
        "journal": "Empirical Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Yerramreddy, Sai and Mordahl, Austin and Koc, Ugur and Wei, Shiyi and Foster, Jeffrey S. and Carpuat, Marine and Porter, Adam A.",
        "year": "2023",
        "month": "jan"
      }
    },
    "domains": [
      "misc (static analysis output filtering (filter out false positives))"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "ast": [
        "sequence: linearised ast"
      ],
      "pdg": [
        "node feature: node type (ordinal)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)",
        "unclear"
      ]
    },
    "models": {
      "lstm": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      },
      "ggnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "50": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Identifying emerging smells in software designs based on predicting package dependencies",
        "volume": "115",
        "ISSN": "0952-1976",
        "url": "http://dx.doi.org/10.1016/j.engappai.2022.105209",
        "DOI": "10.1016/j.engappai.2022.105209",
        "journal": "Engineering Applications of Artificial Intelligence",
        "publisher": "Elsevier BV",
        "author": "Tommasel, Antonela and Diaz-Pace, J. Andres",
        "year": "2022",
        "month": "oct",
        "pages": "105209"
      }
    },
    "domains": [
      "misc (smell prediction & detection)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "dependency-graph": {
        "vertices": [
          {
            "value": "module",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "dependency-graph": [
        "node pair feature: network metrics between two nodes",
        "node pair feature: cosine similarity between bow vectors of comments/names etc in modules corresponding to nodes"
      ]
    },
    "models": {
      "svm-with-automaton": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: svm",
          "misc: reinforcement-learning: learning automaton"
        ],
        "classification-regression-granularity": "link prediction",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "53": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Improving bug detection via context-based code representation learning and attention-based neural networks",
        "volume": "3",
        "ISSN": "2475-1421",
        "url": "http://dx.doi.org/10.1145/3360588",
        "DOI": "10.1145/3360588",
        "number": "OOPSLA",
        "journal": "Proceedings of the ACM on Programming Languages",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Li, Yi and Wang, Shaohua and Nguyen, Tien N. and Van Nguyen, Son",
        "year": "2019",
        "month": "oct",
        "pages": "1\u201330"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      },
      "dfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (word2vec)",
        "path: leaf to leaf"
      ],
      "pdg": [
        "node feature: node embedding (node2vec)",
        "node matrix: matrix of nodes covered (partially) by a given path in the graph"
      ],
      "dfg": [
        "node feature: node embedding (node2vec)",
        "node matrix: matrix of nodes covered (partially) by a given path in the graph"
      ]
    },
    "models": {
      "cnn": {
        "tags": [
          "base-type: rnn",
          "mode: classification-regression",
          "base-type: cnn",
          "misc: fusion: attention sum",
          "misc: pooling: max pooling",
          "misc: fusion: matrix multiplication",
          "misc: rnn: gru",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "55": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Deep Representation Learning for Code Smells Detection using Variational Auto-Encoder",
        "url": "http://dx.doi.org/10.1109/IJCNN.2019.8851854",
        "DOI": "10.1109/ijcnn.2019.8851854",
        "booktitle": "2019 International Joint Conference on Neural Networks (IJCNN)",
        "publisher": "IEEE",
        "author": "Hadj-Kacem, Mouna and Bouassida, Nadia",
        "year": "2019",
        "month": "jul"
      }
    },
    "domains": [
      "misc (smell prediction & detection)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node embedding (continuous binary tree)",
        "graph feature vector: embedding of root (continuous binary tree)"
      ]
    },
    "models": {
      "log-reg": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      },
      "vae": {
        "tags": [
          "mode: vae",
          "base-type: mlp"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": null
      }
    }
  },
  "56": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201923",
        "title": "Learning Program Semantics for Vulnerability Detection via Vulnerability-Specific Inter-procedural Slicing",
        "url": "http://dx.doi.org/10.1145/3611643.3616351",
        "DOI": "10.1145/3611643.3616351",
        "booktitle": "Proceedings of the 31st ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "Wu, Bozhi and Liu, Shangqing and Xiao, Yang and Li, Zhiming and Sun, Jun and Lin, Shang-Wei",
        "year": "2023",
        "month": "nov",
        "collection": "ESEC/FSE \u201923"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ipg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ipg": [
        "node feature: node code tokens (embedding layer)",
        "subgraphs: subgraphs based on program slicing"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "57": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A novel vulnerability severity assessment method for source code based on a graph neural network",
        "volume": "161",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2023.107247",
        "DOI": "10.1016/j.infsof.2023.107247",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Hao, Jingwei and Luo, Senlin and Pan, Limin",
        "year": "2023",
        "month": "sep",
        "pages": "107247"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "fcg": {
        "vertices": [
          {
            "value": "function",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "fcg"
      },
      "vpr": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "fcg": [
        "graph: graph (uses node features)",
        "node feature: program element name[s] (word2vec)"
      ],
      "vpr": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "58": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "An attention-based automatic vulnerability detection approach with GGNN",
        "volume": "14",
        "ISSN": "1868-808X",
        "url": "http://dx.doi.org/10.1007/s13042-023-01824-7",
        "DOI": "10.1007/s13042-023-01824-7",
        "number": "9",
        "journal": "International Journal of Machine Learning and Cybernetics",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Tang, Gaigai and Yang, Lin and Zhang, Long and Cao, Weipeng and Meng, Lianxiao and He, Hongbin and Kuang, Hongyu and Yang, Feng and Wang, Huiqiang",
        "year": "2023",
        "month": "apr",
        "pages": "3113\u20133127"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "graph: graph (uses node features)"
      ],
      "code": [
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: sagpool",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "59": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Vulnerability detection based on federated learning",
        "volume": "167",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2023.107371",
        "DOI": "10.1016/j.infsof.2023.107371",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Zhang, Chunyong and Yu, Tianxiang and Liu, Bin and Xin, Yang",
        "year": "2024",
        "month": "mar",
        "pages": "107371"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: architecture: residual connections",
          "misc: pooling: max pooling",
          "misc: cnn: cnn",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "60": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A vulnerability detection algorithm based on residual graph attention networks for source code imbalance (RGAN)",
        "volume": "238",
        "ISSN": "0957-4174",
        "url": "http://dx.doi.org/10.1016/j.eswa.2023.122216",
        "DOI": "10.1016/j.eswa.2023.122216",
        "journal": "Expert Systems with Applications",
        "publisher": "Elsevier BV",
        "author": "Tang, Mingwei and Tang, Wei and Gui, Qingchi and Hu, Jie and Zhao, Mingfeng",
        "year": "2024",
        "month": "mar",
        "pages": "122216"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "control-flow-chart": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "control-flow-chart": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "rgan": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: architecture: gnn layers with residual connections",
          "gnn-functionality: pooling: graph: mean biaffine attention pooling",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: node-transform: attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "61": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "VDoTR: Vulnerability detection based on tensor representation of comprehensive code graphs",
        "volume": "130",
        "ISSN": "0167-4048",
        "url": "http://dx.doi.org/10.1016/j.cose.2023.103247",
        "DOI": "10.1016/j.cose.2023.103247",
        "journal": "Computers &amp; Security",
        "publisher": "Elsevier BV",
        "author": "Fan, Yuanhai and Wan, Chuanhao and Fu, Cai and Han, Lansheng and Xu, Hao",
        "year": "2023",
        "month": "jul",
        "pages": "103247"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "ncs": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ncs"
      }
    },
    "features": {
      "ast + cfg + dfg + ncs": [
        "connectivity: adjacency tensor (stacked adjacency matrices)"
      ],
      "ast": [
        "node feature: node type (ordinal)",
        "node feature: node code tokens (word2vec)"
      ],
      "cfg": [
        "node feature: node type (ordinal)",
        "node feature: node code tokens (word2vec)"
      ],
      "dfg": [
        "node feature: node type (ordinal)",
        "node feature: node code tokens (word2vec)"
      ],
      "ncs": [
        "node feature: node type (ordinal)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "circle-ggnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: gnn: ggnn w. circ tensor operation",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "62": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "CSET 2023",
        "title": "User Profiling and Vulnerability Introduction Prediction in Social Coding Repositories: A Dynamic Graph Embedding Approach: Vulnerability Introduction Prediction in Social Coding Repositories",
        "url": "http://dx.doi.org/10.1145/3607505.3607512",
        "DOI": "10.1145/3607505.3607512",
        "booktitle": "2023 Cyber Security Experimentation and Test Workshop",
        "publisher": "ACM",
        "author": "Sachdeva, Agrim and Lazarine, Ben and Zhu, Hongyi and Samtani, Sagar",
        "year": "2023",
        "month": "aug",
        "collection": "CSET 2023"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "user data (e.g. github)",
      "repository"
    ],
    "graphs": {
      "interation-graph": {
        "vertices": [
          {
            "value": "user",
            "details": [],
            "modifiers": []
          },
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "introduction of vulnerability in repo by user at specific time",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "interation-graph": [
        "node feature: repository metadata (time dependent)",
        "graph: graph (uses node features; uses edge features; evolves over time)",
        "node feature: user data (time dependent)",
        "node feature: vulnerability severity data (time dependent)",
        "node feature: vulnerability severity data (time dependent)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: other",
          "gnn-functionality: gnn: cope w. specific choice of alpha"
        ],
        "classification-regression-granularity": "link prediction",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "63": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "<scp>VulGraB</scp>: <scp>Graph</scp>\u2010embedding\u2010based code vulnerability detection with bi\u2010directional gated graph neural network",
        "volume": "53",
        "ISSN": "1097-024X",
        "url": "http://dx.doi.org/10.1002/spe.3205",
        "DOI": "10.1002/spe.3205",
        "number": "8",
        "journal": "Software: Practice and Experience",
        "publisher": "Wiley",
        "author": "Wang, Sixuan and Huang, Chen and Yu, Dongjin and Chen, Xin",
        "year": "2023",
        "month": "apr",
        "pages": "1631\u20131658"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "graph: graph (uses node features; uses edge features)",
        "node feature: node code tokens (modified node2vec)",
        "edge feature: inheritted node feature"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: bidirectional ggnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "66": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "LCVD: Loop-oriented code vulnerability detection via graph neural network",
        "volume": "202",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2023.111706",
        "DOI": "10.1016/j.jss.2023.111706",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Wang, Mingke and Tao, Chuanqi and Guo, Hongjing",
        "year": "2023",
        "month": "aug",
        "pages": "111706"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "lfast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "lfast": [
        "edge feature: edge type (n/a)",
        "node feature: node type (label encoding)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: node code tokens (word2vec)",
        "node feature: node positional information"
      ]
    },
    "models": {
      "lcvd-ggnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "lcvd-gcn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "67": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CSGVD: A deep learning approach combining sequence and graph embedding for source code vulnerability detection",
        "volume": "199",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2023.111623",
        "DOI": "10.1016/j.jss.2023.111623",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Tang, Wei and Tang, Mingwei and Ban, Minchao and Zhao, Ziguo and Feng, Mingjun",
        "year": "2023",
        "month": "may",
        "pages": "111623"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "control-flow-chart": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "control-flow-chart": [
        "other: source code (BPE Tokenizer from CodeBERT)",
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "rgan": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: gnn layers with residual connections",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: pooling: graph: mean biaffine attention pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "68": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "VFFINDER: A Graph-Based Approach for Automated Silent Vulnerability-Fix Identification",
        "url": "http://dx.doi.org/10.1109/KSE59128.2023.10299438",
        "DOI": "10.1109/kse59128.2023.10299438",
        "booktitle": "2023 15th International Conference on Knowledge and Systems Engineering (KSE)",
        "publisher": "IEEE",
        "author": "Nguyen, Son and Vu, Thanh Trong and Vo, Hieu Dinh",
        "year": "2023",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "aast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "both old and new code",
              "annotated {old,unchanged,new}"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "aast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)",
        "node feature: change information (one-hot)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "69": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Tensor\u2010based gated graph neural network for automatic vulnerability detection in source code",
        "volume": "34",
        "ISSN": "1099-1689",
        "url": "http://dx.doi.org/10.1002/stvr.1867",
        "DOI": "10.1002/stvr.1867",
        "number": "2",
        "journal": "Software Testing, Verification and Reliability",
        "publisher": "Wiley",
        "author": "Yang, Jia and Ruan, Ou and Zhang, JiXin",
        "year": "2023",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "ncs": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ncs"
      }
    },
    "features": {
      "ast + cfg + dfg + ncs": [
        "connectivity: adjacency tensor (stacked adjacency matrices)"
      ],
      "ast": [
        "node feature: node code tokens (word2vec)",
        "node feature: node type (word2vec)"
      ],
      "cfg": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ],
      "dfg": [
        "node feature: node code tokens (word2vec)",
        "node feature: node type (word2vec)"
      ],
      "ncs": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "circle-ggnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn w. circ tensor operation",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "71": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Vulnerability Detection Based on Unified Code Property Graph",
        "ISBN": "9789819962228",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-981-99-6222-8_30",
        "DOI": "10.1007/978-981-99-6222-8_30",
        "booktitle": "Web Information Systems and Applications",
        "publisher": "Springer Nature Singapore",
        "author": "Li, Wei and Li, Xiang and Feng, Wanzheng and Jin, Guanglu and Liu, Zhihan and Jia, Jing",
        "year": "2023",
        "pages": "359\u2013370"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ucpg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ucpg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: gnn layers with residual connections",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "72": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Cross-domain vulnerability detection using graph embedding and domain adaptation",
        "volume": "125",
        "ISSN": "0167-4048",
        "url": "http://dx.doi.org/10.1016/j.cose.2022.103017",
        "DOI": "10.1016/j.cose.2022.103017",
        "journal": "Computers &amp; Security",
        "publisher": "Elsevier BV",
        "author": "Li, Xin and Xin, Yang and Zhu, Hongliang and Yang, Yixian and Chen, Yuling",
        "year": "2023",
        "month": "feb",
        "pages": "103017"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node type (scalar)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "73": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Function-Level Vulnerability Detection Through Fusing Multi-Modal Knowledge",
        "url": "http://dx.doi.org/10.1109/ASE56229.2023.00084",
        "DOI": "10.1109/ase56229.2023.00084",
        "booktitle": "2023 38th IEEE/ACM International Conference on Automated Software Engineering (ASE)",
        "publisher": "IEEE",
        "author": "Ni, Chao and Guo, Xinrong and Zhu, Yan and Xu, Xiaodan and Yang, Xiaohu",
        "year": "2023",
        "month": "sep"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node type (integer)",
        "graph: graph (uses node features)",
        "image: graph rendered as image",
        "node feature: node code tokens (word2vec)",
        "other: bounding boxes of nodes in image of rendered graph"
      ]
    },
    "models": {
      "multi-modal-model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: gat",
          "misc: misc: swinv2",
          "gnn-functionality: fusion: node-wise concatenation pooling of graphs",
          "gnn-functionality: dynamic graph: link prediction using sigmoid product"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "74": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "VulSAT: Source Code Vulnerability Detection Scheme Based on SAT Structure",
        "url": "http://dx.doi.org/10.1109/ICSIP57908.2023.10271020",
        "DOI": "10.1109/icsip57908.2023.10271020",
        "booktitle": "2023 8th International Conference on Signal and Image Processing (ICSIP)",
        "publisher": "IEEE",
        "author": "Xue, Jintao and Yu, Zihan and Song, Yubo and Qin, Zhongyuan and Sun, Xin and Wang, Wen",
        "year": "2023",
        "month": "jul"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (sent2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: transformer",
          "gnn-functionality: transformer: structure aware transformer"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "76": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "CodeGraphSMOTE - Data Augmentation for\u00a0Vulnerability Discovery",
        "ISBN": "9783031375866",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-031-37586-6_17",
        "DOI": "10.1007/978-3-031-37586-6_17",
        "booktitle": "Data and Applications Security and Privacy XXXVII",
        "publisher": "Springer Nature Switzerland",
        "author": "Ganz, Tom and Imgrund, Erik and H\u00e4rterich, Martin and Rieck, Konrad",
        "year": "2023",
        "pages": "282\u2013301"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [],
    "graphs": {
      "any": {
        "vertices": [],
        "edges": [],
        "name": "any"
      }
    },
    "features": {
      "n/a": [
        "unclear"
      ]
    },
    "models": {
      "vgae": {
        "tags": [
          "base-type: gnn",
          "mode: vae",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: graph deconvolutional network",
          "gnn-functionality: misc: vae: dot product decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "code-transformer": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/source code"
      }
    }
  },
  "77": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "GraphSPD: Graph-Based Security Patch Detection with Enriched Code Semantics",
        "url": "http://dx.doi.org/10.1109/SP46215.2023.10179479",
        "DOI": "10.1109/sp46215.2023.10179479",
        "booktitle": "2023 IEEE Symposium on Security and Privacy (SP)",
        "publisher": "IEEE",
        "author": "Wang, Shu and Wang, Xinda and Sun, Kun and Jajodia, Sushil and Wang, Haining and Li, Qi",
        "year": "2023",
        "month": "may"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "patch-cpg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "patch-cpg": [
        "edge feature: edge type (one-hot)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: change information (binary encoding)",
        "edge feature: code change information (n/a)",
        "node feature: domain-specific handcrafted expert features"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: multi-attributed gcn (gcn on edge-type subgraphs)",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "78": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "TS-GGNN: Combining Graph and Sequence Features for Vulnerability Detection in Source Code",
        "url": "http://dx.doi.org/10.1109/CISCE58541.2023.10142859",
        "DOI": "10.1109/cisce58541.2023.10142859",
        "booktitle": "2023 5th International Conference on Communications, Information System and Computer Engineering (CISCE)",
        "publisher": "IEEE",
        "author": "Zhou, Xin and Pang, Jianmin and Zhang, Chunyan and Yue, Feng and Wang, Junchao and Liu, Guangming",
        "year": "2023",
        "month": "apr"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "co-occurrence-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "co-occurrence-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens with sub-tokens (word embedding)",
        "connectivity: adjacency matrix weighted using node pointwise mutual information"
      ],
      "n/a": [
        "other: source code (word embedding)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "misc: rnn: bidirectional gru",
          "gnn-functionality: pooling: graph: combined sum and max pooling",
          "gnn-functionality: node-transform: sigmoid attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "80": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SEKE2023",
        "title": "Fine-Grained Source Code Vulnerability Detection via Graph Neural Networks (S)",
        "ISSN": "2325-9000",
        "url": "http://dx.doi.org/10.18293/SEKE2023-115",
        "DOI": "10.18293/seke2023-115",
        "booktitle": "Proceedings of the 35th International Conference on Software Engineering and Knowledge Engineering",
        "publisher": "KSI Research Inc.",
        "author": "Wang, Jingjing and Huang, Minhuan and Nie, Yuanping and Kuang, Xiaohui and Li, Xiang and Zhong, Wenjing",
        "year": "2023",
        "month": "jul",
        "collection": "SEKE2023"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: node code tokens (word2vec)",
        "node feature: types of program elements (one-hot)",
        "node feature: operations/control structures (one-hot)",
        "unclear",
        "node feature: program element name[s] (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: rnn: lstm over ranked nodes",
          "gnn-functionality: pooling: graph: top-k pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "81": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Long Method Detection Using Graph Convolutional Networks",
        "volume": "31",
        "ISSN": "1882-6652",
        "url": "http://dx.doi.org/10.2197/ipsjjip.31.469",
        "DOI": "10.2197/ipsjjip.31.469",
        "number": "0",
        "journal": "Journal of Information Processing",
        "publisher": "Information Processing Society of Japan",
        "author": "Zhang, HanYu and Kishi, Tomoji",
        "year": "2023",
        "pages": "469\u2013477"
      }
    },
    "domains": [
      "misc (smell prediction & detection)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "connection to central node",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: software metrics"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "82": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "HyVulDect: A hybrid semantic vulnerability mining system based on graph neural network",
        "volume": "121",
        "ISSN": "0167-4048",
        "url": "http://dx.doi.org/10.1016/j.cose.2022.102823",
        "DOI": "10.1016/j.cose.2022.102823",
        "journal": "Computers &amp; Security",
        "publisher": "Elsevier BV",
        "author": "Guo, Wenbo and Fang, Yong and Huang, Cheng and Ou, Haoran and Lin, Chun and Guo, Yongyan",
        "year": "2022",
        "month": "oct",
        "pages": "102823"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "modified-code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "joint edge type for control and data dependence between the same two nodes",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "modified-code-property-graph": [
        "edge feature: edge type (ordinal)",
        "node feature: node code tokens (word2vec)",
        "graph: graph (uses node features; uses edge features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "misc: attention: attention",
          "misc: rnn: bidirectional lstm",
          "gnn-functionality: attention: attention",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "83": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ACSAC",
        "title": "Compact Abstract Graphs for Detecting Code Vulnerability with GNN Models",
        "url": "http://dx.doi.org/10.1145/3564625.3564655",
        "DOI": "10.1145/3564625.3564655",
        "booktitle": "Proceedings of the 38th Annual Computer Security Applications Conference",
        "publisher": "ACM",
        "author": "Luo, Yu and Xu, Weifeng and Xu, Dianxiang",
        "year": "2022",
        "month": "dec",
        "collection": "ACSAC"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "compact-abstract-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "merged"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "connection to central node",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "node"
      }
    },
    "features": {
      "compact-abstract-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (MPNet)"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "unimp": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: unified message passing model",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "armaconv": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: armaconv",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "feastnet": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: feature steered graph convolution (feastnet)",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "res-gated-gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: resgatedgcn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "84": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "MFXSS: An effective XSS vulnerability detection method in JavaScript based on multi-feature model",
        "volume": "124",
        "ISSN": "0167-4048",
        "url": "http://dx.doi.org/10.1016/j.cose.2022.103015",
        "DOI": "10.1016/j.cose.2022.103015",
        "journal": "Computers &amp; Security",
        "publisher": "Elsevier BV",
        "author": "Liu, Zhonglin and Fang, Yong and Huang, Cheng and Xu, Yijia",
        "year": "2023",
        "month": "jan",
        "pages": "103015"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "n/a": [
        "other: source code (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "misc: rnn: bidirectional lstm",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "85": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ISSTA \u201922",
        "title": "Path-sensitive code embedding via contrastive learning for software vulnerability detection",
        "url": "http://dx.doi.org/10.1145/3533767.3534371",
        "DOI": "10.1145/3533767.3534371",
        "booktitle": "Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis",
        "publisher": "ACM",
        "author": "Cheng, Xiao and Zhang, Guanqin and Wang, Haoyu and Sui, Yulei",
        "year": "2022",
        "month": "jul",
        "collection": "ISSTA \u201922"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "paths: def-use chains annotated with guards (GRU)",
        "node feature: features from [sub-]graph associated with node"
      ],
      "ast": [
        "node feature: node embedding (code2vec)",
        "subgraphs: subtrees (use node features)"
      ]
    },
    "models": {
      "detection-model": {
        "tags": [
          "base-type: other",
          "mode: classification-regression",
          "misc: transformer: transformer encoder"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      },
      "statement-model": {
        "tags": [
          "base-type: rnn",
          "mode: embedding-model-with-pretraining",
          "misc: pooling: attention sum",
          "misc: rnn: bidirectional gru",
          "gnn-functionality: pooling: graph: combined sum and max pooling",
          "gnn-functionality: pooling: tree: bottom-up attention weighted sum of self and child nodes"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": null
      }
    }
  },
  "86": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "VulEye: A Novel Graph Neural Network Vulnerability Detection Approach for PHP Application",
        "volume": "13",
        "ISSN": "2076-3417",
        "url": "http://dx.doi.org/10.3390/app13020825",
        "DOI": "10.3390/app13020825",
        "number": "2",
        "journal": "Applied Sciences",
        "publisher": "MDPI AG",
        "author": "Lin, Chun and Xu, Yijia and Fang, Yong and Liu, Zhonglin",
        "year": "2023",
        "month": "jan",
        "pages": "825"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "sliced-sdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "sliced-sdg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: residual connections",
          "gnn-functionality: attention: attention",
          "gnn-functionality: pooling: graph: combined sum and max pooling",
          "gnn-functionality: pooling: graph: top-k pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "87": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Predicting vulnerability inducing function versions using node embeddings and graph neural networks",
        "volume": "145",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2022.106822",
        "DOI": "10.1016/j.infsof.2022.106822",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "\u015eahin, Sefa Eren and \u00d6zyedierler, Ecem Mine and Tosun, Ayse",
        "year": "2022",
        "month": "may",
        "pages": "106822"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node embedding (using graph-adjusted cbow-style network)"
      ]
    },
    "models": {
      "graphsage": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: graphsage",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "graph-cbow": {
        "tags": [
          "base-type: mlp",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": null
      }
    }
  },
  "88": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "MSR \u201922",
        "title": "LineVD: statement-level vulnerability detection using graph neural networks",
        "url": "http://dx.doi.org/10.1145/3524842.3527949",
        "DOI": "10.1145/3524842.3527949",
        "booktitle": "Proceedings of the 19th International Conference on Mining Software Repositories",
        "publisher": "ACM",
        "author": "Hin, David and Kan, Andrey and Chen, Huaming and Babar, M. Ali",
        "year": "2022",
        "month": "may",
        "collection": "MSR \u201922"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (CodeBERT)"
      ],
      "n/a": [
        "other: source code (CodeBERT)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "89": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Detecting Runtime Exceptions by Deep Code Representation Learning with Attention-Based Graph Neural Networks",
        "url": "http://dx.doi.org/10.1109/SANER53432.2022.00053",
        "DOI": "10.1109/saner53432.2022.00053",
        "booktitle": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Li, Rongfan and Chen, Bihuan and Zhang, Fengyi and Sun, Chao and Peng, Xin",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-like-graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none + ast subtrees"
      }
    },
    "features": {
      "code-property-like-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "90": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "mVulPreter: A Multi-Granularity Vulnerability Detection System With Interpretations",
        "ISSN": "2160-9209",
        "url": "http://dx.doi.org/10.1109/TDSC.2022.3199769",
        "DOI": "10.1109/tdsc.2022.3199769",
        "journal": "IEEE Transactions on Dependable and Secure Computing",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Zou, Deqing and Hu, Yutao and Li, Wenke and Wu, Yueming and Zhao, Haojun and Jin, Hai",
        "year": "2024",
        "pages": "1\u201312"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "node feature: node code tokens (sent2vec)",
        "subgraphs: subgraphs based on program slicing"
      ]
    },
    "models": {
      "full": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: node-transform: cnn w. max pooling",
          "gnn-functionality: architecture: residual connections [fuse w. initial features]",
          "misc: training method: first filter subgraphs based on 1 model, then run remaining subgraphs through second model",
          "gnn-functionality: attention: mlp soft attention",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "subgraph-model": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: node-transform: cnn w. max pooling",
          "gnn-functionality: architecture: residual connections [fuse w. initial features]",
          "gnn-functionality: attention: mlp soft attention",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "91": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Can Deep Learning Models Learn the Vulnerable Patterns for Vulnerability Detection?",
        "url": "http://dx.doi.org/10.1109/COMPSAC54236.2022.00142",
        "DOI": "10.1109/compsac54236.2022.00142",
        "booktitle": "2022 IEEE 46th Annual Computers, Software, and Applications Conference (COMPSAC)",
        "publisher": "IEEE",
        "author": "Yan, Guoqing and Chen, Sen and Bail, Yude and Li, Xiaohong",
        "year": "2022",
        "month": "jun"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ddg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": [
              "inter and intra method"
            ]
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ddg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "r-gcn-att": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: rgcn",
          "gnn-functionality: attention: attention",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "92": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Enhancing Security Patch Identification by Capturing Structures in Commits",
        "ISSN": "2160-9209",
        "url": "http://dx.doi.org/10.1109/TDSC.2022.3192631",
        "DOI": "10.1109/tdsc.2022.3192631",
        "journal": "IEEE Transactions on Dependable and Secure Computing",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Wu, Bozhi and Liu, Shangqing and Feng, Ruitao and Xie, Xiaofei and Siow, Jingkai and Lin, Shang-Wei",
        "year": "2024",
        "pages": "1\u201315"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "commit message",
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "dependency-parse-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "parse dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "dependency parse graph"
      }
    },
    "features": {
      "dependency-parse-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (embedding layer)"
      ],
      "ast": [
        "node feature (internal): node type (embedding layer)",
        "path: arbitrary ast path",
        "node feature (terminal): node code tokens with sub-tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "misc: rnn: bidirectional lstm",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "93": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "VDHGT: A Source Code Vulnerability Detection Method Based on Heterogeneous Graph Transformer",
        "ISBN": "9783031180675",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-031-18067-5_16",
        "DOI": "10.1007/978-3-031-18067-5_16",
        "booktitle": "Cyberspace Safety and Security",
        "publisher": "Springer International Publishing",
        "author": "Yang, Hongyu and Yang, Haiyun and Zhang, Liang",
        "year": "2022",
        "pages": "217\u2013224"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "vdrg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg[more specific edge types]"
      }
    },
    "features": {
      "vdrg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: custom edge-type aware message passing scheme w. attention",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "94": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A Hybrid Graph Neural Network Approach for Detecting PHP Vulnerabilities",
        "url": "http://dx.doi.org/10.1109/DSC54232.2022.9888816",
        "DOI": "10.1109/dsc54232.2022.9888816",
        "booktitle": "2022 IEEE Conference on Dependable and Secure Computing (DSC)",
        "publisher": "IEEE",
        "author": "Rabheru, Rishi and Hanif, Hazim and Maffeis, Sergio",
        "year": "2022",
        "month": "jun"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gcn",
          "misc: rnn: bidirectional gru",
          "gnn-functionality: pooling: graph: edge pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "95": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICSE \u201922",
        "title": "MVD: memory-related vulnerability detection based on flow-sensitive graph neural networks",
        "url": "http://dx.doi.org/10.1145/3510003.3510219",
        "DOI": "10.1145/3510003.3510219",
        "booktitle": "Proceedings of the 44th International Conference on Software Engineering",
        "publisher": "ACM",
        "author": "Cao, Sicong and Sun, Xiaobing and Bo, Lili and Wu, Rongxin and Li, Bin and Tao, Chuanqi",
        "year": "2022",
        "month": "may",
        "collection": "ICSE \u201922"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none[inter method]"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "fs-gnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: custom message passing scheme",
          "misc: training method: graphsmote for upsampling"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "96": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "BGNN4VD: Constructing Bidirectional Graph Neural-Network for Vulnerability Detection",
        "volume": "136",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2021.106576",
        "DOI": "10.1016/j.infsof.2021.106576",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Cao, Sicong and Sun, Xiaobing and Bo, Lili and Wei, Ying and Li, Bin",
        "year": "2021",
        "month": "aug",
        "pages": "106576"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ccg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ccg": [
        "node feature: node type (label encoding)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "bgnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "97": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "HGVul: A Code Vulnerability Detection Method Based on Heterogeneous Source-Level Intermediate Representation",
        "volume": "2022",
        "ISSN": "1939-0114",
        "url": "http://dx.doi.org/10.1155/2022/1919907",
        "DOI": "10.1155/2022/1919907",
        "journal": "Security and Communication Networks",
        "publisher": "Hindawi Limited",
        "author": "Song, Zihua and Wang, Junfeng and Liu, Shengli and Fang, Zhiyang and Yang, Kaiyuan",
        "editor": "Zhaoquan, Gu",
        "year": "2022",
        "month": "apr",
        "pages": "1\u201313"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph-plus": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "code-property-graph-plus": [
        "node feature: node type (integer)",
        "node feature: node code tokens (word2vec)",
        "subgraphs: subgraphs based on edge type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: custom message passing scheme per edge-type subgraph, using attntion",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: fusion: node-wise mean pooling over subgraphs"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "98": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "VELVET: a noVel Ensemble Learning approach to automatically locate VulnErable sTatements",
        "url": "http://dx.doi.org/10.1109/SANER53432.2022.00114",
        "DOI": "10.1109/saner53432.2022.00114",
        "booktitle": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Ding, Yangruibo and Suneja, Sahil and Zheng, Yunhui and Laredo, Jim and Morari, Alessandro and Kaiser, Gail and Ray, Baishakhi",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)",
        "sequence: linearised graph"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: ensemble",
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: transformer",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "99": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "ReGVD: Revisiting Graph Neural Networks for Vulnerability Detection",
        "url": "http://dx.doi.org/10.1109/ICSE-Companion55297.2022.9793807",
        "DOI": "10.1109/icse-companion55297.2022.9793807",
        "booktitle": "2022 IEEE/ACM 44th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)",
        "publisher": "IEEE",
        "author": "Nguyen, Van-Anh and Nguyen, Dai Quoc and Nguyen, Van and Le, Trung and Tran, Quan Hung and Phung, Dinh",
        "year": "2022",
        "month": "may"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "unique-token-focussed-construction-codebert": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "unique-token-focussed-construction-grapcodebert": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "index-focussed-construction-codebert": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "index-focussed-construction-grapcodebert": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "unique-token-focussed-construction-codebert": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (CodeBERT)"
      ],
      "unique-token-focussed-construction-graphcodebert": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (GraphCodeBERT)"
      ],
      "index-focussed-construction-codebert": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (CodeBERT)"
      ],
      "index-focussed-construction-graphcodebert": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (GraphCodeBERT)"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: residual connections",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "ggnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: architecture: residual connections",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "100": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Inductive Vulnerability Detection via Gated Graph Neural Network",
        "url": "http://dx.doi.org/10.1109/CSCWD54268.2022.9776051",
        "DOI": "10.1109/cscwd54268.2022.9776051",
        "booktitle": "2022 IEEE 25th International Conference on Computer Supported Cooperative Work in Design (CSCWD)",
        "publisher": "IEEE",
        "author": "Wu, Tongshuai and Chen, Liwei and Du, Gewangzi and Zhu, Chenguang and Cui, Ningning and Shi, Gang",
        "year": "2022",
        "month": "may"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: combined sum and max pooling",
          "gnn-functionality: node-transform: sigmoid attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "101": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "AGFL: A Graph Convolutional Neural Network-Based Method for Fault Localization",
        "url": "http://dx.doi.org/10.1109/QRS54544.2021.00077",
        "DOI": "10.1109/qrs54544.2021.00077",
        "booktitle": "2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)",
        "publisher": "IEEE",
        "author": "Qian, Jie and Ju, Xiaolin and Chen, Xiang and Shen, Hao and Shen, Yiheng",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "102": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Vulnerability Detection in C/C++ Source Code With Graph Representation Learning",
        "url": "http://dx.doi.org/10.1109/CCWC51732.2021.9376145",
        "DOI": "10.1109/ccwc51732.2021.9376145",
        "booktitle": "2021 IEEE 11th Annual Computing and Communication Workshop and Conference (CCWC)",
        "publisher": "IEEE",
        "author": "Wu, Yuelong and Lu, Jintian and Zhang, Yunyi and Jin, Shuyuan",
        "year": "2021",
        "month": "jan"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "ggnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "103": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Vu1SPG: Vulnerability detection based on slice property graph representation learning",
        "url": "http://dx.doi.org/10.1109/ISSRE52982.2021.00054",
        "DOI": "10.1109/issre52982.2021.00054",
        "booktitle": "2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)",
        "publisher": "IEEE",
        "author": "Zheng, Weining and Jiang, Yuan and Su, Xiaohong",
        "year": "2021",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "spg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none[inter method]"
      }
    },
    "features": {
      "spg": [
        "edge feature: edge type (n/a)",
        "node feature: node type (one-hot)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: node code tokens (word2vec)",
        "subgraphs: subgraphs based on edge type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: rgcn",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: node-transform: attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "104": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Source Code Vulnerability Detection Based On SAR-GIN",
        "url": "http://dx.doi.org/10.1109/CECIT53797.2021.00202",
        "DOI": "10.1109/cecit53797.2021.00202",
        "booktitle": "2021 2nd International Conference on Electronics, Communications and Information Technology (CECIT)",
        "publisher": "IEEE",
        "author": "Xia, Xiaoling and Wang, Yu and Yang, Ye",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "not-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "not-ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gin",
          "gnn-functionality: node-transform: fourier transform",
          "gnn-functionality: pooling: graph: sigmoid attention sum",
          "gnn-functionality: node-transform: attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "105": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "DeepWukong: Statically Detecting Software Vulnerabilities Using Deep Graph Neural Network",
        "volume": "30",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3436877",
        "DOI": "10.1145/3436877",
        "number": "3",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Cheng, Xiao and Wang, Haoyu and Hua, Jiayi and Xu, Guoai and Sui, Yulei",
        "year": "2021",
        "month": "apr",
        "pages": "1\u201333"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "xfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "xfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "k-gnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: k-gnn",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: top-k pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: top-k pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling",
          "gnn-functionality: pooling: graph: top-k pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "108": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "WCSE 2021",
        "url": "http://dx.doi.org/10.18178/wcse.2021.06.002",
        "DOI": "10.18178/wcse.2021.06.002",
        "booktitle": "Proceedings of 2021 The 11th International Workshop on Computer Science and Engineering",
        "publisher": "WCSE",
        "year": "2021",
        "collection": "WCSE 2021"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: sagpool",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "111": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "author": "Zhou, Yaqin and Liu, Shangqing and Siow, Jingkai and Du, Xiaoning and Liu, Yang",
        "title": "Devign: effective vulnerability identification by learning comprehensive program semantics via graph neural networks",
        "year": "2019",
        "publisher": "Curran Associates Inc.",
        "address": "Red Hook, NY, USA",
        "abstract": "Vulnerability identification is crucial to protect the software systems from attacks for cyber security. It is especially important to localize the vulnerable functions among the source code to facilitate the fix. However, it is a challenging and tedious process, and also requires specialized security expertise. Inspired by the work on manually-defined patterns of vulnerabilities from various code representation graphs and the recent advance on graph neural networks, we propose Devign, a general graph neural network based model for graph-level classification through learning on a rich set of code semantic representations. It includes a novel Conv module to efficiently extract useful features in the learned rich node representations for graph-level classification. The model is trained over manually labeled datasets built on 4 diversified large-scale open-source C projects that incorporate high complexity and variety of real source code instead of synthesis code used in previous works. The results of the extensive evaluation on the datasets demonstrate that Devign outperforms the state of the arts significantly with an average of 10.51\\% higher accuracy and 8.68\\% F1 score, increases averagely 4.66\\% accuracy and 6.37\\% F1 by the Conv module.",
        "booktitle": "Proceedings of the 33rd International Conference on Neural Information Processing Systems",
        "articleno": "915",
        "numpages": "11"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: node type (label encoding)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "devign": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "misc: attention: sigmoid soft self-attention",
          "gnn-functionality: pooling: graph: conv w. max pooling over node feature matrix"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "112": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Detection of Variable Misuse Using Static Analysis Combined with Machine Learning",
        "url": "http://dx.doi.org/10.1109/ISPRAS47671.2019.00009",
        "DOI": "10.1109/ispras47671.2019.00009",
        "booktitle": "2019 Ivannikov Ispras Open Conference (ISPRAS)",
        "publisher": "IEEE",
        "author": "Morgachev, Gleb and Ignatyev, Valery and Belevantsev, Andrey",
        "year": "2019",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature (terminal): node code tokens (word2vec)",
        "node feature (internal): node type (word2vec)",
        "node feature (terminal): node type (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: unclear",
          "base-type: gnn",
          "gnn-functionality: gnn: custom edge-type aware message passing scheme w. lstm for node history"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "113": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Combining Graph-Based Learning With Automated Data Collection for Code Vulnerability Detection",
        "volume": "16",
        "ISSN": "1556-6021",
        "url": "http://dx.doi.org/10.1109/TIFS.2020.3044773",
        "DOI": "10.1109/tifs.2020.3044773",
        "journal": "IEEE Transactions on Information Forensics and Security",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Wang, Huanting and Ye, Guixin and Tang, Zhanyong and Tan, Shin Hwei and Huang, Songfang and Fang, Dingyi and Feng, Yansong and Bian, Lizhong and Wang, Zheng",
        "year": "2021",
        "pages": "1943\u20131958"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: node code tokens (word2vec)",
        "node feature: node type (word2vec)",
        "node feature: types of program elements (word2vec)",
        "subgraphs: subgraphs based on edge type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: gnn: ggnn-based inter-graph messaging [between \"same\" node] w. sigmoidal gating",
          "gnn-functionality: pooling: graph: unspecified",
          "n/a"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "114": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "DeepBalance: Deep-Learning and Fuzzy Oversampling for Vulnerability Detection",
        "ISSN": "1941-0034",
        "url": "http://dx.doi.org/10.1109/TFUZZ.2019.2958558",
        "DOI": "10.1109/tfuzz.2019.2958558",
        "journal": "IEEE Transactions on Fuzzy Systems",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Liu, Shigang and Lin, Guanjun and Han, Qing-Long and Wen, Sheng and Zhang, Jun and Xiang, Yang",
        "year": "2019",
        "pages": "1\u20131"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "unclear",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "rf": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      },
      "embedding-model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: training method: trained on same task as final classifier to learn embeddings for said classifier",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "116": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "CCS \u201917",
        "title": "POSTER: Vulnerability Discovery with Function Representation Learning from Unlabeled Projects",
        "url": "http://dx.doi.org/10.1145/3133956.3138840",
        "DOI": "10.1145/3133956.3138840",
        "booktitle": "Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security",
        "publisher": "ACM",
        "author": "Lin, Guanjun and Zhang, Jun and Luo, Wei and Pan, Lei and Xiang, Yang",
        "year": "2017",
        "month": "oct",
        "collection": "CCS \u201917"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      },
      "proxy-model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: training method: training on proxy task to learn embeddings for other model",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "118": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Slice-Based Code Change Representation Learning",
        "url": "http://dx.doi.org/10.1109/SANER56733.2023.00038",
        "DOI": "10.1109/saner56733.2023.00038",
        "booktitle": "2023 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Zhang, Fengyi and Chen, Bihuan and Zhao, Yufei and Peng, Xin",
        "year": "2023",
        "month": "mar"
      }
    },
    "domains": [
      "misc (code change embedding)"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "node representing cfg",
            "details": [],
            "modifiers": []
          },
          {
            "value": "nodes representing control flow paths",
            "details": [],
            "modifiers": []
          },
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          },
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "graph to path",
            "details": [],
            "modifiers": []
          },
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          },
          {
            "value": "changed node",
            "details": [
              "old vs new"
            ],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "connectivity: adjacency matrix",
        "node feature: node code tokens (word embedding)",
        "sequence: linearised graph"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: embedding-model-with-pretraining",
          "base-type: transformer",
          "gnn-functionality: attention: connectivity: mask matrix",
          "gnn-functionality: attention: connectivity: 1-hop neighbours",
          "gnn-functionality: attention: node positional encoding"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "119": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Using Large-scale Heterogeneous Graph Representation Learning for Code Review Recommendations at Microsoft",
        "url": "http://dx.doi.org/10.1109/ICSE-SEIP58684.2023.00020",
        "DOI": "10.1109/icse-seip58684.2023.00020",
        "booktitle": "2023 IEEE/ACM 45th International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)",
        "publisher": "IEEE",
        "author": "Zhang, Jiyang and Maddila, Chandra and Bairi, Ram and Bird, Christian and Raizada, Ujjwal and Agrawal, Apoorva and Jhawar, Yamini and Herzig, Kim and van Deursen, Arie",
        "year": "2023",
        "month": "may"
      }
    },
    "domains": [
      "misc (developer recommendation)"
    ],
    "artefacts": [
      "bug reports/issuses/work items",
      "user data (e.g. github)",
      "repository",
      "source code (file)"
    ],
    "graphs": {
      "socio-technical-graph": {
        "vertices": [
          {
            "value": "pull request",
            "details": [],
            "modifiers": []
          },
          {
            "value": "work item",
            "details": [],
            "modifiers": []
          },
          {
            "value": "author",
            "details": [],
            "modifiers": []
          },
          {
            "value": "reviewer",
            "details": [],
            "modifiers": []
          },
          {
            "value": "source code file",
            "details": [],
            "modifiers": []
          },
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          },
          {
            "value": "token",
            "details": [],
            "modifiers": [
              "PR"
            ]
          }
        ],
        "edges": [
          {
            "value": "creates",
            "details": [],
            "modifiers": []
          },
          {
            "value": "reviewed",
            "details": [],
            "modifiers": []
          },
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          },
          {
            "value": "PR changes file",
            "details": [],
            "modifiers": []
          },
          {
            "value": "PR linked to work item",
            "details": [],
            "modifiers": []
          },
          {
            "value": "reviewer comments on PR",
            "details": [],
            "modifiers": []
          },
          {
            "value": "work item parent of work item",
            "details": [],
            "modifiers": []
          },
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "socio-technical-graph": [
        "graph: graph (uses node features)",
        "unclear"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: rgcn"
        ],
        "classification-regression-granularity": "link prediction",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "120": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICSE \u201922",
        "title": "FIRA: &lt;u&gt;fi&lt;/u&gt;ne-grained g&lt;u&gt;ra&lt;/u&gt;ph-based code change representation for automated commit message generation",
        "url": "http://dx.doi.org/10.1145/3510003.3510069",
        "DOI": "10.1145/3510003.3510069",
        "booktitle": "Proceedings of the 44th International Conference on Software Engineering",
        "publisher": "ACM",
        "author": "Dong, Jinhao and Lou, Yiling and Zhu, Qihao and Sun, Zeyu and Li, Zhilin and Zhang, Wenjie and Hao, Dan",
        "year": "2022",
        "month": "may",
        "collection": "ICSE \u201922"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          },
          {
            "value": "edit operation",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "edit",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: architecture: gnn layers with residual connections",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "121": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Automatic bug localization using a combination of deep learning and model transformation through node classification",
        "volume": "31",
        "ISSN": "1573-1367",
        "url": "http://dx.doi.org/10.1007/s11219-023-09625-5",
        "DOI": "10.1007/s11219-023-09625-5",
        "number": "4",
        "journal": "Software Quality Journal",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Yousofvand, Leila and Soleimani, Seyfollah and Rafe, Vahid",
        "year": "2023",
        "month": "mar",
        "pages": "1045\u20131063"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: node type (terminal, nonterminal, value) (not specified)",
        "graph: graph (uses node features)",
        "node feature (internal): node type (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: graphsage"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "123": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ISSTA \u201923",
        "title": "Detecting Condition-Related Bugs with Control Flow Graph Neural Network",
        "url": "http://dx.doi.org/10.1145/3597926.3598142",
        "DOI": "10.1145/3597926.3598142",
        "booktitle": "Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis",
        "publisher": "ACM",
        "author": "Zhang, Jian and Wang, Xu and Zhang, Hongyu and Sun, Hailong and Liu, Xudong and Hu, Chunming and Liu, Yang",
        "year": "2023",
        "month": "jul",
        "collection": "ISSTA \u201923"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "node feature: node code tokens (embedding layer)",
        "paths: path in graph"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "gnn-functionality: node-transform: bidirectional lstm",
          "misc: pooling: attention sum",
          "gnn-functionality: rnn: lstm over linearised nodes"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "125": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICCAI 2023",
        "title": "Software Defect Prediction using Multi-scale Structural Information",
        "url": "http://dx.doi.org/10.1145/3594315.3594371",
        "DOI": "10.1145/3594315.3594371",
        "booktitle": "Proceedings of the 2023 9th International Conference on Computing and Artificial Intelligence",
        "publisher": "ACM",
        "author": "Tang, Fanggeng and He, Pan",
        "year": "2023",
        "month": "mar",
        "collection": "ICCAI 2023"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gin",
          "gnn-functionality: misc: transformer encoder over nodes",
          "misc: transformer: transformer encoder"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "126": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Multi\u2010graph learning\u2010based software defect location",
        "volume": "36",
        "ISSN": "2047-7481",
        "url": "http://dx.doi.org/10.1002/smr.2552",
        "DOI": "10.1002/smr.2552",
        "number": "4",
        "journal": "Journal of Software: Evolution and Process",
        "publisher": "Wiley",
        "author": "Yin, Ying and Shi, Yucen and Zhao, Yuhai and Wahab, Fazal",
        "year": "2023",
        "month": "mar"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "bug reports/issuses/work items"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "graph feature vector: embedding (graph2vec w. k-medoids)"
      ],
      "n/a": [
        "other: bug report (word2vec)",
        "other: source code (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn",
          "base-type: mlp"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      }
    }
  },
  "127": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "IJCAI-2023",
        "title": "Capturing the Long-Distance Dependency in the Control Flow Graph via Structural-Guided Attention for Bug Localization",
        "url": "http://dx.doi.org/10.24963/ijcai.2023/249",
        "DOI": "10.24963/ijcai.2023/249",
        "booktitle": "Proceedings of the Thirty-Second International Joint Conference on Artificial Intelligence",
        "publisher": "International Joint Conferences on Artificial Intelligence Organization",
        "author": "Ma, Yi-Fan and Du, Yali and Li, Ming",
        "year": "2023",
        "month": "aug",
        "pages": "2242\u20132250",
        "collection": "IJCAI-2023"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "bug reports/issuses/work items"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "connectivity: mask matrix",
        "node feature: node code tokens (CodeBERT)"
      ],
      "n/a": [
        "other: bug report (n/a)",
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: transformer",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer [codebert]",
          "misc: transformer: transformer encoder",
          "gnn-functionality: attention: connectivity: mask matrix"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "128": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Context-Aware Code Change Embedding for Better Patch Correctness Assessment",
        "volume": "31",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3505247",
        "DOI": "10.1145/3505247",
        "number": "3",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Lin, Bo and Wang, Shangwen and Wen, Ming and Mao, Xiaoguang",
        "year": "2022",
        "month": "may",
        "pages": "1\u201329"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (embedding layer)",
        "path: leaf to leaf",
        "node feature (terminal): node code tokens with sub-tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: rnn: lstm",
          "misc: attention: self-attention"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "129": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Software defect prediction with semantic and structural information of codes based on Graph Neural Networks",
        "volume": "152",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2022.107057",
        "DOI": "10.1016/j.infsof.2022.107057",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Zhou, Chunying and He, Peng and Zeng, Cheng and Ma, Ju",
        "year": "2022",
        "month": "dec",
        "pages": "107057"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "source code (file)"
    ],
    "graphs": {
      "ast-within": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "ast-cross": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "class-dependency-network": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (embedding layer)",
        "sequence: linearised ast"
      ],
      "class-dependency-network": [
        "graph: graph (uses node features)",
        "node feature: node embedding (node2vec)"
      ]
    },
    "models": {
      "encoder": {
        "tags": [
          "base-type: gnn",
          "mode: embedding-model-with-pretraining",
          "base-type: cnn",
          "gnn-functionality: gnn: gcn",
          "misc: pooling: max pooling",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/graph"
      },
      "mlp": {
        "tags": [
          "base-type: mlp",
          "mode: classification-regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      },
      "random-forest": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      }
    }
  },
  "130": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Enhancing bug localization with bug report decomposition and code hierarchical network",
        "volume": "248",
        "ISSN": "0950-7051",
        "url": "http://dx.doi.org/10.1016/j.knosys.2022.108741",
        "DOI": "10.1016/j.knosys.2022.108741",
        "journal": "Knowledge-Based Systems",
        "publisher": "Elsevier BV",
        "author": "Zhu, Ziye and Tong, Hanghang and Wang, Yu and Li, Yun",
        "year": "2022",
        "month": "jul",
        "pages": "108741"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "bug reports/issuses/work items"
    ],
    "graphs": {
      "code-non": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg + ast subtree"
      }
    },
    "features": {
      "code-non": [
        "graph: graph (uses node features)",
        "node feature: node code tokens with sub-tokens (n/a)"
      ],
      "big clues (extracted from bug reports)": [
        "unclear"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "misc: model: supervised: neural: textcnn",
          "gnn-functionality: gnn: dgp (dense graph propagation)",
          "misc: misc: biaffine classifier",
          "gnn-functionality: pooling: graph paths: mean pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "131": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "The flowing nature matters: feature learning from the control flow graph of source code for bug localization",
        "volume": "111",
        "ISSN": "1573-0565",
        "url": "http://dx.doi.org/10.1007/s10994-021-06078-4",
        "DOI": "10.1007/s10994-021-06078-4",
        "number": "3",
        "journal": "Machine Learning",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Ma, Yi-Fan and Li, Ming",
        "year": "2022",
        "month": "feb",
        "pages": "853\u2013870"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "bug reports/issuses/work items"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "n/a": [
        "other: bug report (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: node-transform: cnn w. max pooling",
          "gnn-functionality: gnn: custom message passing scheme",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "132": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SEKE2022",
        "title": "Data Selection for Cross-Project Defect Prediction with Local and Global Features of Source Code",
        "ISSN": "2325-9000",
        "url": "http://dx.doi.org/10.18293/SEKE2022-086",
        "DOI": "10.18293/seke2022-086",
        "booktitle": "Proceedings of the 34th International Conference on Software Engineering and Knowledge Engineering",
        "publisher": "KSI Research Inc.",
        "author": "Deng, Xuan and He, Peng and Zhou, Chun Ying",
        "year": "2022",
        "month": "jul",
        "collection": "SEKE2022"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "source code (file)"
    ],
    "graphs": {
      "ast-within": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "class-dependency-network": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "ast-within": [
        "sequence: linearised ast"
      ],
      "class-dependency-network": [
        "unclear"
      ]
    },
    "models": {
      "ast-encoder": {
        "tags": [
          "base-type: cnn",
          "mode: classification-regression",
          "misc: pooling: max pooling",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "133": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Graph Neural Network for Source Code Defect Prediction",
        "volume": "10",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/ACCESS.2022.3144598",
        "DOI": "10.1109/access.2022.3144598",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Sikic, Lucija and Kurdija, Adrian Satja and Vladimir, Klemo and Silic, Marin",
        "year": "2022",
        "pages": "10402\u201310415"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcnn",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: mincutpool"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "134": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "MPT\u2010embedding: An unsupervised representation learning of code for software defect prediction",
        "volume": "33",
        "ISSN": "2047-7481",
        "url": "http://dx.doi.org/10.1002/smr.2330",
        "DOI": "10.1002/smr.2330",
        "number": "4",
        "journal": "Journal of Software: Evolution and Process",
        "publisher": "Wiley",
        "author": "Shi, Ke and Lu, Yang and Liu, Guangliang and Wei, Zhenchun and Chang, Jingfei",
        "year": "2020",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (encoded using cbow-like network)",
        "unclear",
        "node feature: node type (embedding learned using cbow)",
        "node feature matrix"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn",
          "misc: pooling: max pooling",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      },
      "graph-cbow": {
        "tags": [
          "base-type: mlp",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "135": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Software Defect Prediction for Specific Defect Types based on Augmented Code Graph Representation",
        "url": "http://dx.doi.org/10.1109/DSA52907.2021.00097",
        "DOI": "10.1109/dsa52907.2021.00097",
        "booktitle": "2021 8th International Conference on Dependable Systems and Their Applications (DSA)",
        "publisher": "IEEE",
        "author": "Xu, Jiaxi and Ai, Jun and Shi, Tao",
        "year": "2021",
        "month": "aug"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "augmented-code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-code-property-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (integer)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "graphsage": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: graphsage"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "sgc": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: sgc"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gin": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gin"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "137": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "PathPair2Vec: An AST path pair-based code representation method for defect prediction",
        "volume": "59",
        "ISSN": "2590-1184",
        "url": "http://dx.doi.org/10.1016/j.cola.2020.100979",
        "DOI": "10.1016/j.cola.2020.100979",
        "journal": "Journal of Computer Languages",
        "publisher": "Elsevier BV",
        "author": "Shi, Ke and Lu, Yang and Chang, Jingfei and Wei, Zhen",
        "year": "2020",
        "month": "aug",
        "pages": "100979"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code (multiple files/project)"
    ],
    "graphs": {
      "ast-program": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "ast-method": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast-program": [
        "node feature (internal): node type (embedding layer)",
        "node feature (terminal): node code tokens with sub-tokens (embedding layer)",
        "node feature (terminal): node type with sub-tokens (embedding layer)",
        "path: terminal to internal"
      ],
      "ast-method": [
        "node feature (internal): node type (embedding layer)",
        "node feature (terminal): node type with sub-tokens (embedding layer)",
        "node feature (terminal): node code tokens with sub-tokens (embedding layer)",
        "path: terminal to internal"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: pooling: attention sum",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "138": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "CB-Path2Vec: A Cross Block Path Based Representation for Software Defect Prediction",
        "url": "http://dx.doi.org/10.1109/ICCC51575.2020.9344956",
        "DOI": "10.1109/iccc51575.2020.9344956",
        "booktitle": "2020 IEEE 6th International Conference on Computer and Communications (ICCC)",
        "publisher": "IEEE",
        "author": "Zhang, Xiyu and Lu, Yang and Shi, Ke",
        "year": "2020",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (terminal): node type with sub-tokens (n/a)",
        "node feature (internal): node type (n/a)",
        "path: arbitrary ast path",
        "node feature (terminal): node code tokens with sub-tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: fusion: attention sum",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "139": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "author": "Yasunaga, Michihiro and Liang, Percy",
        "title": "Graph-based, self-supervised program repair from diagnostic feedback",
        "year": "2020",
        "publisher": "JMLR.org",
        "abstract": "We consider the problem of learning to repair programs from diagnostic feedback (e.g., compiler error messages). Program repair is challenging for two reasons: First, it requires reasoning and tracking symbols across source code and diagnostic feedback. Second, labeled datasets available for program repair are relatively small. In this work, we propose novel solutions to these two challenges. First, we introduce a program-feedback graph, which connects symbols relevant to program repair in source code and diagnostic feedback, and then apply a graph neural network on top to model the reasoning process. Second, we present a self-supervised learning paradigm for program repair that leverages unlabeled programs available online to create a large amount of extra program repair examples, which we use to pre-train our models. We evaluate our proposed approach on two applications: correcting introductory programming assignments (DeepFix dataset) and correcting the outputs of program synthesis (SPoC dataset). Our final system, DrRepair, significantly outperforms prior work, achieving 68.2\\% full repair rate on DeepFix (+22.9\\% over the prior best), and 48.4\\% synthesis success rate on SPoC (+3.7\\% over the prior best).",
        "booktitle": "Proceedings of the 37th International Conference on Machine Learning",
        "articleno": "1001",
        "numpages": "10",
        "series": "ICML'20"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "compiler error information"
    ],
    "graphs": {
      "program-feedback-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "edges between identical tokens",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "program-feedback-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (embedding layer)"
      ],
      "n/a": [
        "other: compiler error line number (integer)",
        "other: compiler error message (embedding layer)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "mode: unclear",
          "base-type: gnn",
          "n/a",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: node-transform: lstm",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "140": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning Feature Representations from Change Dependency Graphs for Defect Prediction",
        "url": "http://dx.doi.org/10.1109/ISSRE.2017.30",
        "DOI": "10.1109/issre.2017.30",
        "booktitle": "2017 IEEE 28th International Symposium on Software Reliability Engineering (ISSRE)",
        "publisher": "IEEE",
        "author": "Loyola, Pablo and Matsuo, Yutaka",
        "year": "2017",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "code-change-genealogy": {
        "vertices": [
          {
            "value": "code change",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "change dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "code change genealogy"
      }
    },
    "features": {
      "code-change-genealogy": [
        "paths: paths using random walk"
      ],
      "n/a": [
        "other: changed source code tokens (n/a)"
      ]
    },
    "models": {
      "cbow": {
        "tags": [
          "base-type: cbow",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/random-walk"
      },
      "c-skipgram": {
        "tags": [
          "base-type: skipgram",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/random walk"
      },
      "logistic-regression": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "downstream/node-embedding"
      },
      "svm": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "downstream/node-embedding"
      },
      "nn": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "downstream/node-embedding"
      },
      "semantic-model": {
        "tags": [
          "mode: other",
          "base-type: other",
          "base-type: cbow",
          "base-type: skipgram",
          "misc: word2vec: cbow/skipgram/doc2vec hybrid"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/random-walk"
      }
    }
  },
  "141": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Graph Neural Networks for Mapping Variables Between Programs",
        "ISBN": "9781643684376",
        "ISSN": "1879-8314",
        "url": "http://dx.doi.org/10.3233/FAIA230468",
        "DOI": "10.3233/faia230468",
        "booktitle": "ECAI 2023",
        "publisher": "IOS Press",
        "author": "Orvalho, Pedro and Piepenbrock, Jelle and Janota, Mikol\u00e1\u0161 and Manquinho, Vasco",
        "year": "2023",
        "month": "sep"
      }
    },
    "domains": [
      "misc (mapping of variables between programs)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "variable",
            "details": [],
            "modifiers": [
              "unique"
            ]
          }
        ],
        "edges": [
          {
            "value": "all occurrences of a variable connected to the unique variable node",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ordering of nodes accessing the same variable",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: rgcn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "142": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Assessing the\u00a0Importance of\u00a0Global Relationships for\u00a0Source Code Analysis Using Graph Neural Networks",
        "ISBN": "9783031355011",
        "ISSN": "2367-3389",
        "url": "http://dx.doi.org/10.1007/978-3-031-35501-1_44",
        "DOI": "10.1007/978-3-031-35501-1_44",
        "booktitle": "Intelligent Systems Design and Applications",
        "publisher": "Springer Nature Switzerland",
        "author": "Romanov, Vitaly and Ivanov, Vladimir",
        "year": "2023",
        "pages": "437\u2013447"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "global-graph": {
        "vertices": [
          {
            "value": "function",
            "details": [],
            "modifiers": []
          },
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "class field",
            "details": [],
            "modifiers": []
          },
          {
            "value": "module",
            "details": [],
            "modifiers": []
          },
          {
            "value": "method",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "define",
            "details": [],
            "modifiers": []
          },
          {
            "value": "type use",
            "details": [],
            "modifiers": []
          },
          {
            "value": "import",
            "details": [],
            "modifiers": []
          },
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "global-graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": "link prediction",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "rgcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: rgcn"
        ],
        "classification-regression-granularity": "link prediction",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "143": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Unsupervised Classifying of Software Source Code Using Graph Neural Networks",
        "url": "http://dx.doi.org/10.23919/FRUCT.2019.8711909",
        "DOI": "10.23919/fruct.2019.8711909",
        "booktitle": "2019 24th Conference of Open Innovations Association (FRUCT)",
        "publisher": "IEEE",
        "author": "Vytovtov, Petr and Chuvilin, Kirill",
        "year": "2019",
        "month": "apr"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "graph: graph (uses node features. uses edge features. has global graph feature)",
        "edge feature: edge type (one-hot)",
        "unclear"
      ],
      "augmented ast": [
        "node feature: node type (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: custom message passing scheme with node, edge, and global embeddings"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "144": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning to Represent Programs with Graphs",
        "author": "Miltiadis Allamanis and Marc Brockschmidt and Mahmoud Khademi",
        "booktitle": "International Conference on Learning Representations",
        "year": "2018",
        "url": "https://openreview.net/forum?id=BJOFETxR-"
      }
    },
    "domains": [
      "defects & vulnerabilities",
      "program element name prediction"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature (internal): node type (n/a)",
        "graph: graph (uses node features)",
        "node feature (terminal): node code tokens with sub-tokens (n/a)"
      ]
    },
    "models": {
      "ggnn-var-naming": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "misc: rnn: gru",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "ggnn-var-misuse": {
        "tags": [
          "mode: unclear",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "145": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Summarizing source code with Heterogeneous Syntax Graph and dual position",
        "volume": "60",
        "ISSN": "0306-4573",
        "url": "http://dx.doi.org/10.1016/j.ipm.2023.103415",
        "DOI": "10.1016/j.ipm.2023.103415",
        "number": "5",
        "journal": "Information Processing &amp; Management",
        "publisher": "Elsevier BV",
        "author": "Guo, Juncai and Liu, Jin and Liu, Xiao and Wan, Yao and Li, Li",
        "year": "2023",
        "month": "sep",
        "pages": "103415"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "hsg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "hsg": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)",
        "other: positional information of tokens/program elements"
      ]
    },
    "models": {
      "het-sum": {
        "tags": [
          "base-type: transformer",
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: graphsage modified for heterogeneous graphs",
          "misc: transformer: transformer decoder",
          "misc: transformer: transformer encoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "146": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Summarizing source code through heterogeneous feature fusion and extraction",
        "volume": "103",
        "ISSN": "1566-2535",
        "url": "http://dx.doi.org/10.1016/j.inffus.2023.102058",
        "DOI": "10.1016/j.inffus.2023.102058",
        "journal": "Information Fusion",
        "publisher": "Elsevier BV",
        "author": "Guo, Juncai and Liu, Jin and Liu, Xiao and Li, Li",
        "year": "2024",
        "month": "mar",
        "pages": "102058"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "hsg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "hsg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens with sub-tokens (embedding layer)"
      ]
    },
    "models": {
      "het-cos": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: gnn",
          "base-type: transformer",
          "misc: transformer: transformer decoder",
          "gnn-functionality: transformer: transformer encoder w. heterogeneous graphsage and concatenation pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "147": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CoSS: leveraging statement semantics for code summarization",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2023.3256362",
        "DOI": "10.1109/tse.2023.3256362",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Shi, Chaochen and Cai, Borui and Zhao, Yao and Gao, Longxiang and Sood, Keshav and Xiang, Yong",
        "year": "2023",
        "pages": "1\u201315"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "n/a": [
        "other: source code with sub-tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: node-transform: bidirectional lstm",
          "misc: transformer: transformer encoder",
          "misc: attention: multi-head attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "148": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Structure and Sequence Aligned Code Summarization with Prefix and Suffix Balanced Strategy",
        "volume": "25",
        "ISSN": "1099-4300",
        "url": "http://dx.doi.org/10.3390/e25040570",
        "DOI": "10.3390/e25040570",
        "number": "4",
        "journal": "Entropy",
        "publisher": "MDPI AG",
        "author": "Zeng, Jianhui and Qu, Zhiheng and Cai, Bo",
        "year": "2023",
        "month": "mar",
        "pages": "570"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "connectivity: adjacency matrix",
        "unclear"
      ],
      "n/a": [
        "other: source code with sub-tokens (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: attention: multi-head self-attention",
          "misc: attention: attention",
          "misc: rnn: lstm",
          "gnn-functionality: attention: node matrix",
          "gnn-functionality: attention: connectivity"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "149": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "<scp>PyScribe</scp>\u2013Learning to describe python code",
        "volume": "54",
        "ISSN": "1097-024X",
        "url": "http://dx.doi.org/10.1002/spe.3291",
        "DOI": "10.1002/spe.3291",
        "number": "3",
        "journal": "Software: Practice and Experience",
        "publisher": "Wiley",
        "author": "Guo, Juncai and Liu, Jin and Liu, Xiao and Wan, Yao and Zhao, Yanjie and Li, Li and Liu, Kui and Klein, Jacques and Bissyand\u00e9, Tegawend\u00e9 F.",
        "year": "2023",
        "month": "dec",
        "pages": "501\u2013527"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: linearised ast",
        "edge feature: inheritted node feature",
        "edge feature: inheritted node feature",
        "node feature: node positional information",
        "node feature: node positional information",
        "edge feature: inheritted node feature",
        "node feature: node positional information",
        "sequence: ast edge sequence"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "misc: transformer: transformer encoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "150": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CLG-Trans: Contrastive learning for code summarization via graph attention-based transformer",
        "volume": "226",
        "ISSN": "0167-6423",
        "url": "http://dx.doi.org/10.1016/j.scico.2023.102925",
        "DOI": "10.1016/j.scico.2023.102925",
        "journal": "Science of Computer Programming",
        "publisher": "Elsevier BV",
        "author": "Zeng, Jianwei and He, Yutong and Zhang, Tao and Xu, Zhou and Han, Qiang",
        "year": "2023",
        "month": "mar",
        "pages": "102925"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "n/a",
          "gnn-functionality: gnn: gat",
          "misc: transformer: transformer encoder [roberta]",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "151": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "ACAGNN: Source Code Representation Based on\u00a0Fine-Grained Multi-view Program Features",
        "ISBN": "9789819923854",
        "ISSN": "1865-0937",
        "url": "http://dx.doi.org/10.1007/978-981-99-2385-4_36",
        "DOI": "10.1007/978-981-99-2385-4_36",
        "booktitle": "Computer Supported Cooperative Work and Social Computing",
        "publisher": "Springer Nature Singapore",
        "author": "Li, Ji and Wang, Xiao and Lyu, Chen",
        "year": "2023",
        "pages": "476\u2013487"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      },
      "adg": {
        "vertices": [
          {
            "value": "api",
            "details": [
              "e.g. method"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "api dependency graph"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: instruction (one-hot)"
      ],
      "adg": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "n/a",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "153": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Enhancing source code summarization from structure and semantics",
        "url": "http://dx.doi.org/10.1109/IJCNN54540.2023.10191872",
        "DOI": "10.1109/ijcnn54540.2023.10191872",
        "booktitle": "2023 International Joint Conference on Neural Networks (IJCNN)",
        "publisher": "IEEE",
        "author": "Lu, Xurong and Niu, Jun",
        "year": "2023",
        "month": "jun"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "next subtree",
            "details": [
              "connect nodes on same level"
            ],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: heterogeneous gat",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "154": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Code comment generation based on graph neural network enhanced transformer model for code understanding in open-source software ecosystems",
        "volume": "29",
        "ISSN": "1573-7535",
        "url": "http://dx.doi.org/10.1007/s10515-022-00341-1",
        "DOI": "10.1007/s10515-022-00341-1",
        "number": "2",
        "journal": "Automated Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Kuang, Li and Zhou, Cong and Yang, Xiaoxian",
        "year": "2022",
        "month": "jun"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "g-trans": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: ggnn",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "g-trans-modified": {
        "tags": [
          "base-type: gnn",
          "base-type: transformer",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: ggnn",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "155": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Suggesting method names based on graph neural network with salient information modelling",
        "volume": "39",
        "ISSN": "1468-0394",
        "url": "http://dx.doi.org/10.1111/exsy.13030",
        "DOI": "10.1111/exsy.13030",
        "number": "6",
        "journal": "Expert Systems",
        "publisher": "Wiley",
        "author": "Kuang, Li and Ge, Fan and Zhang, Lingyan",
        "year": "2022",
        "month": "may"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "n/a",
          "gnn-functionality: gnn: ggnn",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "156": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Turn tree into graph: Automatic code review via simplified AST driven graph convolutional network",
        "volume": "252",
        "ISSN": "0950-7051",
        "url": "http://dx.doi.org/10.1016/j.knosys.2022.109450",
        "DOI": "10.1016/j.knosys.2022.109450",
        "journal": "Knowledge-Based Systems",
        "publisher": "Elsevier BV",
        "author": "Wu, Bingting and Liang, Bin and Zhang, Xiaofang",
        "year": "2022",
        "month": "sep",
        "pages": "109450"
      }
    },
    "domains": [
      "misc (automated code review (accept/reject))"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)",
      "source code (file)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "unclear"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "157": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Automatic source code summarization with graph attention networks",
        "volume": "188",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2022.111257",
        "DOI": "10.1016/j.jss.2022.111257",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Zhou, Yu and Shen, Juanjuan and Zhang, Xiaoqing and Yang, Wenhua and Han, Tingting and Chen, Taolue",
        "year": "2022",
        "month": "jun",
        "pages": "111257"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: rnn: gru over linearised nodes",
          "misc: rnn: bidirectional gru",
          "misc: rnn: gru"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "158": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Method Name Generation Based on Code Structure Guidance",
        "url": "http://dx.doi.org/10.1109/SANER53432.2022.00127",
        "DOI": "10.1109/saner53432.2022.00127",
        "booktitle": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Qu, Zhiheng and Hu, Yi and Zeng, Jianhui and Cai, Bo and Yang, Shun",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "crg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "crg": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "n/a",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: gnn: rgcn",
          "gnn-functionality: node-transform: gru",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "159": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Modeling Hierarchical Syntax Structure with Triplet Position for Source Code Summarization",
        "url": "http://dx.doi.org/10.18653/v1/2022.acl-long.37",
        "DOI": "10.18653/v1/2022.acl-long.37",
        "booktitle": "Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)",
        "publisher": "Association for Computational Linguistics",
        "author": "Guo, Juncai and Liu, Jin and Wan, Yao and Li, Li and Zhou, Pingyi",
        "year": "2022"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)",
        "node feature: node positional information",
        "node feature: node positional information",
        "node feature: node positional information"
      ],
      "other": [
        "other: source code (n/a)"
      ],
      "n/a": [
        "other: positional information of tokens/program elements"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: graphsage",
          "gnn-functionality: architecture: gnn layers with residual connections",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "160": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "HELoC: hierarchical contrastive learning of source code representation",
        "url": "http://dx.doi.org/10.1145/3524610.3527896",
        "DOI": "10.1145/3524610.3527896",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Wang, Xiao and Wu, Qiong and Zhang, Hongyu and Lyu, Chen and Jiang, Xue and Zheng, Zhuoran and Lyu, Lei and Hu, Songlin",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "path: path from root to node",
        "node feature: node type (jointly embedded using document embedding)",
        "node feature: node code tokens (jointly embedded using document embedding)",
        "node feature: node positional information (jointly embedded using document embedding)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: embedding-model-with-pretraining",
          "gnn-functionality: transformer: transformer, but q, k, v and fnn layer replaced with gcn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "161": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Summarizing Source Code from Structure and Context",
        "url": "http://dx.doi.org/10.1109/IJCNN55064.2022.9892013",
        "DOI": "10.1109/ijcnn55064.2022.9892013",
        "booktitle": "2022 International Joint Conference on Neural Networks (IJCNN)",
        "publisher": "IEEE",
        "author": "Hou, Shifu and Chen, Lingwei and Ye, Yanfang",
        "year": "2022",
        "month": "jul"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (one-hot)",
        "node feature (root/terminal): node code tokens (embedding layer)",
        "path: path from root to node",
        "node feature: node positional information",
        "path feature: left-to-right position of path"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: other",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "162": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Automatically Generating Code Comment Using Heterogeneous Graph Neural Networks",
        "url": "http://dx.doi.org/10.1109/SANER53432.2022.00125",
        "DOI": "10.1109/saner53432.2022.00125",
        "booktitle": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Jin, Dun and Liu, Peiyu and Zhu, Zhenfang",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          },
          {
            "value": "token",
            "details": [],
            "modifiers": [
              "unique"
            ]
          }
        ],
        "edges": [
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (embedding layer)",
        "node feature: node code tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "163": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A hybrid code representation learning approach for predicting method names",
        "volume": "180",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2021.111011",
        "DOI": "10.1016/j.jss.2021.111011",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Zhang, Fengyi and Chen, Bihuan and Li, Rongfan and Peng, Xin",
        "year": "2021",
        "month": "oct",
        "pages": "111011"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "edge feature: edge type (n/a)",
        "paths: paths using random walk",
        "node feature: instruction (n/a)",
        "node feature: instruction (n/a)"
      ],
      "n/a": [
        "other: code comment (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/random-walk"
      }
    }
  },
  "164": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Keywords Guided Method Name Generation",
        "url": "http://dx.doi.org/10.1109/ICPC52881.2021.00027",
        "DOI": "10.1109/icpc52881.2021.00027",
        "booktitle": "2021 IEEE/ACM 29th International Conference on Program Comprehension (ICPC)",
        "publisher": "IEEE",
        "author": "Ge, Fan and Kuang, Li",
        "year": "2021",
        "month": "may"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "decoder": {
        "tags": [
          "mode: other",
          "base-type: gnn",
          "n/a",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/decoder"
      },
      "keyword-extractor": {
        "tags": [
          "mode: other",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: weighted sum pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "165": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Retrieval-Augmented Generation for Code Summarization via Hybrid {GNN}",
        "author": "Shangqing Liu and Yu Chen and Xiaofei Xie and Jing Kai Siow and Yang Liu",
        "booktitle": "International Conference on Learning Representations",
        "year": "2021",
        "url": "https://openreview.net/forum?id=zv-typ1gPxA"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node code tokens (embedding layer)",
        "graph: graph (uses node features; uses edge features)"
      ],
      "code-property-gaph": [
        "edge feature: edge type (embedding layer)"
      ],
      "n/a": [
        "other: most similar known entry from knowledge base"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: gnn: hybrid message passing using static and dynamic adjacency matrices",
          "misc: attention: attention",
          "misc: rnn: bidirectional lstm",
          "misc: rnn: lstm",
          "gnn-functionality: dynamic graph: dynamic adjacency matrix using attention",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "166": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Transformer-XL With Graph Neural Network for Source Code Summarization",
        "url": "http://dx.doi.org/10.1109/SMC52423.2021.9658619",
        "DOI": "10.1109/smc52423.2021.9658619",
        "booktitle": "2021 IEEE International Conference on Systems, Man, and Cybernetics (SMC)",
        "publisher": "IEEE",
        "author": "Zhang, Xiaoling and Yang, Shouguo and Duan, Luqian and Lang, Zhe and Shi, Zhiqiang and Sun, Limin",
        "year": "2021",
        "month": "oct"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: direct sum of node embeddings (incl. self) passed through fnn",
          "misc: transformer: transformer encoder [transformer-xl]",
          "misc: misc: node embeddings into transformer"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "167": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "DG-Trans: Automatic Code Summarization via Dynamic Graph Attention-based Transformer",
        "url": "http://dx.doi.org/10.1109/QRS54544.2021.00088",
        "DOI": "10.1109/qrs54544.2021.00088",
        "booktitle": "2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)",
        "publisher": "IEEE",
        "author": "Zeng, Jianwei and Zhang, Tao and Xu, Zhou",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gat variant",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "168": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Hyperbolic Function Embedding: Learning Hierarchical Representation for Functions of Source Code in Hyperbolic Space",
        "volume": "11",
        "ISSN": "2073-8994",
        "url": "http://dx.doi.org/10.3390/sym11020254",
        "DOI": "10.3390/sym11020254",
        "number": "2",
        "journal": "Symmetry",
        "publisher": "MDPI AG",
        "author": "Lu, Mingming and Liu, Yan and Li, Haifeng and Tan, Dingwu and He, Xiaoxian and Bi, Wenjie and Li, Wendbo",
        "year": "2019",
        "month": "feb",
        "pages": "254"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "fcg": {
        "vertices": [
          {
            "value": "function",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "fcg"
      }
    },
    "features": {
      "fcg": [
        "edge feature: weights",
        "graph: graph (uses edge features)"
      ]
    },
    "models": {
      "embedding": {
        "tags": [
          "mode: other",
          "base-type: other",
          "misc: misc: riemannian stochastic gradient descent to compute embedding vector based on hyperbolic loss function"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "169": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Study on Automatic Code Summary Generation Method based on Graph Neural Network",
        "url": "http://dx.doi.org/10.1109/DSA59317.2023.00015",
        "DOI": "10.1109/dsa59317.2023.00015",
        "booktitle": "2023 10th International Conference on Dependable Systems and Their Applications (DSA)",
        "publisher": "IEEE",
        "author": "Du, Changsheng and Li, Yong and Wang, Yue and Yu, Junjie",
        "year": "2023",
        "month": "aug"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (one-hot)"
      ]
    },
    "models": {
      "network": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: gnn",
          "base-type: transformer",
          "gnn-functionality: gnn: gcn",
          "misc: transformer: transformer decoder",
          "misc: transformer: transformer encoder",
          "misc: misc: fuse gnn output w. transformer input"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "170": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SEKE2023",
        "title": "Heterogeneous Directed Hypergraph Neural Network over abstract syntax tree (AST) for Code Classification",
        "ISSN": "2325-9000",
        "url": "http://dx.doi.org/10.18293/SEKE2023-136",
        "DOI": "10.18293/seke2023-136",
        "booktitle": "Proceedings of the 35th International Conference on Software Engineering and Knowledge Engineering",
        "publisher": "KSI Research Inc.",
        "author": "Yang, Guang and Jin, Tiancheng and Dou, Liang",
        "year": "2023",
        "month": "jul",
        "collection": "SEKE2023"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast hyper-edge",
            "details": [],
            "modifiers": [
              "for aggregation"
            ]
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: heterogeneous directed hypergraph convolution [node -> hyper-edge updates w. attention based message aggregation; hyper-edge -> node updates w. attention based message aggregation]",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "171": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Multi-View Graph Representation for Programming Language Processing: An Investigation into Algorithm Detection",
        "volume": "36",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v36i5.20522",
        "DOI": "10.1609/aaai.v36i5.20522",
        "number": "5",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Long, Ting and Xie, Yutong and Chen, Xianyu and Zhang, Weinan and Cao, Qinxiang and Yu, Yong",
        "year": "2022",
        "month": "jun",
        "pages": "5792\u20135799"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "dfg": {
        "vertices": [
          {
            "value": "operands",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      },
      "read-write-graph": {
        "vertices": [
          {
            "value": "operations",
            "details": [],
            "modifiers": []
          },
          {
            "value": "operands",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "combined-graph": {
        "vertices": [
          {
            "value": "operations",
            "details": [],
            "modifiers": []
          },
          {
            "value": "operands",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "dfg": [
        "graph: graph (uses node features)",
        "node feature: operators and/or operands (one-hot)"
      ],
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: operations/control structures (one-hot)"
      ],
      "read-write-graph": [
        "graph: graph (uses node features)",
        "node feature: operators and/or operands (one-hot)"
      ],
      "combined-graph": [
        "graph: graph (uses node features)",
        "node feature: operators and/or operands (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: max pooling",
          "n/a"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "172": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "Learning to represent programs with heterogeneous graphs",
        "url": "http://dx.doi.org/10.1145/3524610.3527905",
        "DOI": "10.1145/3524610.3527905",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Zhang, Kechi and Wang, Wenhan and Zhang, Huangzhao and Li, Ge and Jin, Zhi",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "heterogeneous-program-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "heterogeneous-program-graph": [
        "node feature: node type (embedding layer)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (embedding layer)",
        "node feature: node positional information",
        "node feature: node positional information"
      ]
    },
    "models": {
      "hgt": {
        "tags": [
          "mode: general-model-with-examples",
          "base-type: gnn",
          "gnn-functionality: gnn: custom edge-type aware message passing scheme w. attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "173": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Code Representation Based on\u00a0Hybrid Graph Modelling",
        "ISBN": "9783030923075",
        "ISSN": "1865-0937",
        "url": "http://dx.doi.org/10.1007/978-3-030-92307-5_35",
        "DOI": "10.1007/978-3-030-92307-5_35",
        "booktitle": "Neural Information Processing",
        "publisher": "Springer International Publishing",
        "author": "Wu, Qiong and Jiang, Xue and Zheng, Zhuoran and Gao, Xuejian and Lyu, Chen and Lyu, Lei",
        "year": "2021",
        "pages": "298\u2013306"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "sg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "edfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "sg": [
        "graph: graph (uses node features)",
        "node feature (internal): node type (word2vec)",
        "node feature (terminal): node code tokens (word2vec)",
        "node feature: node positional information",
        "node feature: node positional information"
      ],
      "edfg": [
        "graph: graph (uses node features)",
        "node feature (terminal): node code tokens (word2vec)",
        "node feature (internal): node type (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat w. edge embeddings",
          "gnn-functionality: gnn: gcn w. edge embeddings",
          "gnn-functionality: fusion: node-wise fusion of graphs using gating mechansim",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "two graphs",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "175": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Vulnerability Detection with Graph Simplification and Enhanced Graph Representation Learning",
        "url": "http://dx.doi.org/10.1109/ICSE48619.2023.00191",
        "DOI": "10.1109/icse48619.2023.00191",
        "booktitle": "2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)",
        "publisher": "IEEE",
        "author": "Wen, Xin-Cheng and Chen, Yupan and Gao, Cuiyun and Zhang, Hongyu and Zhang, Jie M. and Liao, Qing",
        "year": "2023",
        "month": "may"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: edge type aware gcn",
          "gnn-functionality: node-matrix-transform: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "176": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "Unified abstract syntax tree representation learning for cross-language program classification",
        "url": "http://dx.doi.org/10.1145/3524610.3527915",
        "DOI": "10.1145/3524610.3527915",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Wang, Kesu and Yan, Meng and Zhang, He and Hu, Haibo",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (embedding layer)",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "misc: rnn: bidirectional lstm",
          "misc: attention: self-attention",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "177": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Student Program Classification Using Gated Graph Attention Neural Network",
        "volume": "9",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/ACCESS.2021.3063475",
        "DOI": "10.1109/access.2021.3063475",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Lu, M. and Wang, Y. and Tan, D. and Zhao, L.",
        "year": "2021",
        "pages": "87857\u201387868"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "fda": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "fda": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn/gat hybrid",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "178": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CoCoAST: Representing Source Code via Hierarchical Splitting and Reconstruction of Abstract Syntax Trees",
        "volume": "28",
        "ISSN": "1573-7616",
        "url": "http://dx.doi.org/10.1007/s10664-023-10378-9",
        "DOI": "10.1007/s10664-023-10378-9",
        "number": "6",
        "journal": "Empirical Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Shi, Ensheng and Wang, Yanlin and Du, Lun and Zhang, Hongyu and Han, Shi and Zhang, Dongmei and Sun, Hongbin",
        "year": "2023",
        "month": "oct"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "subgraphs: subgraphs (subtrees) based on statements",
        "subgraphs: subgraph with placeholder nodes for other subgraphs"
      ],
      "n/a": [
        "other: source code (n/a)",
        "other: code summary or query (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: tree: tree-rnn",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "179": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Toward Interpretable Graph Tensor Convolution Neural Network for Code Semantics Embedding",
        "volume": "32",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3582574",
        "DOI": "10.1145/3582574",
        "number": "5",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Yang, Jia and Fu, Cai and Deng, Fengyang and Wen, Ming and Guo, Xiaowei and Wan, Chuanhao",
        "year": "2023",
        "month": "jul",
        "pages": "1\u201340"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dfg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "ncs": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ncs"
      }
    },
    "features": {
      "ast + cfg + dfg + ncs": [
        "connectivity: adjacency tensor (stacked adjacency matrices)"
      ],
      "ast": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ],
      "cfg": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ],
      "dfg": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ],
      "ncs": [
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "vulnerability-detection-model": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn w. circ tensor operation"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "code-prediction-model": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn w. circ tensor operation"
        ],
        "classification-regression-granularity": "unclear",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "var-misuse-model": {
        "tags": [
          "mode: other",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn w. circ tensor operation"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "180": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CORAL: COde RepresentAtion learning with weakly-supervised transformers for analyzing data analysis",
        "volume": "11",
        "ISSN": "2193-1127",
        "url": "http://dx.doi.org/10.1140/epjds/s13688-022-00327-9",
        "DOI": "10.1140/epjds/s13688-022-00327-9",
        "number": "1",
        "journal": "EPJ Data Science",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Zhang, Ge and Merrill, Mike A. and Liu, Yang and Heer, Jeffrey and Althoff, Tim",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "markdown text (Jupyter Notebook)",
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "markdown token",
            "details": [],
            "modifiers": []
          },
          {
            "value": "CLS",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast-markdown edge",
            "details": [],
            "modifiers": []
          },
          {
            "value": "connection to central node",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: transformer"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "182": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Language-Agnostic Representation Learning of Source Code from Structure and Context",
        "author": "Daniel Z{\\\"u}gner and Tobias Kirschstein and Michele Catasta and Jure Leskovec and Stephan G{\\\"u}nnemann",
        "booktitle": "International Conference on Learning Representations",
        "year": "2021",
        "url": "https://openreview.net/forum?id=Xh5eMZVONGF"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "connectivity: shortest path length matrix",
        "node feature: node code tokens (n/a)",
        "node feature: node type (n/a)",
        "connectivity: ancestor distance matrix",
        "connectivity: node pagerank score matrix",
        "connectivity: sibling distance matrix",
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "n/a"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "183": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "GrasP: Graph-to-Sequence Learning for Automated Program Repair",
        "url": "http://dx.doi.org/10.1109/QRS54544.2021.00091",
        "DOI": "10.1109/qrs54544.2021.00091",
        "booktitle": "2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)",
        "publisher": "IEEE",
        "author": "Tang, Ben and Li, Bin and Bo, Lili and Wu, Xiaoxue and Cao, Sicong and Sun, Xiaobing",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: graph-embedding: graph2seq"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "184": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Universal Representation for Code",
        "ISBN": "9783030757687",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-030-75768-7_2",
        "DOI": "10.1007/978-3-030-75768-7_2",
        "booktitle": "Advances in Knowledge Discovery and Data Mining",
        "publisher": "Springer International Publishing",
        "author": "Liu, Linfeng and Nguyen, Hoan and Karypis, George and Sengamedu, Srinivasan",
        "year": "2021",
        "pages": "16\u201328"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "sigma-0": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      },
      "sigma-1": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "sigma-0": [
        "graph: graph (uses node features; uses edge features)",
        "edge feature: data flow/dependency information (fasttext)",
        "edge feature: exception type (fasttext)",
        "node feature: operations/control structures (fasttext)",
        "node feature: program element name[s] (fasttext)"
      ],
      "sigma-1": [
        "node feature: node type (fasttext)",
        "graph: graph (uses node features; uses edge features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: rgcn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "185": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201923",
        "title": "Pre-training Code Representation with Semantic Flow Graph for Effective Bug Localization",
        "url": "http://dx.doi.org/10.1145/3611643.3616338",
        "DOI": "10.1145/3611643.3616338",
        "booktitle": "Proceedings of the 31st ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "Du, Yali and Yu, Zhongxing",
        "year": "2023",
        "month": "nov",
        "collection": "ESEC/FSE \u201923"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "sfg": {
        "vertices": [
          {
            "value": "variable",
            "details": [],
            "modifiers": [
              "every occurrene"
            ]
          },
          {
            "value": "control statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "sfg": [
        "connectivity: mask matrix",
        "sequence: linearised graph",
        "sequence: auxiliary information sequence for linearised graph",
        "sequence: auxiliary information sequence for linearised graph"
      ],
      "n/a": [
        "other: source code (n/a)",
        "other: code comment (n/a)"
      ]
    },
    "models": {
      "semantic-code-bert": {
        "tags": [
          "base-type: transformer",
          "mode: embedding-model-with-pretraining",
          "gnn-functionality: attention: connectivity: mask matrix"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/graph-as-sequence"
      },
      "fault-localization-model": {
        "tags": [
          "base-type: transformer",
          "mode: classification-regression",
          "misc: transformer: transformer encoder"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "186": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "<scp>XCode</scp>\n           \u202f: Towards Cross-Language Code Representation with Large-Scale Pre-Training",
        "volume": "31",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3506696",
        "DOI": "10.1145/3506696",
        "number": "3",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Lin, Zehao and Li, Guodun and Zhang, Jingfeng and Deng, Yue and Zeng, Xiangji and Zhang, Yin and Wan, Yao",
        "year": "2022",
        "month": "apr",
        "pages": "1\u201344"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (n/a)",
        "sequence: dfs linearised ast",
        "node feature (terminal): node code tokens (n/a)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: vae",
          "misc: rnn: bidirectional lstm",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "187": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "MulCode: A Multi-task Learning Approach for Source Code Understanding",
        "url": "http://dx.doi.org/10.1109/SANER50967.2021.00014",
        "DOI": "10.1109/saner50967.2021.00014",
        "booktitle": "2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Wang, Deze and Yu, Yue and Li, Shanshan and Dong, Wei and Wang, Ji and Qing, Liao",
        "year": "2021",
        "month": "mar"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (BERT)"
      ],
      "n/a": [
        "other: source code (n/a)",
        "other: code author (n/a)",
        "other: code comment (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: general-model-with-examples",
          "base-type: transformer",
          "gnn-functionality: tree: tree-lstm",
          "misc: transformer: transformer encoder",
          "misc: pooling: attention sum",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "188": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "GraphSearchNet: Enhancing GNNs via Capturing Global Dependencies for Semantic Code Search",
        "volume": "49",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2022.3233901",
        "DOI": "10.1109/tse.2022.3233901",
        "number": "4",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Liu, Shangqing and Xie, Xiaofei and Siow, Jingkai and Ma, Lei and Meng, Guozhu and Liu, Yang",
        "year": "2023",
        "month": "apr",
        "pages": "2839\u20132855"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code summary"
    ],
    "graphs": {
      "program-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "summary-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "parse dependency",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "dependency parse graph"
      }
    },
    "features": {
      "program-graph": [
        "graph: graph (uses node features)"
      ],
      "summary-graph": [
        "graph: graph (uses node features)"
      ],
      "summary graph": [
        "node feature: node code tokens (n/a)"
      ],
      "n/a": [
        "other: code summary or query (n/a)",
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: mlp",
          "gnn-functionality: gnn: bidirectional ggnn",
          "misc: pooling: mean pooling",
          "misc: attention: multi-head self-attention",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "189": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "CSSAM: Code Search via Attention Matching of Code Semantics and Structures",
        "url": "http://dx.doi.org/10.1109/SANER56733.2023.00045",
        "DOI": "10.1109/saner56733.2023.00045",
        "booktitle": "2023 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Cai, Bo and Yu, Yaoxiang and Hu, Yi",
        "year": "2023",
        "month": "mar"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node embedding (deepwalk)"
      ],
      "n/a": [
        "other: code summary or query (fasttext)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "misc: rnn: bidirectional lstm",
          "misc: attention: self-attention",
          "misc: attention: cross attention",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "190": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Enhancing Semantic Code Search with Deep Graph Matching",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/ACCESS.2023.3263878",
        "DOI": "10.1109/access.2023.3263878",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Bibi, Nazia and Maqbool, Ayesha and Rana, Tauseef and Afzal, Farkhanda and Akg\u00fcl, Ali and El Din, Sayed M.",
        "year": "2023",
        "pages": "1\u20131"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code summary"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "query-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          },
          {
            "value": "constituency symbol",
            "details": [
              "e.g. verb"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "constituency edge",
            "details": [],
            "modifiers": []
          },
          {
            "value": "word ordering",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "parse tree"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "query-graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: other",
          "gnn-functionality: gnn: rgcn",
          "misc: pooling: max pooling",
          "misc: attention: cross attention"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "191": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201922",
        "title": "How to better utilize code graphs in semantic code search?",
        "url": "http://dx.doi.org/10.1145/3540250.3549087",
        "DOI": "10.1145/3540250.3549087",
        "booktitle": "Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "Shi, Yucen and Yin, Ying and Wang, Zhengkui and Lo, David and Zhang, Tao and Xia, Xin and Zhao, Yuhai and Xu, Bowen",
        "year": "2022",
        "month": "nov",
        "collection": "ESEC/FSE \u201922"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "node feature: node code tokens (n/a)",
        "sequence: linearised graph"
      ],
      "n/a": [
        "other: code summary or query (n/a)",
        "other: source code (n/a)",
        "other: tokens in program element name (embedding layer)"
      ],
      "": [
        "unclear"
      ]
    },
    "models": {
      "multi-modal-model": {
        "tags": [
          "base-type: mlp",
          "mode: classification-regression",
          "base-type: rnn",
          "misc: pooling: max pooling",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      },
      "graph-enhanced-code-bert": {
        "tags": [
          "base-type: transformer",
          "mode: classification-regression",
          "misc: transformer: transformer [codebert]"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "192": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SEKE2022",
        "title": "Utilizing Edge Attention in Graph-Based Code Search",
        "ISSN": "2325-9000",
        "url": "http://dx.doi.org/10.18293/SEKE2022-078",
        "DOI": "10.18293/seke2022-078",
        "booktitle": "Proceedings of the 34th International Conference on Software Engineering and Knowledge Engineering",
        "publisher": "KSI Research Inc.",
        "author": "Zhao, Wei and Liu, Yan",
        "year": "2022",
        "month": "jul",
        "collection": "SEKE2022"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "apdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg[more specific edge types]"
      }
    },
    "features": {
      "apdg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens with sub-tokens (bow)"
      ],
      "n/a": [
        "other: code summary or query (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn w. attention per edge type",
          "misc: rnn: bidirectional lstm",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "193": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Deep Graph Matching and Searching for Semantic Code Retrieval",
        "volume": "15",
        "ISSN": "1556-472X",
        "url": "http://dx.doi.org/10.1145/3447571",
        "DOI": "10.1145/3447571",
        "number": "5",
        "journal": "ACM Transactions on Knowledge Discovery from Data",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Ling, Xiang and Wu, Lingfei and Wang, Saizhuo and Pan, Gaoning and Ma, Tengfei and Xu, Fangli and Liu, Alex X. and Wu, Chunming and Ji, Shouling",
        "year": "2021",
        "month": "may",
        "pages": "1\u201321"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code summary"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "query-graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": []
          },
          {
            "value": "constituency symbol",
            "details": [
              "e.g. verb"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "constituency edge",
            "details": [],
            "modifiers": []
          },
          {
            "value": "word ordering",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "parse tree"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "query-graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: rgcn",
          "gnn-functionality: attention: cross attention between nodes of different [related] graphs",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "194": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Multi-modal Attention Network Learning for Semantic Source Code Retrieval",
        "url": "http://dx.doi.org/10.1109/ASE.2019.00012",
        "DOI": "10.1109/ase.2019.00012",
        "booktitle": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)",
        "publisher": "IEEE",
        "author": "Wan, Yao and Shu, Jingdong and Sui, Yulei and Xu, Guandong and Zhao, Zhou and Wu, Jian and Yu, Philip",
        "year": "2019",
        "month": "nov"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "cfg": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: tree: tree-lstm",
          "misc: attention: attention",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "195": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Improving Cross-Language Code Clone Detection via Code Representation Learning and Graph Neural Networks",
        "volume": "49",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2023.3311796",
        "DOI": "10.1109/tse.2023.3311796",
        "number": "11",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Mehrotra, Nikita and Sharma, Akash and Jindal, Anmol and Purandare, Rahul",
        "year": "2023",
        "month": "nov",
        "pages": "4846\u20134868"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "flow-enriched-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "flow-enriched-ast": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: unclear",
          "base-type: gnn",
          "mode: embedding-model-with-pretraining",
          "gnn-functionality: gnn: gcn w. lstm for node history",
          "gnn-functionality: pooling: graph: set2set"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "196": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Graph-based code semantics learning for efficient semantic code clone detection",
        "volume": "156",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2022.107130",
        "DOI": "10.1016/j.infsof.2022.107130",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Yu, Dongjin and Yang, Quanxin and Chen, Xin and Chen, Jie and Xu, Yihang",
        "year": "2023",
        "month": "apr",
        "pages": "107130"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      },
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features; uses edge features)",
        "node feature: node code tokens (word2vec)",
        "unclear"
      ],
      "pdg": [
        "graph: graph (uses node features; uses edge features)",
        "node feature: node code tokens (word2vec)",
        "edge feature: inheritted node feature"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: node-transform: attention",
          "gnn-functionality: architecture: residual connections",
          "misc: rnn: bidirectional lstm",
          "gnn-functionality: pooling: graph: global attention pooling",
          "gnn-functionality: pooling: graph: edge pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "197": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "CNCIT 2023",
        "title": "Retracted on June 18, 2024:\n            A study on the application of graph neural network in code clone detection: Improving the performance of code clone detection through graph neural networks and attention mechanisms",
        "url": "http://dx.doi.org/10.1145/3605801.3605834",
        "DOI": "10.1145/3605801.3605834",
        "booktitle": "Proceedings of the 2023 2nd International Conference on Networks, Communications and Information Technology",
        "publisher": "ACM",
        "author": "Dai, Linfeng",
        "year": "2023",
        "month": "jun",
        "collection": "CNCIT 2023"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: graph matching network",
          "n/a",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "198": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Modeling Functional Similarity in Source Code With Graph-Based Siamese Networks",
        "volume": "48",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2021.3105556",
        "DOI": "10.1109/tse.2021.3105556",
        "number": "10",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Mehrotra, Nikita and Agarwal, Navdha and Gupta, Piyush and Anand, Saket and Lo, David and Purandare, Rahul",
        "year": "2022",
        "month": "oct",
        "pages": "3771\u20133789"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: siamese (classification)",
          "base-type: other",
          "misc: rnn: lstm",
          "misc: attention: sigmoid soft self-attention",
          "gnn-functionality: attention: connectivity"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "199": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE \u201922",
        "title": "TreeCen: Building Tree Graph for Scalable Semantic Code Clone Detection",
        "url": "http://dx.doi.org/10.1145/3551349.3556927",
        "DOI": "10.1145/3551349.3556927",
        "booktitle": "Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "Hu, Yutao and Zou, Deqing and Peng, Junru and Wu, Yueming and Shan, Junjie and Jin, Hai",
        "year": "2022",
        "month": "oct",
        "collection": "ASE \u201922"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "tree-graph": {
        "vertices": [
          {
            "value": "ast node type",
            "details": [
              "node per ast node type"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "edge iff edge between nodes of those types in ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "tree-graph": [
        "graph feature vector: aggregated node features"
      ]
    },
    "models": {
      "dt": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: decision tree"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "lr": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "rf": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "knn": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: knn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "200": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Low-Complexity Code Clone Detection using Graph-based Neural Networks",
        "url": "http://dx.doi.org/10.1109/MSN57253.2022.00129",
        "DOI": "10.1109/msn57253.2022.00129",
        "booktitle": "2022 18th International Conference on Mobility, Sensing and Networking (MSN)",
        "publisher": "IEEE",
        "author": "Liu, Hu and Zhao, Hui and Han, Changhao and Hou, Lu",
        "year": "2022",
        "month": "dec"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "lr-fa-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "block",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "lr-fa-ast": [
        "graph: graph (uses node features; uses edge features)",
        "unclear"
      ],
      "lr-fa-ast-": [
        "edge feature: edge type (ordinal)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: custom message passing scheme",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "201": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "author": "Hu, Bin and Wu, Yijian and Peng, Xin and Sha, Chaofeng and Wang, Xiaochen and Fu, Baiqiang and Zhao, Wenyun",
        "booktitle": "2022 IEEE/ACM 30th International Conference on Program Comprehension (ICPC)",
        "title": "Predicting Change Propagation between Code Clone Instances by Graph-based Deep Learning",
        "year": "2022",
        "volume": "",
        "number": "",
        "pages": "425-436",
        "keywords": "Deep learning;Convolutional codes;Java;Codes;Cloning;Predictive models;Maintenance engineering;code clone;change propagation;clone consistency;dataset",
        "doi": "10.1145/3524610.3527766"
      }
    },
    "domains": [
      "misc (change propagation prediction (determine if code clones must co-evolve))"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "fc-pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": [
              "from old and new  code"
            ]
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "old to new statement mapping",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "fc-pdg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (CodeBERT)",
        "node feature: change information (binary encoding)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: rgcn",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "grpah",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "202": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A code clone detection algorithm based on graph convolution network with AST tree edge",
        "url": "http://dx.doi.org/10.1109/QRS-C55045.2021.00156",
        "DOI": "10.1109/qrs-c55045.2021.00156",
        "booktitle": "2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)",
        "publisher": "IEEE",
        "author": "Lu, Zhicheng and Li, Ruochen and Hu, Huamiao and Zhou, Wen-an",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "hub",
            "details": [],
            "modifiers": [
              "connect node types which commonly have many children"
            ]
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "unclear"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "mode: siamese (classification)",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "203": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "SCCD-GAN: An Enhanced Semantic Code Clone Detection Model Using GAN",
        "url": "http://dx.doi.org/10.1109/ICECE54449.2021.9674552",
        "DOI": "10.1109/icece54449.2021.9674552",
        "booktitle": "2021 IEEE 4th International Conference on Electronics and Communication Engineering (ICECE)",
        "publisher": "IEEE",
        "author": "Xu, Kun and Liu, Yan",
        "year": "2021",
        "month": "dec"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "204": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE \u201920",
        "title": "SCDetector: software functional clone detection based on semantic tokens analysis",
        "url": "http://dx.doi.org/10.1145/3324884.3416562",
        "DOI": "10.1145/3324884.3416562",
        "booktitle": "Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "Wu, Yueming and Zou, Deqing and Dou, Shihan and Yang, Siru and Yang, Wei and Cheng, Feng and Liang, Hong and Jin, Hai",
        "year": "2020",
        "month": "dec",
        "collection": "ASE \u201920"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "other: source code tokens weighted based on node centralities (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: siamese (classification)",
          "misc: rnn: gru"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "205": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Detecting Code Clones with Graph Neural Network and Flow-Augmented Abstract Syntax Tree",
        "url": "http://dx.doi.org/10.1109/SANER48275.2020.9054857",
        "DOI": "10.1109/saner48275.2020.9054857",
        "booktitle": "2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Wang, Wenhan and Li, Ge and Ma, Bo and Xia, Xin and Jin, Zhi",
        "year": "2020",
        "month": "feb"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "fa-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "fa-ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gmn": {
        "tags": [
          "mode: siamese (classification)",
          "base-type: gnn",
          "gnn-functionality: gnn: graph matching network",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gnn": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "206": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Fine-grained smart contract vulnerability detection by heterogeneous code feature learning and automated dataset construction",
        "volume": "209",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2023.111919",
        "DOI": "10.1016/j.jss.2023.111919",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Cai, Jie and Li, Bin and Zhang, Tao and Zhang, Jiale and Sun, Xiaobing",
        "year": "2024",
        "month": "mar",
        "pages": "111919"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg + ast subtree"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (InferCode)",
        "unclear",
        "node feature: features from [sub-]graph associated with node"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "gnn-functionality: attention between node types [learn weights for message passing]",
          "base-type: gnn",
          "gnn-functionality: tree: child-sum tree-lstm",
          "gnn-functionality: gnn: custom message passing scheme"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "207": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "The Best of\u00a0Both\u00a0Worlds: Integrating Semantic Features with\u00a0Expert Features for\u00a0Smart Contract Vulnerability Detection",
        "ISBN": "9789819981045",
        "ISSN": "1865-0937",
        "url": "http://dx.doi.org/10.1007/978-981-99-8104-5_2",
        "DOI": "10.1007/978-981-99-8104-5_2",
        "booktitle": "Blockchain and Trustworthy Systems",
        "publisher": "Springer Nature Singapore",
        "author": "Lin, Xingwei and Zhou, Mingxuan and Cao, Sicong and Wang, Jiashui and Sun, Xiaobing",
        "year": "2023",
        "month": "nov",
        "pages": "17\u201331"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ],
      "n/a": [
        "other: domain specific expert features"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: hierarchical self-attention graph pooling",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "208": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Securing Blockchain Using Propagation Chain Learning",
        "ISBN": "9789819981014",
        "ISSN": "1865-0937",
        "url": "http://dx.doi.org/10.1007/978-981-99-8101-4_8",
        "DOI": "10.1007/978-981-99-8101-4_8",
        "booktitle": "Blockchain and Trustworthy Systems",
        "publisher": "Springer Nature Singapore",
        "author": "Jin, Shifeng and Zhai, Yijun and Zhong, Yuxuan and Cui, Jifu and Xu, Lei and Sun, Hongxia and Lei, Yan",
        "year": "2023",
        "month": "nov",
        "pages": "107\u2013118"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "propagation-chain": {
        "vertices": [
          {
            "value": "variable",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "propagation-chain": [
        "connectivity: mask matrix"
      ],
      "n/a": [
        "other: source code (n/a)",
        "other: positional information of tokens/program elements",
        "other: positional information of tokens/program elements"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: transformer",
          "misc: transformer: transformer encoder",
          "gnn-functionality: attention: connectivity: mask matrix"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "graph/graph-connectivity"
      }
    }
  },
  "209": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "A General Smart Contract Vulnerability Detection Framework with\u00a0Self-attention Graph Pooling",
        "ISBN": "9789819981045",
        "ISSN": "1865-0937",
        "url": "http://dx.doi.org/10.1007/978-981-99-8104-5_1",
        "DOI": "10.1007/978-981-99-8104-5_1",
        "booktitle": "Blockchain and Trustworthy Systems",
        "publisher": "Springer Nature Singapore",
        "author": "Zou, Lihan and Gong, Changhao and Wu, Zhen and Tan, Jie and Tang, Junnan and Jiang, Zigui and Li, Dan",
        "year": "2023",
        "month": "nov",
        "pages": "3\u201316"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: graphsage",
          "gnn-functionality: pooling: graph: sagpool",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "210": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "GRATDet: Smart Contract Vulnerability Detector Based on Graph Representation and Transformer",
        "volume": "76",
        "ISSN": "1546-2226",
        "url": "http://dx.doi.org/10.32604/cmc.2023.038878",
        "DOI": "10.32604/cmc.2023.038878",
        "number": "2",
        "journal": "Computers, Materials &amp; Continua",
        "publisher": "Computers, Materials and Continua (Tech Science Press)",
        "author": "Gong, Peng and Yang, Wenzhong and Wang, Liejun and Wei, Fuyuan and HaiLaTi, KeZiErBieKe and Liao, Yuanyuan",
        "year": "2023",
        "pages": "1439\u20131462"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "line-graph": {
        "vertices": [
          {
            "value": "line",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [
              "call.value"
            ],
            "modifiers": []
          },
          {
            "value": "first to last line",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "line-graph": [
        "connectivity: adjacency matrix per edge type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: transformer",
          "misc: transformer: transformer encoder",
          "gnn-functionality: attention: connectivity"
        ],
        "classification-regression-granularity": "graph/other",
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "211": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Combining Graph Neural Networks with Expert Knowledge for Smart Contract Vulnerability Detection",
        "ISSN": "2326-3865",
        "url": "http://dx.doi.org/10.1109/TKDE.2021.3095196",
        "DOI": "10.1109/tkde.2021.3095196",
        "journal": "IEEE Transactions on Knowledge and Data Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Liu, Zhenguang and Qian, Peng and Wang, Xiaoyang and Zhuang, Yuan and Qiu, Lin and Wang, Xun",
        "year": "2021",
        "pages": "1\u20131"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": [
              "marked core or normal"
            ]
          },
          {
            "value": "fallback",
            "details": [
              "fallback function"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: node type (n/a)",
        "node feature: domain-specific handcrafted expert features",
        "trimmed graph: graph with certain nodes removed, introducing edges and aggregating features in kept nodes",
        "node feature: program element name[s] (n/a)"
      ],
      "n/a": [
        "other: domain specific expert features"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: gnn: custom message passing scheme",
          "misc: pooling: max pooling",
          "misc: pooling: max pooling",
          "misc: cnn: cnn",
          "misc: cnn: cnn",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "213": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "MANDO-HGT: Heterogeneous Graph Transformers for Smart Contract Vulnerability Detection",
        "url": "http://dx.doi.org/10.1109/MSR59073.2023.00052",
        "DOI": "10.1109/msr59073.2023.00052",
        "booktitle": "2023 IEEE/ACM 20th International Conference on Mining Software Repositories (MSR)",
        "publisher": "IEEE",
        "author": "Nguyen, Hoang H. and Nguyen, Nhat-Minh and Xie, Chunyao and Ahmadi, Zahra and Kudendo, Daniel and Doan, Thanh-Nam and Jiang, Lingxiao",
        "year": "2023",
        "month": "may"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "heterogeneous-contract-graph": {
        "vertices": [
          {
            "value": "basic block",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "heterogeneous-contract-graph": [
        "node feature: node embedding (metapath2vec)",
        "node feature: node type (one-hot)",
        "node feature: node embedding (node2vec)",
        "node feature: node embedding (LINE)",
        "metapaths: uses for message passing"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph/node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "214": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Toward Vulnerability Detection for Ethereum Smart Contracts Using Graph-Matching Network",
        "volume": "14",
        "ISSN": "1999-5903",
        "url": "http://dx.doi.org/10.3390/fi14110326",
        "DOI": "10.3390/fi14110326",
        "number": "11",
        "journal": "Future Internet",
        "publisher": "MDPI AG",
        "author": "Zhang, Yujian and Liu, Daifu",
        "year": "2022",
        "month": "nov",
        "pages": "326"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "asg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "asg": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "gnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gmn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: graph matching network",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "215": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Combine sliced joint graph with graph neural networks for smart contract vulnerability detection",
        "volume": "195",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2022.111550",
        "DOI": "10.1016/j.jss.2022.111550",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Cai, Jie and Li, Bin and Zhang, Jiale and Sun, Xiaobing and Chen, Bing",
        "year": "2023",
        "month": "jan",
        "pages": "111550"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (fasttext)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: architecture: use hsagpool to sample subgraphs; apply gnn again",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: pooling: graph: h-sagpool",
          "gnn-functionality: pooling: graph: top-k pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "216": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A Smart Contract Vulnerability Detection Model Based on Syntactic and Semantic Fusion Learning",
        "volume": "2023",
        "ISSN": "1530-8669",
        "url": "http://dx.doi.org/10.1155/2023/9212269",
        "DOI": "10.1155/2023/9212269",
        "journal": "Wireless Communications and Mobile Computing",
        "publisher": "Hindawi Limited",
        "author": "Han, Daojun and Li, Qiuyue and Zhang, Lei and Xu, Tao",
        "editor": "Yi, Changyan",
        "year": "2023",
        "month": "feb",
        "pages": "1\u201312"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "ast": [
        "unclear",
        "sequence: pre-order linearised ast"
      ],
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: gnn: gcn",
          "misc: model: supervised: neural: textcnn",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "218": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A smart contract vulnerability detection model based on graph neural networks",
        "url": "http://dx.doi.org/10.1109/ICFTIC57696.2022.10075325",
        "DOI": "10.1109/icftic57696.2022.10075325",
        "booktitle": "2022 4th International Conference on Frontiers Technology of Information and Computer (ICFTIC)",
        "publisher": "IEEE",
        "author": "Han, Daojun and Li, Qiuyue and Zhang, Lei and Xu, Tao",
        "year": "2022",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: instruction (word2vec + tf/idf)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "219": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "AST2Vec: A Robust Neural Code Representation for\u00a0Malicious PowerShell Detection",
        "ISBN": "9783031459337",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-031-45933-7_13",
        "DOI": "10.1007/978-3-031-45933-7_13",
        "booktitle": "Science of Cyber Security",
        "publisher": "Springer Nature Switzerland",
        "author": "Miao, Han and Bao, Huaifeng and Tang, Zixian and Li, Wenhao and Wang, Wen and Chen, Huashan and Liu, Feng and Sun, Yanhui",
        "year": "2023",
        "pages": "207\u2013224"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: architecture: bidirectional gru over subraph embeddings",
          "gnn-functionality: pooling: tree: child-sum pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "220": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Detecting Malicious JavaScript Using Structure-Based Analysis of Graph Representation",
        "volume": "11",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/ACCESS.2023.3317266",
        "DOI": "10.1109/access.2023.3317266",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Rozi, Muhammad Fakhrur and Ban, Tao and Ozawa, Seiichi and Yamada, Akira and Takahashi, Takeshi and Kim, Sangwook and Inoue, Daisuke",
        "year": "2023",
        "pages": "102727\u2013102745"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: graph pooling (reduce nodes by half)"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "221": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SEKE2023",
        "title": "SAWD: Structural-Aware Webshell Detection System with Control Flow Graph",
        "ISSN": "2325-9000",
        "url": "http://dx.doi.org/10.18293/SEKE2023-205",
        "DOI": "10.18293/seke2023-205",
        "booktitle": "Proceedings of the 35th International Conference on Software Engineering and Knowledge Engineering",
        "publisher": "KSI Research Inc.",
        "author": "Zhu, Junmin and Yao, Yizhao and Deng, Xianwen and Yong, Yaoguang and Wang, Yanhao and Chen, Libo and Xue, Zhi and Zhao, Ruijie",
        "year": "2023",
        "month": "jul",
        "collection": "SEKE2023"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node types in node subtree (bow)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: mincutpool"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "223": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "JStrong: Malicious JavaScript detection based on code semantic representation and graph neural network",
        "volume": "118",
        "ISSN": "0167-4048",
        "url": "http://dx.doi.org/10.1016/j.cose.2022.102715",
        "DOI": "10.1016/j.cose.2022.102715",
        "journal": "Computers &amp; Security",
        "publisher": "Elsevier BV",
        "author": "Fang, Yong and Huang, Chaoyi and Zeng, Minchuan and Zhao, Zhiying and Huang, Cheng",
        "year": "2022",
        "month": "jul",
        "pages": "102715"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: node type (word2vec)",
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: gnn: gat",
          "n/a",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "227": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Vulnerability Analysis and\u00a0Detection Using Graph Neural Networks for\u00a0Android Operating System",
        "ISBN": "9783030925710",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-030-92571-0_4",
        "DOI": "10.1007/978-3-030-92571-0_4",
        "booktitle": "Information Systems Security",
        "publisher": "Springer International Publishing",
        "author": "Renjith, G. and Aji, S.",
        "year": "2021",
        "pages": "57\u201372"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cpg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "cpg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (tf/idf)"
      ],
      "cph": [
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "229": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "JStrack: Enriching Malicious JavaScript Detection Based on\u00a0AST Graph Analysis and\u00a0Attention Mechanism",
        "ISBN": "9783030922702",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-030-92270-2_57",
        "DOI": "10.1007/978-3-030-92270-2_57",
        "booktitle": "Neural Information Processing",
        "publisher": "Springer International Publishing",
        "author": "Rozi, Muhammad Fakhrur and Ban, Tao and Ozawa, Seiichi and Kim, Sangwook and Takahashi, Takeshi and Inoue, Daisuke",
        "year": "2021",
        "pages": "669\u2013680"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: attention: self-attention",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "231": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Learning to Detect Memory-related Vulnerabilities",
        "volume": "33",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3624744",
        "DOI": "10.1145/3624744",
        "number": "2",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Cao, Sicong and Sun, Xiaobing and Bo, Lili and Wu, Rongxin and Li, Bin and Wu, Xiaoxue and Tao, Chuanqi and Zhang, Tao and Liu, Wei",
        "year": "2023",
        "month": "dec",
        "pages": "1\u201335"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "sdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (CodeBERT)",
        "graph: graph (uses node features)"
      ],
      "sdg": [
        "graph: graph (uses node features)",
        "node feature: features from [sub-]graph associated with node",
        "node feature: features from [sub-]graph associated with node"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: custom edge-type aware message passing scheme"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "232": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "A General Source Code Vulnerability Detection Method via Ensemble of Graph Neural Networks",
        "ISBN": "9789819993314",
        "ISSN": "1865-0937",
        "url": "http://dx.doi.org/10.1007/978-981-99-9331-4_37",
        "DOI": "10.1007/978-981-99-9331-4_37",
        "booktitle": "Frontiers in Cyber Security",
        "publisher": "Springer Nature Singapore",
        "author": "Zeng, Ciling and Zhou, Bo and Dong, Huoyuan and Wu, Haolin and Xie, Peiyuan and Guan, Zhitao",
        "year": "2024",
        "pages": "560\u2013574"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "token",
            "details": [],
            "modifiers": [
              "code",
              "unique"
            ]
          }
        ],
        "edges": [
          {
            "value": "sliding window co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (GraphCodeBERT)",
        "node feature: node code tokens (CodeBERT)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: gnn: ggnn",
          "misc: attention: attention",
          "gnn-functionality: pooling: graph: combined sum and max pooling",
          "gnn-functionality: node-transform: sigmoid attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "234": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Pass-Tuning: Towards Structure-Aware Parameter-Efficient Tuning for Code Representation Learning",
        "url": "http://dx.doi.org/10.18653/v1/2023.findings-emnlp.42",
        "DOI": "10.18653/v1/2023.findings-emnlp.42",
        "booktitle": "Findings of the Association for Computational Linguistics: EMNLP 2023",
        "publisher": "Association for Computational Linguistics",
        "author": "Chen, Nuo and Sun, Qiushi and Wang, Jianing and Li, Xiang and Gao, Ming",
        "year": "2023"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model-encoder-decoder": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: gnn",
          "base-type: transformer",
          "gnn-functionality: gnn: gat",
          "misc: transformer: transformer encoder",
          "misc: training method: weights are fixed",
          "misc: transformer: transformer decoder",
          "misc: training method: weights are fixed"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-encoder": {
        "tags": [
          "base-type: transformer",
          "base-type: gnn",
          "mode: general-model-with-examples",
          "gnn-functionality: gnn: gat",
          "misc: transformer: transformer encoder",
          "misc: training method: weights are fixed"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "235": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Python Open-Source Code Traceability Model Based on Graph Neural Networks",
        "url": "http://dx.doi.org/10.1109/DASC/PiCom/CBDCom/Cy59711.2023.10361385",
        "DOI": "10.1109/dasc/picom/cbdcom/cy59711.2023.10361385",
        "booktitle": "2023 IEEE Intl Conf on Dependable, Autonomic and Secure Computing, Intl Conf on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big Data Computing, Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSciTech)",
        "publisher": "IEEE",
        "author": "Wang, Ruizhi and Xu, Yanping and Wu, Yifan",
        "year": "2023",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (one-hot)",
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gcn",
          "misc: misc: tensor operations for global interaction information"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "236": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Meta-Path Based Attentional Graph Learning Model for Vulnerability Detection",
        "volume": "50",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/TSE.2023.3340267",
        "DOI": "10.1109/tse.2023.3340267",
        "number": "3",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Wen, Xin-Cheng and Gao, Cuiyun and Ye, Jiaxin and Li, Yichen and Tian, Zhihong and Jia, Yan and Wang, Xuan",
        "year": "2024",
        "month": "mar",
        "pages": "360\u2013375"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "csg": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "csg": [
        "graph: graph (uses node features)",
        "unclear",
        "metapaths: used for attention"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: message passing along metapaths [creation: fnn/mlp] w. attention based aggregation based on involved nodes (and edge)",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "237": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Commit Classification via Diff-Code GCN based on System Dependency Graph",
        "url": "http://dx.doi.org/10.1109/QRS60937.2023.00053",
        "DOI": "10.1109/qrs60937.2023.00053",
        "booktitle": "2023 IEEE 23rd International Conference on Software Quality, Reliability, and Security (QRS)",
        "publisher": "IEEE",
        "author": "Zhang, Zaixing and Liu, Liang and Chang, Jianming and Wang, Lulu and Liao, Li",
        "year": "2023",
        "month": "oct"
      }
    },
    "domains": [
      "misc (commit classification)"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "change-impact-graph": {
        "vertices": [
          {
            "value": "program elements at different levels",
            "details": [],
            "modifiers": [
              "variables",
              "statements",
              "methods",
              "classes",
              "packages"
            ]
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "program relationships",
            "details": [
              "e.g inherit"
            ],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "change-impact-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: node embedding (node2vec)"
      ],
      "n/a": [
        "other: syntax change type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: sort pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "238": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "Internetware 2022",
        "title": "Untangling Composite Commits by Attributed Graph Clustering",
        "url": "http://dx.doi.org/10.1145/3545258.3545267",
        "DOI": "10.1145/3545258.3545267",
        "booktitle": "Proceedings of the 13th Asia-Pacific Symposium on Internetware",
        "publisher": "ACM",
        "author": "Chen, Siyu and Xu, Shengbin and Yao, Yuan and Xu, Feng",
        "year": "2022",
        "month": "jun",
        "collection": "Internetware 2022"
      }
    },
    "domains": [
      "misc (commit untangling)"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": [
              "old + new merged on unchanged nodes"
            ]
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "name flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token co-occurrence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (BERT)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: affinity propagation w. graph convolution operator"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "240": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "Algorithm identification in programming assignments",
        "url": "http://dx.doi.org/10.1145/3524610.3527914",
        "DOI": "10.1145/3524610.3527914",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Chourasia, Pranshu and Ramakrishnan, Ganesh and Apte, Varsha and Kumar, Suraj",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "ast": [
        "graph: graph"
      ],
      "cfg": [
        "graph: graph"
      ]
    },
    "models": {
      "svm-5": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: kernel: subgraph matching [graph]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "svm-6": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: kernel: graphlet [graph]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "svm-7": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: kernel: weisfeiler-lehman [graph]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "svm-3": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: kernel: shortest path [graph]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "svm-4": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: kernel: random walk [graph]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "svm-2": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: kernel: subset tree [tree]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "svm-1": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: kernel: subtree [tree]",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "241": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Dependencies-based microservices decomposition method",
        "volume": "44",
        "ISSN": "1925-7074",
        "url": "http://dx.doi.org/10.1080/1206212X.2021.1915444",
        "DOI": "10.1080/1206212x.2021.1915444",
        "number": "9",
        "journal": "International Journal of Computers and Applications",
        "publisher": "Informa UK Limited",
        "author": "Al-Debagy, Omar and Martinek, P\u00e9ter",
        "year": "2021",
        "month": "apr",
        "pages": "814\u2013821"
      }
    },
    "domains": [
      "misc (microservice decomposition)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "class-diagram": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "class-diagram": [
        "graph: graph"
      ]
    },
    "models": {
      "cluster-10": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: walktrap graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-5": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: leading eigenvector graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-1": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: label propagation graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-6": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: girvan-newman graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-8": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: rber pots graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-9": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: rb pots graph clustering algoritm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-11": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: chinesewispers graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-4": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: speaker-listener label propagation graph custering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-7": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: markov clustering graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-3": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: leiden graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "cluster-2": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: louvain graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "242": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A graph-based clustering algorithm for software systems modularization",
        "volume": "133",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2020.106469",
        "DOI": "10.1016/j.infsof.2020.106469",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Pourasghar, Babak and Izadkhah, Habib and Isazadeh, Ayaz and Lotfi, Shahriar",
        "year": "2021",
        "month": "may",
        "pages": "106469"
      }
    },
    "domains": [
      "misc (software modularisation)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "class-diagram": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "class-dependency-network": [
        "graph: graph"
      ]
    },
    "models": {
      "cluster": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: graph clustering algorithm [unspecified]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "244": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201920",
        "title": "Flexeme: untangling commits using lexical flows",
        "url": "http://dx.doi.org/10.1145/3368089.3409693",
        "DOI": "10.1145/3368089.3409693",
        "booktitle": "Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "P\u00e2r\u021bachi, Profir-Petru and Dash, Santanu Kumar and Allamanis, Miltiadis and Barr, Earl T.",
        "year": "2020",
        "month": "nov",
        "collection": "ESEC/FSE \u201920"
      }
    },
    "domains": [
      "misc (commit untangling)"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "delta-pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": [
              "old + new merged on unchanged nodes"
            ]
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "name flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "delta-pdg": [
        "graph: graph"
      ]
    },
    "models": {
      "cluster": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: agglomerative clustering w. graph kernel",
          "misc: kernel: weisfeiler-lehman [graph]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "245": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Enriched Weisfeiler-Lehman Kernel for Improved Graph Clustering of Source Code",
        "ISBN": "9783030445843",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-030-44584-3_20",
        "DOI": "10.1007/978-3-030-44584-3_20",
        "booktitle": "Advances in Intelligent Data Analysis XVIII",
        "publisher": "Springer International Publishing",
        "author": "H\u00f6ppner, Frank and Jahnke, Maximilian",
        "year": "2020",
        "pages": "248\u2013260"
      }
    },
    "domains": [
      "misc (common code edit visualisation)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph"
      ]
    },
    "models": {
      "cluster": {
        "tags": [
          "mode: other",
          "base-type: classic",
          "misc: kernel: weisfeiler-lehman [graph]",
          "misc: model: clustering: unspecified"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "247": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "CodeKernel: A Graph Kernel Based Approach to the Selection of API Usage Examples",
        "url": "http://dx.doi.org/10.1109/ASE.2019.00061",
        "DOI": "10.1109/ase.2019.00061",
        "booktitle": "2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)",
        "publisher": "IEEE",
        "author": "Gu, Xiaodong and Zhang, Hongyu and Kim, Sunghun",
        "year": "2019",
        "month": "nov"
      }
    },
    "domains": [
      "misc (documentation assistance)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "object-usage-graph": {
        "vertices": [
          {
            "value": "api invocation",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "usage order",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "object-usage-graph": [
        "connectivity: adjacency matrix"
      ]
    },
    "models": {
      "cluster": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: spectral clustering",
          "misc: kernel: shortest path [graph]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "graph",
        "usage-details": "main/graph"
      }
    }
  },
  "248": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Optimizing software design migration from structured programming to object oriented paradigm",
        "url": "http://dx.doi.org/10.1109/ICCITechn.2014.6997320",
        "DOI": "10.1109/iccitechn.2014.6997320",
        "booktitle": "16th Int\u2019l Conf. Computer and Information Technology",
        "publisher": "IEEE",
        "author": "Siddik, Saeed and Gias, Alim Ul and Khaled, Shah Mostafa",
        "year": "2014",
        "month": "mar"
      }
    },
    "domains": [
      "misc (coding language migration)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "fcg": {
        "vertices": [
          {
            "value": "function",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "fcg"
      }
    },
    "features": {
      "fcg": [
        "graph: graph"
      ]
    },
    "models": {
      "greedy-cluster": {
        "tags": [
          "base-type: classic",
          "mode: clustering",
          "misc: model: clustering: custom greedy heuristic node clustering algorithm [graph]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      },
      "mc-cluster": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: custom monte carlo heuristic node clustering algorithm [graph]"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "251": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "An Approach for Software Architecture Refactoring Based on Clustering of Extended Component Dependency Graph",
        "url": "http://dx.doi.org/10.1109/CISE.2009.5362854",
        "DOI": "10.1109/cise.2009.5362854",
        "booktitle": "2009 International Conference on Computational Intelligence and Software Engineering",
        "publisher": "IEEE",
        "author": "Zhong, Lin-Hui and Xu, Le and Ye, Mao-sheng and Zheng, Yi and Xie, Bing",
        "year": "2009",
        "month": "dec"
      }
    },
    "domains": [
      "misc (software modularisation)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "ext-dependency-graph": {
        "vertices": [
          {
            "value": "component",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "co-evolution",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ext-dependency-graph": [
        "edge feature: weights",
        "graph: graph (uses edge features)"
      ]
    },
    "models": {
      "clustering": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: bunch graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "252": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Reconstructing Software High-Level Architecture by Clustering Weighted Directed Class Graph",
        "volume": "25",
        "ISSN": "1793-6403",
        "url": "http://dx.doi.org/10.1142/S0218194015500072",
        "DOI": "10.1142/s0218194015500072",
        "number": "04",
        "journal": "International Journal of Software Engineering and Knowledge Engineering",
        "publisher": "World Scientific Pub Co Pte Lt",
        "author": "Qiu, Dehong and Zhang, Qifeng and Fang, Shaohong",
        "year": "2015",
        "month": "may",
        "pages": "701\u2013726"
      }
    },
    "domains": [
      "misc (program understanding assistance)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "class-graph": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "class-graph": [
        "graph: graph (uses edge features)",
        "edge feature: weights"
      ]
    },
    "models": {
      "clustering": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: custom graph clustering algorithm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "254": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "The Optimization of a Page Rank Based Key Classes Classifier using Simulated Annealing with ROC-AUC and Recall Metrics",
        "url": "http://dx.doi.org/10.1109/SACI46893.2019.9111601",
        "DOI": "10.1109/saci46893.2019.9111601",
        "booktitle": "2019 IEEE 13th International Symposium on Applied Computational Intelligence and Informatics (SACI)",
        "publisher": "IEEE",
        "author": "Chirila, Ciprian-Bogdan and Sora, Ioana",
        "year": "2019",
        "month": "may"
      }
    },
    "domains": [
      "misc (program understanding assistance)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "graph": [
        "edge feature: weights",
        "graph: graph (uses edge features)"
      ]
    },
    "models": {
      "page-rank": {
        "tags": [
          "base-type: classic",
          "mode: other",
          "misc: model: ranking: pagerank"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "256": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "author": "Yisroel Mirsky and George Macon and Michael Brown and Carter Yagemann and Matthew Pruett and Evan Downing and Sukarno Mertoguno and Wenke Lee",
        "title": "{VulChecker}: Graph-based Vulnerability Localization in Source Code",
        "booktitle": "32nd USENIX Security Symposium (USENIX Security 23)",
        "year": "2023",
        "isbn": "978-1-939133-37-3",
        "address": "Anaheim, CA",
        "pages": "6557--6574",
        "url": "https://www.usenix.org/conference/usenixsecurity23/presentation/mirsky",
        "publisher": "USENIX Association",
        "month": "aug"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "e-pdg": {
        "vertices": [
          {
            "value": "instruction",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "e-pdg": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: network metrics",
        "edge feature: data flow/dependency information (n/a)",
        "node feature: operators and/or operands (one-hot)",
        "node feature: domain-specific handcrafted expert features"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: structure2vec"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "257": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Convolutional Neural Networks over Control Flow Graphs for Software Defect Prediction",
        "url": "http://dx.doi.org/10.1109/ICTAI.2017.00019",
        "DOI": "10.1109/ictai.2017.00019",
        "booktitle": "2017 IEEE 29th International Conference on Tools with Artificial Intelligence (ICTAI)",
        "publisher": "IEEE",
        "author": "Viet Phan, Anh and Le Nguyen, Minh and Thu Bui, Lam",
        "year": "2017",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: instruction (n/a)",
        "node feature: instruction (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: directed graph convolutional network",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "258": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "<scp>deGraphCS</scp>\n           \u202f: Embedding Variable-based Flow Graph for Neural Code Search",
        "volume": "32",
        "ISSN": "1557-7392",
        "url": "http://dx.doi.org/10.1145/3546066",
        "DOI": "10.1145/3546066",
        "number": "2",
        "journal": "ACM Transactions on Software Engineering and Methodology",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Zeng, Chen and Yu, Yue and Li, Shanshan and Xia, Xin and Wang, Zhiming and Geng, Mingyang and Bai, Linxiao and Dong, Wei and Liao, Xiangke",
        "year": "2023",
        "month": "mar",
        "pages": "1\u201327"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "identifiers in instructions",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control {dependence,flow}",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: program element name[s] (one-hot)"
      ],
      "n/a": [
        "other: code summary or query (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "misc: attention: attention over states",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "259": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "MulCS: Towards a Unified Deep Representation for Multilingual Code Search",
        "url": "http://dx.doi.org/10.1109/SANER56733.2023.00021",
        "DOI": "10.1109/saner56733.2023.00021",
        "booktitle": "2023 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Ma, Yingwei and Yu, Yue and Li, Shanshan and Jia, Zhouyang and Ma, Jun and Xu, Rulin and Dong, Wei and Liao, Xiangke",
        "year": "2023",
        "month": "mar"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "operands",
            "details": [],
            "modifiers": []
          },
          {
            "value": "opcode",
            "details": [],
            "modifiers": []
          },
          {
            "value": "labels in IR",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "oop related links",
            "details": [
              "e.g. method to intance"
            ],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: program element name[s] (one-hot)"
      ],
      "n/a": [
        "other: code summary or query (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: ggnn",
          "misc: pooling: attention sum",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "260": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Semantic based Cross-Language Clone Related Bug Detection",
        "url": "http://dx.doi.org/10.1109/AINIT54228.2021.00101",
        "DOI": "10.1109/ainit54228.2021.00101",
        "booktitle": "2021 2nd International Seminar on Artificial Intelligence, Networking and Information Technology (AINIT)",
        "publisher": "IEEE",
        "author": "Chen, Zeng",
        "year": "2021",
        "month": "oct"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "operands",
            "details": [],
            "modifiers": []
          },
          {
            "value": "opcode",
            "details": [],
            "modifiers": []
          },
          {
            "value": "labels in IR",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control {dependence,flow}",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "edge feature: weights",
        "graph: graph (uses node features; uses edge features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: graph matching network",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "261": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Cross-Project Transfer Representation Learning for Vulnerable Function Discovery",
        "volume": "14",
        "ISSN": "1941-0050",
        "url": "http://dx.doi.org/10.1109/TII.2018.2821768",
        "DOI": "10.1109/tii.2018.2821768",
        "number": "7",
        "journal": "IEEE Transactions on Industrial Informatics",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Lin, Guanjun and Zhang, Jun and Luo, Wei and Pan, Lei and Xiang, Yang and De Vel, Olivier and Montague, Paul",
        "year": "2018",
        "month": "jul",
        "pages": "3289\u20133297"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (word2vec)",
        "node feature: node type (word2vec)",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: pooling: max pooling",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "262": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "VulGAI: vulnerability detection based on graphs and images",
        "volume": "135",
        "ISSN": "0167-4048",
        "url": "http://dx.doi.org/10.1016/j.cose.2023.103501",
        "DOI": "10.1016/j.cose.2023.103501",
        "journal": "Computers &amp; Security",
        "publisher": "Elsevier BV",
        "author": "Zhang, Chunyong and Xin, Yang",
        "year": "2023",
        "month": "dec",
        "pages": "103501"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "image: sent2vec embeddings multiplied by centrality measure",
        "node feature: node code tokens (sent2vec)",
        "node feature: network metrics"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-image"
      }
    }
  },
  "263": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICSE \u201922",
        "title": "VulCNN: an image-inspired scalable vulnerability detection system",
        "url": "http://dx.doi.org/10.1145/3510003.3510229",
        "DOI": "10.1145/3510003.3510229",
        "booktitle": "Proceedings of the 44th International Conference on Software Engineering",
        "publisher": "ACM",
        "author": "Wu, Yueming and Zou, Deqing and Dou, Shihan and Yang, Wei and Xu, Duo and Jin, Hai",
        "year": "2022",
        "month": "may",
        "collection": "ICSE \u201922"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "image: sent2vec embeddings multiplied by centrality measure"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-image"
      }
    }
  },
  "265": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Fine-grained Co-Attentive Representation Learning for Semantic Code Search",
        "url": "http://dx.doi.org/10.1109/SANER53432.2022.00055",
        "DOI": "10.1109/saner53432.2022.00055",
        "booktitle": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Deng, Zhongyang and Xu, Ling and Liu, Chao and Yan, Meng and Xu, Zhou and Lei, Yan",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: linearised ast",
        "node feature: node type (n/a)"
      ],
      "n/a": [
        "other: code summary or query (n/a)",
        "other: positional information of tokens/program elements",
        "other: tokens in program element name (n/a)",
        "other: source code (bag of wrods)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: other",
          "misc: pooling: mean pooling",
          "misc: pooling: mlp soft attention sum",
          "misc: fusion: matrix multiplication",
          "misc: attention: softmax attention",
          "misc: attention: sigmoid soft self-attention",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "266": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Two-Stage Attention-Based Model for Code Search with Textual and Structural Features",
        "url": "http://dx.doi.org/10.1109/SANER50967.2021.00039",
        "DOI": "10.1109/saner50967.2021.00039",
        "booktitle": "2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Xu, Ling and Yang, Huanhuan and Liu, Chao and Shuai, Jianhang and Yan, Meng and Lei, Yan and Xu, Zhou",
        "year": "2021",
        "month": "mar"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: bfs linearised ast"
      ],
      "n/a": [
        "other: tokens in program element name (n/a)",
        "other: source code (bow)",
        "other: code summary or query (n/a)",
        "others: sequence of constants and/or identifiers from code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: other",
          "misc: attention: mlp soft attention",
          "misc: fusion: matrix multiplication",
          "misc: cnn: cnn",
          "misc: pooling: max pooling",
          "misc: attention: softmax attention"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "267": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "Self-supervised learning of smart contract representations",
        "url": "http://dx.doi.org/10.1145/3524610.3527894",
        "DOI": "10.1145/3524610.3527894",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Yang, Shouliang and Gu, Xiaodong and Shen, Beijun",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: dfs linearised ast",
        "sequence: dfs linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: general-model-with-examples",
          "base-type: transformer",
          "misc: transformer: transformer encoder",
          "misc: model: supervised: neural: mlp",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-001": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "POPL \u201915",
        "title": "Predicting Program Properties from \u201cBig Code\u201d",
        "url": "http://dx.doi.org/10.1145/2676726.2677009",
        "DOI": "10.1145/2676726.2677009",
        "booktitle": "Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages",
        "publisher": "ACM",
        "author": "Raychev, Veselin and Vechev, Martin and Krause, Andreas",
        "year": "2015",
        "month": "jan",
        "collection": "POPL \u201915"
      }
    },
    "domains": [
      "program element name prediction",
      "misc (type prediction)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "name-graph": {
        "vertices": [
          {
            "value": "constants",
            "details": [],
            "modifiers": []
          },
          {
            "value": "property",
            "details": [],
            "modifiers": []
          },
          {
            "value": "method",
            "details": [],
            "modifiers": []
          },
          {
            "value": "globals",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "relations",
            "details": [
              "e.g. L += R"
            ],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "type-graph": {
        "vertices": [
          {
            "value": "expressions",
            "details": [],
            "modifiers": []
          },
          {
            "value": "constants",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "relations",
            "details": [
              "e.g. L += R"
            ],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "name-graph": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: program element name[s] (n/a)"
      ],
      "type-graph": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)",
        "node feature: program element name[s] (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: other",
          "base-type: classic",
          "misc: model: misc: conditional random field",
          "misc: model: supervised: svm",
          "misc: training method: learnt svm weights used as parameter for conditional random fielid"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-002": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Generative Code Modeling with Graphs",
        "author": "Marc Brockschmidt and Miltiadis Allamanis and Alexander L. Gaunt and Oleksandr Polozov",
        "booktitle": "International Conference on Learning Representations",
        "year": "2019",
        "url": "https://openreview.net/forum?id=Bke4KsA5FX"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-004": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "CAST: Enhancing Code Summarization with Hierarchical Splitting and Reconstruction of Abstract Syntax Trees",
        "url": "http://dx.doi.org/10.18653/v1/2021.emnlp-main.332",
        "DOI": "10.18653/v1/2021.emnlp-main.332",
        "booktitle": "Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing",
        "publisher": "Association for Computational Linguistics",
        "author": "Shi, Ensheng and Wang, Yanlin and Du, Lun and Zhang, Hongyu and Han, Shi and Zhang, Dongmei and Sun, Hongbin",
        "year": "2021"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens with sub-tokens (n/a)",
        "subgraphs: subgraphs (subtrees) based on statements",
        "subgraphs: subgraph with placeholder nodes for other subgraphs"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: tree: child-sum mlp",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-006": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "Internetware \u201918",
        "title": "Profiling Developer Expertise across Software Communities with Heterogeneous Information Network Analysis",
        "url": "http://dx.doi.org/10.1145/3275219.3275226",
        "DOI": "10.1145/3275219.3275226",
        "booktitle": "Proceedings of the Tenth Asia-Pacific Symposium on Internetware",
        "publisher": "ACM",
        "author": "Yan, Jiafei and Sun, Hailong and Wang, Xu and Liu, Xudong and Song, Xiaotao",
        "year": "2018",
        "month": "sep",
        "collection": "Internetware \u201918"
      }
    },
    "domains": [
      "misc (developer ability mining)"
    ],
    "artefacts": [
      "tags/topics",
      "questions/answers",
      "user data (e.g. github)",
      "repository"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "developer",
            "details": [],
            "modifiers": []
          },
          {
            "value": "project",
            "details": [],
            "modifiers": []
          },
          {
            "value": "question",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ability",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "follows",
            "details": [],
            "modifiers": []
          },
          {
            "value": "answered",
            "details": [],
            "modifiers": []
          },
          {
            "value": "asked",
            "details": [],
            "modifiers": []
          },
          {
            "value": "committed",
            "details": [],
            "modifiers": []
          },
          {
            "value": "labelled",
            "details": [
              "project - ability or question - ability"
            ],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "connectivity: transition probability matrix based on edge weights"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: other",
          "base-type: classic",
          "misc: misc: random walk with restarts -> (developer, ability) probability"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-007": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "ATOM: Commit Message Generation Based on Abstract Syntax Tree and Hybrid Ranking",
        "volume": "48",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/tse.2020.3038681",
        "DOI": "10.1109/tse.2020.3038681",
        "number": "5",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Liu, Shangqing and Gao, Cuiyun and Chen, Sen and Nie, Lun Yiu and Liu, Yang",
        "year": "2022",
        "month": "may",
        "pages": "1800\u20131817"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "graph": [
        "paths: paths between changed tokens (n/a)"
      ],
      "ast": [
        "node feature (internal): node type (embedding layer)",
        "node feature (terminal): node code tokens with sub-tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: attention: luong attention",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-008": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE \u201918",
        "title": "Improving automatic source code summarization via deep reinforcement learning",
        "url": "http://dx.doi.org/10.1145/3238147.3238206",
        "DOI": "10.1145/3238147.3238206",
        "booktitle": "Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "Wan, Yao and Zhao, Zhou and Yang, Min and Xu, Guandong and Ying, Haochao and Wu, Jian and Yu, Philip S.",
        "year": "2018",
        "month": "sep",
        "collection": "ASE \u201918"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: reinforcement-agent",
          "base-type: gnn",
          "gnn-functionality: tree: tree-lstm",
          "misc: pooling: attention sum",
          "misc: rnn: lstm",
          "misc: reinforcement-learning: actor-critic network",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-009": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Improving Code Summarization with Block-wise Abstract Syntax Tree Splitting",
        "url": "http://dx.doi.org/10.1109/icpc52881.2021.00026",
        "DOI": "10.1109/icpc52881.2021.00026",
        "booktitle": "2021 IEEE/ACM 29th International Conference on Program Comprehension (ICPC)",
        "publisher": "IEEE",
        "author": "Lin, Chen and Ouyang, Zhichao and Zhuang, Junqing and Chen, Jianqiang and Li, Hui and Wu, Rongxin",
        "year": "2021",
        "month": "may"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "split-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[split up]"
      }
    },
    "features": {
      "ast": [
        "subgraphs: subgraphs [no details]"
      ],
      "split-ast": [
        "node feature: node code tokens (n/a)",
        "node feature: node type (n/a)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: tree: child-sum tree-lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/graph"
      },
      "model-2": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "misc: misc: node embeddings into transformer"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      }
    }
  },
  "sb-010": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Embedding API dependency graph for neural code generation",
        "volume": "26",
        "ISSN": "1573-7616",
        "url": "http://dx.doi.org/10.1007/s10664-021-09968-2",
        "DOI": "10.1007/s10664-021-09968-2",
        "number": "4",
        "journal": "Empirical Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Lyu, Chen and Wang, Ruyun and Zhang, Hongyu and Zhang, Hanwen and Hu, Songlin",
        "year": "2021",
        "month": "apr"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "api-dependency-graph": {
        "vertices": [
          {
            "value": "api",
            "details": [
              "e.g. method"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "api dependency graph"
      }
    },
    "features": {
      "api-dependency-graph": [
        "unclear",
        "connectivity: n-hop neighbourhood of nodes"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: rnn: lstm",
          "gnn-functionality: rnn: lstm over node neighbourhoods"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-011": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE \u201918",
        "title": "Is this class thread-safe? inferring documentation using graph-based learning",
        "url": "http://dx.doi.org/10.1145/3238147.3238212",
        "DOI": "10.1145/3238147.3238212",
        "booktitle": "Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "Habib, Andrew and Pradel, Michael",
        "year": "2018",
        "month": "sep",
        "collection": "ASE \u201918"
      }
    },
    "domains": [
      "misc (documentation assistance)"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "method",
            "details": [],
            "modifiers": []
          },
          {
            "value": "class field",
            "details": [],
            "modifiers": []
          },
          {
            "value": "constructors",
            "details": [],
            "modifiers": []
          },
          {
            "value": "relation nodes",
            "details": [],
            "modifiers": [
              "calls",
              "reads",
              "writes",
              "sync",
              "modified"
            ]
          }
        ],
        "edges": [
          {
            "value": "nodes connected with relation node in between",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "subgraphs: subgraphs [no details]",
        "graph feature vector: aggregated subgraphs embeddings (weisfeiler-lehman kernel)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/subgraph based features"
      }
    }
  },
  "sb-012": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning to Represent Edits",
        "author": "Pengcheng Yin and Graham Neubig and Miltiadis Allamanis and Marc Brockschmidt and Alexander L. Gaunt",
        "booktitle": "International Conference on Learning Representations",
        "year": "2019",
        "url": "https://openreview.net/forum?id=BJl6AjC5F7"
      }
    },
    "domains": [
      "misc (neural code editing)"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "graph-2": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "old + new"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "new",
            "details": [],
            "modifiers": []
          },
          {
            "value": "old",
            "details": [],
            "modifiers": []
          },
          {
            "value": "unchanged",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ],
      "graph-2": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: ggnn",
          "n/a",
          "gnn-functionality: misc: lstm modelling history of graph embeddings",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-013": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICSE \u201922",
        "title": "AST-trans: code summarization with efficient tree-structured attention",
        "url": "http://dx.doi.org/10.1145/3510003.3510224",
        "DOI": "10.1145/3510003.3510224",
        "booktitle": "Proceedings of the 44th International Conference on Software Engineering",
        "publisher": "ACM",
        "author": "Tang, Ze and Shen, Xiaoyu and Li, Chuanyi and Ge, Jidong and Huang, Liguo and Zhu, Zhelin and Luo, Bin",
        "year": "2022",
        "month": "may",
        "collection": "ICSE \u201922"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (n/a)",
        "connectivity: shortest path length matrix",
        "node feature (terminal): node code tokens (n/a)",
        "sequence: pre-order linearised ast",
        "connectivity: sibling distance matrix"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: attention: connectivity"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "sb-015": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Cyber-guided Deep Neural Network for Malicious Repository Detection in GitHub",
        "url": "http://dx.doi.org/10.1109/icbk50248.2020.00071",
        "DOI": "10.1109/icbk50248.2020.00071",
        "booktitle": "2020 IEEE International Conference on Knowledge Graph (ICKG)",
        "publisher": "IEEE",
        "author": "Zhang, Yiming and Fan, Yujie and Hou, Shifu and Ye, Yanfang and Xiao, Xusheng and Li, Pan and Shi, Chuan and Zhao, Liang and Xu, Shouhuai",
        "year": "2020",
        "month": "aug"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "repository"
    ],
    "graphs": {
      "graph-1": {
        "vertices": [
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          },
          {
            "value": "token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "graph-2": {
        "vertices": [
          {
            "value": "user",
            "details": [],
            "modifiers": []
          },
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          },
          {
            "value": "source code file",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "<node> contains <node>",
            "details": [],
            "modifiers": []
          },
          {
            "value": "comment",
            "details": [],
            "modifiers": []
          },
          {
            "value": "fork",
            "details": [],
            "modifiers": []
          },
          {
            "value": "star",
            "details": [],
            "modifiers": []
          },
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph-1": [
        "node feature: node embedding (deepwalk)"
      ],
      "graph-2": [
        "metapaths"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: other",
          "misc: model: supervised: neural: mlp"
        ],
        "classification-regression-granularity": "ndoe",
        "clustering-granularity": null,
        "usage-details": "main/node features [random walk]"
      }
    }
  },
  "sb-016": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "PLDI \u201918",
        "title": "A general path-based representation for predicting program properties",
        "url": "http://dx.doi.org/10.1145/3192366.3192412",
        "DOI": "10.1145/3192366.3192412",
        "booktitle": "Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation",
        "publisher": "ACM",
        "author": "Alon, Uri and Zilberstein, Meital and Levy, Omer and Yahav, Eran",
        "year": "2018",
        "month": "jun",
        "collection": "PLDI \u201918"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "path: arbitrary ast path"
      ]
    },
    "models": {
      "model-2": {
        "tags": [
          "base-type: skipgram",
          "mode: other",
          "misc: word2vec: graph adjusted skipgram model"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-1": {
        "tags": [
          "mode: other",
          "base-type: classic",
          "misc: model: misc: conditional random field",
          "misc: model: supervised: svm",
          "misc: training method: learnt svm weights used as parameter for conditional random fielid"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-017": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "JSAC: A Novel Framework to Detect Malicious JavaScript via CNNs over AST and CFG",
        "url": "http://dx.doi.org/10.1109/ijcnn.2019.8851760",
        "DOI": "10.1109/ijcnn.2019.8851760",
        "booktitle": "2019 International Joint Conference on Neural Networks (IJCNN)",
        "publisher": "IEEE",
        "author": "Liang, Hongliang and Yang, Yuxing and Sun, Lu and Jiang, Lin",
        "year": "2019",
        "month": "jul"
      }
    },
    "domains": [
      "malicious code detection"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "internal"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node embedding (continuous binary tree)"
      ],
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: random vector"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: tree: tbcnn",
          "gnn-functionality: gnn: gbcnn",
          "gnn-functionality: pooling: graph: dynamic pooling"
        ],
        "classification-regression-granularity": "two graphs",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-018": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Neural software vulnerability analysis using rich intermediate graph representations of programs",
        "volume": "553",
        "ISSN": "0020-0255",
        "url": "http://dx.doi.org/10.1016/j.ins.2020.11.053",
        "DOI": "10.1016/j.ins.2020.11.053",
        "journal": "Information Sciences",
        "publisher": "Elsevier BV",
        "author": "Ghaffarian, Seyed Mohammad and Shahriari, Hamid Reza",
        "year": "2021",
        "month": "apr",
        "pages": "189\u2013207"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      },
      "cdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "ddg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (tf/idf)",
        "node feature: node code tokens (doc2vec)"
      ],
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)",
        "node feature: node code tokens (tf/idf)"
      ],
      "cdg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (tf/idf)"
      ],
      "cdf": [
        "node feature: node code tokens (doc2vec)"
      ],
      "ddg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)",
        "node feature: node code tokens (tf/idf)"
      ]
    },
    "models": {
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: sum pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-021": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Control Flow Graph Embedding Based on Multi-Instance Decomposition for Bug Localization",
        "volume": "34",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v34i04.5844",
        "DOI": "10.1609/aaai.v34i04.5844",
        "number": "04",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Huo, Xuan and Li, Ming and Zhou, Zhi-Hua",
        "year": "2020",
        "month": "apr",
        "pages": "4223\u20134230"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)"
      ],
      "n/a": [
        "other: bug report (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: cnn",
          "gnn-functionality: node-transform: cnn",
          "gnn-functionality: rnn: lstm over linearised nodes",
          "gnn-functionality: misc: deep walk to extact paths from graphs",
          "misc: cnn: cnn",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-022": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201920",
        "title": "A Self-Attentional Neural Architecture for Code Completion with Multi-Task Learning",
        "url": "http://dx.doi.org/10.1145/3387904.3389261",
        "DOI": "10.1145/3387904.3389261",
        "booktitle": "Proceedings of the 28th International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Liu, Fang and Li, Ge and Wei, Bolin and Xia, Xin and Fu, Zhiyi and Jin, Zhi",
        "year": "2020",
        "month": "jul",
        "collection": "ICPC \u201920"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[partial, generated]"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (n/a)",
        "node feature (terminal): node code tokens (n/a)",
        "node feature (terminal): node type (n/a)",
        "path: path from root to node",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: other",
          "base-type: transformer",
          "misc: transformer: transformer encoder [transformer-xl]",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-023": {
    "bibtex": {
      "type": "book",
      "info": {
        "title": "Deep Learning On Code with an Unbounded Vocabulary",
        "ISSN": "2516-2314",
        "url": "http://dx.doi.org/10.29007/bc6w",
        "DOI": "10.29007/bc6w",
        "journal": "EasyChair Preprints",
        "institution": "EasyChair",
        "author": "Cvitkovic, Milan and Singh, Badal and Anandkumar, Anima",
        "year": "2018",
        "month": "aug"
      }
    },
    "domains": [
      "misc (variable usage prediction)",
      "program element name prediction"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "augmented-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "augmented-ast": [
        "graph: graph (uses node features)",
        "node feature: node type (embedding layer)"
      ],
      "augmetned-ast": [
        "node feature: node code tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: general-model-with-examples",
          "base-type: other",
          "gnn-functionality: gnn: ggnn",
          "misc: cnn: character-level cnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-024": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Static Detection of Control-Flow-Related Vulnerabilities Using Graph Embedding",
        "url": "http://dx.doi.org/10.1109/iceccs.2019.00012",
        "DOI": "10.1109/iceccs.2019.00012",
        "booktitle": "2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)",
        "publisher": "IEEE",
        "author": "Cheng, Xiao and Wang, Haoyu and Hua, Jiayi and Zhang, Miao and Xu, Guoai and Yi, Li and Sui, Yulei",
        "year": "2019",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-025": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Convolutional Neural Networks over Tree Structures for Programming Language Processing",
        "volume": "30",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v30i1.10139",
        "DOI": "10.1609/aaai.v30i1.10139",
        "number": "1",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Mou, Lili and Li, Ge and Zhang, Lu and Wang, Tao and Jin, Zhi",
        "year": "2016",
        "month": "feb"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node embedding (continuous binary tree)"
      ]
    },
    "models": {
      "tree-cnn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: tree: tbcnn",
          "gnn-functionality: pooling: graph: unspecified"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-027": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Deep code comment generation with hybrid lexical and syntactical information",
        "volume": "25",
        "ISSN": "1573-7616",
        "url": "http://dx.doi.org/10.1007/s10664-019-09730-9",
        "DOI": "10.1007/s10664-019-09730-9",
        "number": "3",
        "journal": "Empirical Software Engineering",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Hu, Xing and Li, Ge and Xia, Xin and Lo, David and Jin, Zhi",
        "year": "2019",
        "month": "jun",
        "pages": "2179\u20132217"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (n/a)",
        "sequence: linearised ast"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: pooling: attention sum",
          "misc: rnn: gru"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-028": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "IJCAI-2018",
        "title": "Code Completion with Neural Attention and Pointer Networks",
        "url": "http://dx.doi.org/10.24963/ijcai.2018/578",
        "DOI": "10.24963/ijcai.2018/578",
        "booktitle": "Proceedings of the Twenty-Seventh International Joint Conference on Artificial Intelligence",
        "publisher": "International Joint Conferences on Artificial Intelligence Organization",
        "author": "Li, Jian and Wang, Yue and Lyu, Michael R. and King, Irwin",
        "year": "2018",
        "month": "jul",
        "pages": "4159\u20134165",
        "collection": "IJCAI-2018"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (n/a)",
        "node feature: node code tokens (n/a)",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: other",
          "n/a",
          "misc: attention: attention",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-029": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CODIT: Code Editing With Tree-Based Neural Models",
        "volume": "48",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/tse.2020.3020502",
        "DOI": "10.1109/tse.2020.3020502",
        "number": "4",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Chakraborty, Saikat and Ding, Yangruibo and Allamanis, Miltiadis and Ray, Baishakhi",
        "year": "2022",
        "month": "apr",
        "pages": "1385\u20131399"
      }
    },
    "domains": [
      "misc (neural code editing)"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "other: sequence of rules used to generate ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/exoctic-graph-feature-sequence"
      }
    }
  },
  "sb-031": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "author": "Chen, Xinyun and Liu, Chang and Song, Dawn",
        "title": "Tree-to-tree neural networks for program translation",
        "year": "2018",
        "publisher": "Curran Associates Inc.",
        "address": "Red Hook, NY, USA",
        "abstract": "Program translation is an important tool to migrate legacy code in one language into an ecosystem built in a different language. In this work, we are the first to employ deep neural networks toward tackling this problem. We observe that program translation is a modular procedure, in which a sub-tree of the source tree is translated into the corresponding target sub-tree at each step. To capture this intuition, we design a tree-to-tree neural network to translate a source tree into a target one. Meanwhile, we develop an attention mechanism for the tree-to-tree model, so that when the decoder expands one non-terminal in the target tree, the attention mechanism locates the corresponding sub-tree in the source tree to guide the expansion of the decoder. We evaluate the program translation capability of our tree-to-tree model against several state-of-the-art approaches. Compared against other neural translation models, we observe that our approach is consistently better than the baselines with a margin of up to 15 points. Further, our approach can improve the previous state-of-the-art program translation approaches by a margin of 20 points on the translation of real-world projects.",
        "booktitle": "Proceedings of the 32nd International Conference on Neural Information Processing Systems",
        "pages": "2552\u20132562",
        "numpages": "11",
        "location": "Montr\\'{e}al, Canada",
        "series": "NIPS'18"
      }
    },
    "domains": [
      "misc (coding language migration)"
    ],
    "artefacts": [
      "source code pair (different languages)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: tree: tree-lstm",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-033": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "ElementRank: Ranking Java Software Classes and Packages using a Multilayer Complex Network-Based Approach",
        "volume": "47",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/tse.2019.2946357",
        "DOI": "10.1109/tse.2019.2946357",
        "number": "10",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Pan, Weifeng and Ming, Hua and Chang, Carl K. and Yang, Zijiang and Kim, Dae-Kyoo",
        "year": "2021",
        "month": "oct",
        "pages": "2272\u20132295"
      }
    },
    "domains": [
      "misc (program understanding assistance)"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "multilayer-class-network": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      },
      "multilayer-package-network": {
        "vertices": [
          {
            "value": "package",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface dependencies of classes",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interfaces in packages",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "multilayer-class-network": [
        "subgraphs: subgraphs based on edge type"
      ],
      "multilayer-package-network": [
        "edge feature: weights",
        "subgraphs: subgraphs based on edge type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: classic",
          "mode: ranking",
          "misc: model: ranking: pagerank"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-035": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Identifying Vulnerable GitHub Repositories and Users in Scientific Cyberinfrastructure: An Unsupervised Graph Embedding Approach",
        "url": "http://dx.doi.org/10.1109/isi49825.2020.9280544",
        "DOI": "10.1109/isi49825.2020.9280544",
        "booktitle": "2020 IEEE International Conference on Intelligence and Security Informatics (ISI)",
        "publisher": "IEEE",
        "author": "Lazarine, Ben and Samtani, Sagar and Patton, Mark and Zhu, Hongyi and Ullman, Steven and Ampel, Benjamin and Chen, Hsinchun",
        "year": "2020",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "user data (e.g. github)",
      "repository"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "repository",
            "details": [],
            "modifiers": []
          },
          {
            "value": "user",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "subgraphs: bipartite graps split into monopartite subgraphs",
        "graph feature vector: subgraph embeddings (deepwalk)",
        "node feature: vulnerabilities detected by static analysis tools",
        "node feature: domain-specific handcrafted expert features",
        "node feature: domain-specific handcrafted expert features",
        "node feature: domain-specific handcrafted expert features"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: clustering",
          "base-type: classic",
          "misc: model: clustering: k-means"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": "node",
        "usage-details": "main/graph"
      }
    }
  },
  "sb-037": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning Structural Edits via Incremental Tree Transformations",
        "author": "Ziyu Yao and Frank F. Xu and Pengcheng Yin and Huan Sun and Graham Neubig",
        "booktitle": "International Conference on Learning Representations",
        "year": "2021",
        "url": "https://openreview.net/forum?id=v9hAX77--cZ"
      }
    },
    "domains": [
      "misc (neural code editing)"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: sequence of edits made to ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: other",
          "n/a",
          "gnn-functionality: gnn: ggnn",
          "misc: rnn: bidirectional lstm",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: mean pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-038": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Modeling programs hierarchically with stack-augmented LSTM",
        "volume": "164",
        "ISSN": "0164-1212",
        "url": "http://dx.doi.org/10.1016/j.jss.2020.110547",
        "DOI": "10.1016/j.jss.2020.110547",
        "journal": "Journal of Systems and Software",
        "publisher": "Elsevier BV",
        "author": "Liu, Fang and Zhang, Lu and Jin, Zhi",
        "year": "2020",
        "month": "jun",
        "pages": "110547"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (terminal): node type (n/a)",
        "node feature (internal): node type (n/a)",
        "sequence: pre-order linearised ast",
        "node feature (terminal): node code tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "gnn-functionality: tree: stack-based lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-039": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "author": "Gupta, Rahul and Kanade, Aditya and Shevade, Shirish",
        "title": "Neural attribution for semantic bug-localization in student programs",
        "year": "2019",
        "publisher": "Curran Associates Inc.",
        "address": "Red Hook, NY, USA",
        "abstract": "Providing feedback is an integral part of teaching. Most open online courses on programming make use of automated grading systems to support programming assignments and give real-time feedback. These systems usually rely on test results to quantify the programs' functional correctness. They return failing tests to the students as feedback. However, students may find it difficult to debug their programs if they receive no hints about where the bug is and how to fix it. In this work, we present NeuralBugLocator, a deep learning based technique, that can localize the bugs in a faulty program with respect to a failing test, without even running the program. At the heart of our technique is a novel tree convolutional neural network which is trained to predict whether a program passes or fails a given test. To localize the bugs, we analyze the trained network using a state-of-the-art neural prediction attribution technique and see which lines of the programs make it predict the test outcomes. Our experiments show that NeuralBugLocator is generally more accurate than two state-of-the-art program-spectrum based and one syntactic difference based bug-localization baselines.",
        "booktitle": "Proceedings of the 33rd International Conference on Neural Information Processing Systems",
        "articleno": "1064",
        "numpages": "11"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "internal"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "node matrix: breadth first sequence of nodes, where every node is padded with its direct children"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-040": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Deep Learning With Customized Abstract Syntax Tree for Bug Localization",
        "volume": "7",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/access.2019.2936948",
        "DOI": "10.1109/access.2019.2936948",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Liang, Hongliang and Sun, Lu and Wang, Meilin and Yang, Yuxing",
        "year": "2019",
        "pages": "116309\u2013116320"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "customised-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "customised-ast": [
        "node feature: node type (word2vec)",
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: bug report (word2vec)",
        "other: source code (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: tree: tbcnn",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-041": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201920",
        "title": "Exploiting Code Knowledge Graph for Bug Localization via Bi-directional Attention",
        "url": "http://dx.doi.org/10.1145/3387904.3389281",
        "DOI": "10.1145/3387904.3389281",
        "booktitle": "Proceedings of the 28th International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Zhang, Jinglei and Xie, Rui and Ye, Wei and Zhang, Yuhan and Zhang, Shikun",
        "year": "2020",
        "month": "jul",
        "collection": "ICPC \u201920"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "knowledge-graph": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "property",
            "details": [],
            "modifiers": []
          },
          {
            "value": "method",
            "details": [],
            "modifiers": []
          },
          {
            "value": "parameter",
            "details": [],
            "modifiers": []
          },
          {
            "value": "variable",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          },
          {
            "value": "has",
            "details": [],
            "modifiers": []
          },
          {
            "value": "instance of",
            "details": [],
            "modifiers": []
          },
          {
            "value": "return type",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "n/a": [
        "other: source code (word2vec)",
        "other: bug report (word2vec)"
      ],
      "knowledge-graph": [
        "node feature: node embedding (TransE, TransH, TransR)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: cnn",
          "gnn-functionality: misc: add knowledge from knowledge graph"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-042": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "IJCAI-PRICAI-2020",
        "title": "CooBa: Cross-project Bug Localization via Adversarial Transfer Learning",
        "url": "http://dx.doi.org/10.24963/ijcai.2020/493",
        "DOI": "10.24963/ijcai.2020/493",
        "booktitle": "Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence",
        "publisher": "International Joint Conferences on Artificial Intelligence Organization",
        "author": "Zhu, Ziye and Li, Yun and Tong, Hanghang and Wang, Yu",
        "year": "2020",
        "month": "jul",
        "pages": "3565\u20133571",
        "collection": "IJCAI-PRICAI-2020"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (glove)"
      ],
      "n/a": [
        "other: bug report (n/a)",
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: gnn",
          "base-type: cnn",
          "gnn-functionality: gnn: gcn",
          "misc: pooling: unspecified",
          "misc: rnn: bidirectional lstm",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-043": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Learning a graph-based classifier for fault localization",
        "volume": "63",
        "ISSN": "1869-1919",
        "url": "http://dx.doi.org/10.1007/s11432-019-2720-1",
        "DOI": "10.1007/s11432-019-2720-1",
        "number": "6",
        "journal": "Science China Information Sciences",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Zhong, Hao and Mei, Hong",
        "year": "2020",
        "month": "may"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "node feature: node type (n/a)",
        "node feature: network metrics",
        "node feature: global LDA vector of bug report (binary encoding)",
        "node feature: number of api names in method",
        "node feature: program element name[s] (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: decision tree",
          "misc: model: meta: adaboost"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      }
    }
  },
  "sb-045": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning-Based Recursive Aggregation of Abstract Syntax Trees for Code Clone Detection",
        "url": "http://dx.doi.org/10.1109/saner.2019.8668039",
        "DOI": "10.1109/saner.2019.8668039",
        "booktitle": "2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Buch, Lutz and Andrzejak, Artur",
        "year": "2019",
        "month": "feb"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[binarised]"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (word2vec)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: tree: tree-lstm variant"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-049": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201918",
        "title": "Path-based function embedding and its application to error-handling specification mining",
        "url": "http://dx.doi.org/10.1145/3236024.3236059",
        "DOI": "10.1145/3236024.3236059",
        "booktitle": "Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "DeFreez, Daniel and Thakur, Aditya V. and Rubio-Gonz\u00e1lez, Cindy",
        "year": "2018",
        "month": "oct",
        "collection": "ESEC/FSE \u201918"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "labelled-pushdown-system": {
        "vertices": [
          {
            "value": "state",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "transitions between states",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "labelled pushdown system"
      }
    },
    "features": {
      "labelled-pushdown-system": [
        "paths: paths using random walk"
      ]
    },
    "models": {
      "cbow": {
        "tags": [
          "base-type: cbow",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-050": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Active Learning of Discriminative Subgraph Patterns for API Misuse Detection",
        "volume": "48",
        "ISSN": "2326-3881",
        "url": "http://dx.doi.org/10.1109/tse.2021.3069978",
        "DOI": "10.1109/tse.2021.3069978",
        "number": "8",
        "journal": "IEEE Transactions on Software Engineering",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Kang, Hong Jin and Lo, David",
        "year": "2022",
        "month": "aug",
        "pages": "2761\u20132783"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "extended-api-usage-graph": {
        "vertices": [
          {
            "value": "objects",
            "details": [],
            "modifiers": []
          },
          {
            "value": "values",
            "details": [],
            "modifiers": []
          },
          {
            "value": "method invocations",
            "details": [],
            "modifiers": []
          },
          {
            "value": "constructor calls",
            "details": [],
            "modifiers": []
          },
          {
            "value": "field access",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control statement",
            "details": [],
            "modifiers": []
          },
          {
            "value": "inheritance",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": [
              "linear"
            ]
          },
          {
            "value": "synchronization",
            "details": [],
            "modifiers": []
          },
          {
            "value": "throw",
            "details": [],
            "modifiers": []
          },
          {
            "value": "handle",
            "details": [],
            "modifiers": []
          },
          {
            "value": "param",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "extended-api-usage-graph": [
        "graph feature vector: presence of specific subgraphs (binary encoding)"
      ]
    },
    "models": {
      "knn": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: knn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/subgraph-presence"
      },
      "naive-bayes": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: naive bayes"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/subgraph-presence"
      },
      "svm": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: kernel: rbf",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/subgraph-presence"
      }
    }
  },
  "sb-051": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Generative API usage code recommendation with parameter concretization",
        "volume": "62",
        "ISSN": "1869-1919",
        "url": "http://dx.doi.org/10.1007/s11432-018-9821-9",
        "DOI": "10.1007/s11432-018-9821-9",
        "number": "9",
        "journal": "Science China Information Sciences",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Chen, Chi and Peng, Xin and Sun, Jun and Xing, Zhenchang and Wang, Xin and Zhao, Yifan and Zhang, Hairui and Zhao, Wenyun",
        "year": "2019",
        "month": "jul"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "statement-model": {
        "tags": [
          "base-type: gnn",
          "mode: unclear",
          "gnn-functionality: tree: child-sum tree-lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-052": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Graph Neural Network Based Collaborative Filtering for API Usage Recommendation",
        "url": "http://dx.doi.org/10.1109/saner50967.2021.00013",
        "DOI": "10.1109/saner50967.2021.00013",
        "booktitle": "2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Ling, Chunyang and Zou, Yanzhen and Xie, Bing",
        "year": "2021",
        "month": "mar"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "method",
            "details": [],
            "modifiers": []
          },
          {
            "value": "api",
            "details": [],
            "modifiers": []
          },
          {
            "value": "structural",
            "details": [
              "e.g. class or package"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "method uses api",
            "details": [],
            "modifiers": []
          },
          {
            "value": "project structure",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: unique node id",
        "node feature: program element name[s] with sub-tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: node-transform: gru",
          "gnn-functionality: architecture: gnn layers with residual connections into concatenation"
        ],
        "classification-regression-granularity": "link prediction",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-053": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Code Completion by Modeling Flattened Abstract Syntax Trees as Graphs",
        "volume": "35",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v35i16.17650",
        "DOI": "10.1609/aaai.v35i16.17650",
        "number": "16",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Wang, Yanlin and Li, Hui",
        "year": "2021",
        "month": "may",
        "pages": "14015\u201314023"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[partial, generated]"
      }
    },
    "features": {
      "ast-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (n/a)",
        "node feature: node code tokens (n/a)",
        "node feature: node positional information",
        "node feature: node positional information"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat variant",
          "gnn-functionality: architecture: residual connections",
          "gnn-functionality: node-matrix-transform: attention",
          "gnn-functionality: gnn: custom message passing scheme where parents receive messages from children",
          "gnn-functionality: pooling: graph: sigmoid attention sum"
        ],
        "classification-regression-granularity": "other",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-055": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "TreeCaps: Tree-Based Capsule Networks for Source Code Processing",
        "volume": "35",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v35i1.16074",
        "DOI": "10.1609/aaai.v35i1.16074",
        "number": "1",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Bui, Nghi D. Q. and Yu, Yijun and Jiang, Lingxiao",
        "year": "2021",
        "month": "may",
        "pages": "30\u201338"
      }
    },
    "domains": [
      "program element name prediction",
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (embedding layer)",
        "node feature: node code tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "base-type: other",
          "gnn-functionality: tree: tbcnn",
          "misc: misc: capsule network"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-056": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "FCCA: Hybrid Code Representation for Functional Clone Detection Using Attention Networks",
        "volume": "70",
        "ISSN": "1558-1721",
        "url": "http://dx.doi.org/10.1109/tr.2020.3001918",
        "DOI": "10.1109/tr.2020.3001918",
        "number": "1",
        "journal": "IEEE Transactions on Reliability",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Hua, Wei and Sui, Yulei and Wan, Yao and Liu, Guangzhong and Xu, Guandong",
        "year": "2021",
        "month": "mar",
        "pages": "304\u2013318"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[binarised]"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ],
      "cfg": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (doc2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: tree: tree-lstm",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-057": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE\u201916",
        "title": "Deep learning code fragments for code clone detection",
        "url": "http://dx.doi.org/10.1145/2970276.2970326",
        "DOI": "10.1145/2970276.2970326",
        "booktitle": "Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "White, Martin and Tufano, Michele and Vendome, Christopher and Poshyvanyk, Denys",
        "year": "2016",
        "month": "aug",
        "collection": "ASE\u201916"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[binarised]"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (custom embedding model)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "mode: unclear",
          "base-type: rnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/source code"
      },
      "model-2": {
        "tags": [
          "mode: autoencoder",
          "base-type: mlp",
          "gnn-functionality: tree: recursively applied bottom-up auto-encoder for node embeddings"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/nodes-bottom-up"
      }
    }
  },
  "sb-058": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Fast Code Clone Detection Based on Weighted Recursive Autoencoders",
        "volume": "7",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/access.2019.2938825",
        "DOI": "10.1109/access.2019.2938825",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Zeng, Jie and Ben, Kerong and Li, Xiaowei and Zhang, Xian",
        "year": "2019",
        "pages": "125062\u2013125078"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[binarised]"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature (terminal): node code tokens (word2vec)",
        "other: tf/idf weights of node types"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: mlp",
          "mode: autoencoder",
          "gnn-functionality: tree: recursively applied bottom-up auto-encoder for node embeddings"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/nodes-bottom-up"
      }
    }
  },
  "sb-059": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Neural Detection of Semantic Code Clones Via Tree-Based Convolution",
        "url": "http://dx.doi.org/10.1109/icpc.2019.00021",
        "DOI": "10.1109/icpc.2019.00021",
        "booktitle": "2019 IEEE/ACM 27th International Conference on Program Comprehension (ICPC)",
        "publisher": "IEEE",
        "author": "Yu, Hao and Lam, Wing and Chen, Long and Li, Ge and Xie, Tao and Wang, Qianxiang",
        "year": "2019",
        "month": "may"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (weighted sum of one-hot character embeddings)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: tree: tbcnn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-060": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ISSTA \u201920",
        "title": "Functional code clone detection with syntax and semantics fusion learning",
        "url": "http://dx.doi.org/10.1145/3395363.3397362",
        "DOI": "10.1145/3395363.3397362",
        "booktitle": "Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis",
        "publisher": "ACM",
        "author": "Fang, Chunrong and Liu, Zixi and Shi, Yangyang and Huang, Jeff and Shi, Qingkai",
        "year": "2020",
        "month": "jul",
        "collection": "ISSTA \u201920"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[inter method]"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg[inter method]"
      }
    },
    "features": {
      "cfg": [
        "graph feature vector: embedding (graph2vec)"
      ],
      "ast": [
        "node feature: node code tokens (word2vec)",
        "graph feature vector: aggregated node features"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp"
        ],
        "classification-regression-granularity": "two graphs",
        "clustering-granularity": null,
        "usage-details": "main/graph-embedding"
      }
    }
  },
  "sb-061": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "IJCAI-2017",
        "title": "Supervised Deep Features for Software Functional Clone Detection by Exploiting Lexical and Syntactical Information in Source Code",
        "url": "http://dx.doi.org/10.24963/ijcai.2017/423",
        "DOI": "10.24963/ijcai.2017/423",
        "booktitle": "Proceedings of the Twenty-Sixth International Joint Conference on Artificial Intelligence",
        "publisher": "International Joint Conferences on Artificial Intelligence Organization",
        "author": "Wei, Huihui and Li, Ming",
        "year": "2017",
        "month": "aug",
        "pages": "3034\u20133040",
        "collection": "IJCAI-2017"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[binarised]"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (word2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: tree: child-sum tree-lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-064": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A Novel Neural Source Code Representation Based on Abstract Syntax Tree",
        "url": "http://dx.doi.org/10.1109/icse.2019.00086",
        "DOI": "10.1109/icse.2019.00086",
        "booktitle": "2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)",
        "publisher": "IEEE",
        "author": "Zhang, Jian and Wang, Xu and Zhang, Hongyu and Sun, Hailong and Wang, Kaixuan and Liu, Xudong",
        "year": "2019",
        "month": "may"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (word2vec)",
        "node feature (internal): node type (word2vec)",
        "subgraphs: subgraphs (subtrees) based on statements"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "base-type: mlp",
          "mode: autoencoder",
          "gnn-functionality: tree: recursively applied bottom-up auto-encoder for node embeddings"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/nodes-bottom-up"
      },
      "model-2": {
        "tags": [
          "base-type: rnn",
          "gnn-functionality: architecture: gru over subgraph embeddings",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/node-embeddings"
      }
    }
  },
  "sb-065": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICSE \u201918",
        "title": "Deep learning similarities from different representations of source code",
        "url": "http://dx.doi.org/10.1145/3196398.3196431",
        "DOI": "10.1145/3196398.3196431",
        "booktitle": "Proceedings of the 15th International Conference on Mining Software Repositories",
        "publisher": "ACM",
        "author": "Tufano, Michele and Watson, Cody and Bavota, Gabriele and Di Penta, Massimiliano and White, Martin and Poshyvanyk, Denys",
        "year": "2018",
        "month": "may",
        "collection": "ICSE \u201918"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "graph feature vector: embedding (HOPE)"
      ],
      "ast": [
        "node feature: node type (n/a)",
        "sequence: linearised ast"
      ],
      "n/a": [
        "other: bytecode instructions corresponding to code",
        "others: sequence of constants and/or identifiers from code (n/a)"
      ]
    },
    "models": {
      "sequence-model-1": {
        "tags": [
          "mode: unclear",
          "base-type: rnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/graph-as-sequence/other tokens"
      },
      "sequence-model-2": {
        "tags": [
          "base-type: mlp",
          "mode: autoencoder",
          "misc: misc: recursively auto-encode pairs (n items -> n - 1 items -> ... -> 1 item)"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/node-embeddings/graph-as-sequence"
      }
    }
  },
  "sb-066": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "CRaDLe: Deep code retrieval based on semantic Dependency Learning",
        "volume": "141",
        "ISSN": "0893-6080",
        "url": "http://dx.doi.org/10.1016/j.neunet.2021.04.019",
        "DOI": "10.1016/j.neunet.2021.04.019",
        "journal": "Neural Networks",
        "publisher": "Elsevier BV",
        "author": "Gu, Wenchao and Li, Zongjie and Gao, Cuiyun and Wang, Chaozheng and Zhang, Hongyu and Xu, Zenglin and Lyu, Michael R.",
        "year": "2021",
        "month": "sep",
        "pages": "385\u2013394"
      }
    },
    "domains": [
      "neural code search"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "pdg": [
        "connectivity: adjacency matrix",
        "node feature: node code tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "base-type: mlp",
          "gnn-functionality: adjacency-matrix-transform: mlp",
          "misc: pooling: max pooling",
          "misc: attention: attention",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-067": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201918",
        "title": "DeepSim: deep learning code functional similarity",
        "url": "http://dx.doi.org/10.1145/3236024.3236068",
        "DOI": "10.1145/3236024.3236068",
        "booktitle": "Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "Zhao, Gang and Huang, Jeff",
        "year": "2018",
        "month": "oct",
        "collection": "ESEC/FSE \u201918"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      }
    },
    "features": {
      "cfg": [
        "connectivity: 3D tensor with e_ij denoting features for the relationship between nodes i and j"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: siamese (classification)",
          "base-type: mlp"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "sb-069": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Bilateral Dependency Neural Networks for Cross-Language Algorithm Classification",
        "url": "http://dx.doi.org/10.1109/saner.2019.8667995",
        "DOI": "10.1109/saner.2019.8667995",
        "booktitle": "2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Bui, Nghi D. Q. and Yu, Yijun and Jiang, Lingxiao",
        "year": "2019",
        "month": "feb"
      }
    },
    "domains": [
      "program semantics"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "dependency-tree": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dependency-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "dependency-tree": [
        "graph: graph (uses node features)",
        "node feature: node type (n/a)"
      ],
      "dependency-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (n/a)"
      ],
      "ast": [
        "graph: graph (uses node features)",
        "unclear"
      ]
    },
    "models": {
      "ggnn": {
        "tags": [
          "mode: siamese (classification)",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "tbcnn": {
        "tags": [
          "base-type: gnn",
          "mode: siamese (classification)",
          "gnn-functionality: tree: tbcnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-070": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE \u201920",
        "title": "A unified framework to learn program semantics with graph neural networks",
        "url": "http://dx.doi.org/10.1145/3324884.3418924",
        "DOI": "10.1145/3324884.3418924",
        "booktitle": "Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "Liu, Shangqing",
        "year": "2020",
        "month": "dec",
        "collection": "ASE \u201920"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "node feature: node type (integer)",
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: general-model-with-examples",
          "gnn-functionality: node-transform: bidirectional lstm",
          "gnn-functionality: gnn: hybrid message passing using static and dynamic adjacency matrices",
          "gnn-functionality: dynamic graph: dynamic adjacency matrix using attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-072": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "HOPPITY: LEARNING GRAPH TRANSFORMATIONS TO DETECT AND FIX BUGS IN PROGRAMS",
        "author": "Elizabeth Dinella and Hanjun Dai and Ziyang Li and Mayur Naik and Le Song and Ke Wang",
        "booktitle": "International Conference on Learning Representations",
        "year": "2020",
        "url": "https://openreview.net/forum?id=SJeqs6EFvB"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "n/a",
          "gnn-functionality: gnn: gin",
          "misc: attention: attention",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: mean pooling",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-074": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "SIGSOFT \u201908/FSE-16",
        "title": "Predicting failures with developer networks and social network analysis",
        "url": "http://dx.doi.org/10.1145/1453101.1453106",
        "DOI": "10.1145/1453101.1453106",
        "booktitle": "Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering",
        "publisher": "ACM",
        "author": "Meneely, Andrew and Williams, Laurie and Snipes, Will and Osborne, Jason",
        "year": "2008",
        "month": "nov",
        "collection": "SIGSOFT \u201908/FSE-16"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (commit/diff/changeset)",
      "user data (e.g. github)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "developer",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "worked on same file in same release",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: network metrics"
      ],
      "n/a": [
        "other: software metrics",
        "other: aggregated node features"
      ]
    },
    "models": {
      "logistic-regression": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "negative-binomial-regression": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: negative binomial regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "poisson-regression": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: poisson regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "sb-075": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Putting It All Together: Using Socio-technical Networks to Predict Failures",
        "url": "http://dx.doi.org/10.1109/issre.2009.17",
        "DOI": "10.1109/issre.2009.17",
        "booktitle": "2009 20th International Symposium on Software Reliability Engineering",
        "publisher": "IEEE",
        "author": "Bird, Christian and Nagappan, Nachiappan and Gall, Harald and Murphy, Brendan and Devanbu, Premkumar",
        "year": "2009",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "source code (commit/diff/changeset)",
      "user data (e.g. github)"
    ],
    "graphs": {
      "socio-technical-network": {
        "vertices": [
          {
            "value": "developer",
            "details": [],
            "modifiers": []
          },
          {
            "value": "component",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dependencies",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "dependency-network": {
        "vertices": [
          {
            "value": "component",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "dependencies",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "dependency graph"
      },
      "contribution-network": {
        "vertices": [
          {
            "value": "developer",
            "details": [],
            "modifiers": []
          },
          {
            "value": "component",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "socio-technical-network": [
        "node feature: network metrics",
        "edge feature: weights",
        "node feature: network metrics"
      ],
      "dependency-network": [
        "node feature: network metrics",
        "edge feature: weights",
        "node feature: network metrics"
      ],
      "contribution-network": [
        "node feature: network metrics",
        "edge feature: weights",
        "node feature: network metrics"
      ]
    },
    "models": {
      "logistic-regression": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      }
    }
  },
  "sb-076": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Empirical analysis of network measures for predicting high severity software faults",
        "volume": "59",
        "ISSN": "1869-1919",
        "url": "http://dx.doi.org/10.1007/s11432-015-5426-3",
        "DOI": "10.1007/s11432-015-5426-3",
        "number": "12",
        "journal": "Science China Information Sciences",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Chen, Lin and Ma, Wanwangying and Zhou, Yuming and Xu, Lei and Wang, Ziyuan and Chen, Zhifei and Xu, Baowen",
        "year": "2016",
        "month": "nov"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "module",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call dependency",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: network metrics"
      ]
    },
    "models": {
      "logistic-regression": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      }
    }
  },
  "sb-078": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Using Tri-Relation Networks for Effective Software Fault-Proneness Prediction",
        "volume": "7",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/access.2019.2916615",
        "DOI": "10.1109/access.2019.2916615",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Li, Yihao and Wong, W. Eric and Lee, Shou-Yu and Wotawa, Franz",
        "year": "2019",
        "pages": "63066\u201363080"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "source code (commit/diff/changeset)",
      "user data (e.g. github)"
    ],
    "graphs": {
      "tri-network": {
        "vertices": [
          {
            "value": "developer",
            "details": [],
            "modifiers": []
          },
          {
            "value": "module",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "contribution",
            "details": [],
            "modifiers": []
          },
          {
            "value": "co-evolution",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dependency",
            "details": [
              "eg call"
            ],
            "modifiers": []
          },
          {
            "value": "collaboration",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "tri-network": [
        "edge feature: weights",
        "node feature: software metrics",
        "node feature: network metrics"
      ]
    },
    "models": {
      "bayes-net": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: misc: bayesian network"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-081": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "code2vec: learning distributed representations of code",
        "volume": "3",
        "ISSN": "2475-1421",
        "url": "http://dx.doi.org/10.1145/3290353",
        "DOI": "10.1145/3290353",
        "number": "POPL",
        "journal": "Proceedings of the ACM on Programming Languages",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Alon, Uri and Zilberstein, Meital and Levy, Omer and Yahav, Eran",
        "year": "2019",
        "month": "jan",
        "pages": "1\u201329"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "path: leaf to leaf",
        "node feature (terminal): node code tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp",
          "misc: pooling: attention sum"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-082": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Commit2Vec: Learning Distributed Representations of Code Changes",
        "volume": "2",
        "ISSN": "2661-8907",
        "url": "http://dx.doi.org/10.1007/s42979-021-00566-z",
        "DOI": "10.1007/s42979-021-00566-z",
        "number": "3",
        "journal": "SN Computer Science",
        "publisher": "Springer Science and Business Media LLC",
        "author": "Cabrera Lozoya, Roc\u00edo and Baumann, Arnaud and Sabetta, Antonino and Bezzi, Michele",
        "year": "2021",
        "month": "mar"
      }
    },
    "domains": [
      "misc (code change embedding)"
    ],
    "artefacts": [
      "source code (function/snippet)",
      "source code (commit/diff/changeset)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (embedding layer)",
        "path: terminal to terminal"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-083": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "author": "Ben-Nun, Tal and Jakobovits, Alice Shoshana and Hoefler, Torsten",
        "title": "Neural code comprehension: a learnable representation of code semantics",
        "year": "2018",
        "publisher": "Curran Associates Inc.",
        "address": "Red Hook, NY, USA",
        "abstract": "With the recent success of embeddings in natural language processing, research has been conducted into applying similar methods to code analysis. Most works attempt to process the code directly or use a syntactic tree representation, treating it like sentences written in a natural language. However, none of the existing methods are sufficient to comprehend program semantics robustly, due to structural features such as function calls, branching, and interchangeable order of statements. In this paper, we propose a novel processing technique to learn code semantics, and apply it to a variety of program analysis tasks. In particular, we stipulate that a robust distributional hypothesis of code applies to both human- and machine-generated programs. Following this hypothesis, we define an embedding space, inst2vec, based on an Intermediate Representation (IR) of the code that is independent of the source programming language. We provide a novel definition of contextual flow for this IR, leveraging both the underlying data- and control-flow of the program. We then analyze the embeddings qualitatively using analogies and clustering, and evaluate the learned representation on three different high-level tasks. We show that even without fine-tuning, a single RNN architecture and fixed inst2vec embeddings outperform specialized approaches for performance prediction (compute device mapping, optimal thread coarsening); and algorithm classification from raw code (104 classes), where we set a new state-of-the-art.",
        "booktitle": "Proceedings of the 32nd International Conference on Neural Information Processing Systems",
        "pages": "3589\u20133601",
        "numpages": "13",
        "location": "Montr\\'{e}al, Canada",
        "series": "NIPS'18"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "contextual-flow-graph": {
        "vertices": [
          {
            "value": "variable",
            "details": [],
            "modifiers": []
          },
          {
            "value": "labels in IR",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "contextual-flow-graph": [
        "connectivity: n-hop neighbourhood of nodes",
        "node feature: types of program elements (n/a)",
        "node feature: shared id for all variable nodes"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: skipgram",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-084": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A structural model for contextual code changes",
        "volume": "4",
        "ISSN": "2475-1421",
        "url": "http://dx.doi.org/10.1145/3428283",
        "DOI": "10.1145/3428283",
        "number": "OOPSLA",
        "journal": "Proceedings of the ACM on Programming Languages",
        "publisher": "Association for Computing Machinery (ACM)",
        "author": "Brody, Shaked and Alon, Uri and Yahav, Eran",
        "year": "2020",
        "month": "nov",
        "pages": "1\u201328"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (embedding layer)",
        "node feature (terminal): node code tokens with sub-tokens (embedding layer)",
        "node feature: node positional information",
        "paths: tree edits represented as paths [e.g. from root to moved subtree]"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: attention: attention",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-085": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Global Relational Models of Source Code",
        "author": "Vincent J. Hellendoorn and Charles Sutton and Rishabh Singh and Petros Maniatis and David Bieber",
        "booktitle": "International Conference on Learning Representations",
        "year": "2020",
        "url": "https://openreview.net/forum?id=B1lnbRNtwr"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph-1": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "graph-2": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph-1": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)",
        "unclear"
      ],
      "graph-2": [
        "edge feature: edge type (n/a)",
        "graph: graph (uses node features; uses edge features)",
        "unclear"
      ]
    },
    "models": {
      "model-2": {
        "tags": [
          "mode: other",
          "base-type: gnn",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: architecture: interleaved gnn and transformer layers"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-3": {
        "tags": [
          "mode: other",
          "base-type: transformer",
          "gnn-functionality: attention: connectivity"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      },
      "model-1": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: gnn: ggnn",
          "gnn-functionality: architecture: interleaved gnn and rnn layers"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-087": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "GraphCode{\\{}BERT{\\}}: Pre-training Code Representations with Data Flow",
        "author": "Daya Guo and Shuo Ren and Shuai Lu and Zhangyin Feng and Duyu Tang and Shujie LIU and Long Zhou and Nan Duan and Alexey Svyatkovskiy and Shengyu Fu and Michele Tufano and Shao Kun Deng and Colin Clement and Dawn Drain and Neel Sundaresan and Jian Yin and Daxin Jiang and Ming Zhou",
        "booktitle": "International Conference on Learning Representations",
        "year": "2021",
        "url": "https://openreview.net/forum?id=jLoC4ez43PZ"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "variable",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "connectivity: mask matrix",
        "sequence: linearised graph",
        "node feature: program element name[s] (n/a)"
      ],
      "n/a": [
        "other: code comment (n/a)",
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: other",
          "base-type: transformer",
          "gnn-functionality: attention: connectivity: mask matrix"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence/graph-connectivity"
      }
    }
  },
  "sb-088": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "TreeBERT: A tree-based pre-trained model for programming language",
        "author": "Jiang, Xue and Zheng, Zhuoran and Lyu, Chen and Li, Liang and Lyu, Lei",
        "booktitle": "Proceedings of the Thirty-Seventh Conference on Uncertainty in Artificial Intelligence",
        "pages": "54--63",
        "year": "2021",
        "editor": "de Campos, Cassio and Maathuis, Marloes H.",
        "volume": "161",
        "series": "Proceedings of Machine Learning Research",
        "month": "27--30 Jul",
        "publisher": "PMLR",
        "pdf": "https://proceedings.mlr.press/v161/jiang21a/jiang21a.pdf",
        "url": "https://proceedings.mlr.press/v161/jiang21a.html",
        "abstract": "Source code can be parsed into the abstract syntax tree (AST) based on defined syntax rules. However, in pre-training, little work has considered the incorporation of tree structure into the learning process. In this paper, we present TreeBERT, a tree-based pre-trained model for improving programming language-oriented generation tasks. To utilize tree structure, TreeBERT represents the AST corresponding to the code as a set of composition paths and introduces node position embedding. The model is trained by tree masked language modeling (TMLM) and node order prediction (NOP) with a hybrid objective. TMLM uses a novel masking strategy designed according to the tree\u2019s characteristics to help the model understand the AST and infer the missing semantics of the AST. With NOP, TreeBERT extracts the syntactical structure by learning the order constraints of nodes in AST. We pre-trained TreeBERT on datasets covering multiple programming languages. On code summarization and code documentation tasks, TreeBERT outperforms other pre-trained models and state-of-the-art models designed for these tasks. Furthermore, TreeBERT performs well when transferred to the pre-trained unseen programming language."
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (n/a)",
        "path: path from root to node",
        "node feature (terminal): node code tokens (n/a)",
        "node feature: node positional information",
        "node feature: node positional information"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: embedding-model-with-pretraining",
          "base-type: transformer"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-089": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "InferCode: Self-Supervised Learning of Code Representations by Predicting Subtrees",
        "url": "http://dx.doi.org/10.1109/icse43902.2021.00109",
        "DOI": "10.1109/icse43902.2021.00109",
        "booktitle": "2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)",
        "publisher": "IEEE",
        "author": "Bui, Nghi D. Q. and Yu, Yijun and Jiang, Lingxiao",
        "year": "2021",
        "month": "may"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (embedding layer)",
        "node feature: node code tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: tree: tbcnn",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-090": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A Mocktail of Source Code Representations",
        "url": "http://dx.doi.org/10.1109/ase51524.2021.9678551",
        "DOI": "10.1109/ase51524.2021.9678551",
        "booktitle": "2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)",
        "publisher": "IEEE",
        "author": "Vagavolu, Dheeraj and Swarna, Karthik Chandra and Chimalakonda, Sridhar",
        "year": "2021",
        "month": "nov"
      }
    },
    "domains": [
      "general graph learning framework for code"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "cfg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cfg"
      },
      "pdg": {
        "vertices": [
          {
            "value": "statement",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "pdg"
      }
    },
    "features": {
      "ast": [
        "node feature (internal): node type (n/a)",
        "path: leaf to leaf",
        "node feature (terminal): node code tokens (n/a)"
      ],
      "cfg": [
        "node feature: node type (n/a)",
        "path: path in graph"
      ],
      "pdg": [
        "node feature: node type (n/a)",
        "path: path in graph"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-091": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "DeepCPDP: Deep Learning Based Cross-Project Defect Prediction",
        "volume": "7",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/access.2019.2961129",
        "DOI": "10.1109/access.2019.2961129",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Chen, Deyu and Chen, Xiang and Li, Hao and Xie, Junfeng and Mu, Yanzhou",
        "year": "2019",
        "pages": "184832\u2013184848"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": [
              "trimmed"
            ]
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (embedding learned using cbow)",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "base-type: cbow",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/source code"
      },
      "model-2": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: pooling: max pooling",
          "misc: attention: attention",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-092": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "GCN2defect\u202f: Graph Convolutional Networks for SMOTETomek-based Software Defect Prediction",
        "url": "http://dx.doi.org/10.1109/issre52982.2021.00020",
        "DOI": "10.1109/issre52982.2021.00020",
        "booktitle": "2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)",
        "publisher": "IEEE",
        "author": "Zeng, Cheng and Zhou, Chun Ying and Lv, Sheng Kai and He, Peng and Huang, Jie",
        "year": "2021",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "class-dependency-network": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "class-dependency-network": [
        "graph: graph (uses node features)",
        "node feature: software metrics",
        "node feature: network metrics",
        "node feature: node embedding (node2vec)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gcn"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-094": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Defect Prediction With Semantics and Context Features of Codes Based on Graph Representation Learning",
        "volume": "70",
        "ISSN": "1558-1721",
        "url": "http://dx.doi.org/10.1109/tr.2020.3040191",
        "DOI": "10.1109/tr.2020.3040191",
        "number": "2",
        "journal": "IEEE Transactions on Reliability",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Xu, Jiaxi and Wang, Fei and Ai, Jun",
        "year": "2021",
        "month": "jun",
        "pages": "613\u2013625"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (n/a)",
        "node feature: global LDA vector of method and variable names (word2vec)"
      ]
    },
    "models": {
      "gcn": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gcn",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "graph-sage": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: graphsage",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gin": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gin",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "sgc": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: sgc",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "gat": {
        "tags": [
          "base-type: gnn",
          "mode: classification-regression",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: max pooling"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-096": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "An Abstract Syntax Tree Encoding Method for Cross-Project Defect Prediction",
        "volume": "7",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/access.2019.2953696",
        "DOI": "10.1109/access.2019.2953696",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Cai, Ziyi and Lu, Lu and Qiu, Shaojian",
        "year": "2019",
        "pages": "170844\u2013170853"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model-1": {
        "tags": [
          "base-type: cbow",
          "mode: other"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "auxiliary/graph-as-sequence"
      },
      "model-2": {
        "tags": [
          "base-type: cnn",
          "mode: classification-regression",
          "base-type: other",
          "misc: pooling: max pooling",
          "misc: misc: tca",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/node-embeddings"
      }
    }
  },
  "sb-097": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Defect Prediction Based on the Characteristics of Multilayer Structure of Software Network",
        "url": "http://dx.doi.org/10.1109/qrs-c.2018.00019",
        "DOI": "10.1109/qrs-c.2018.00019",
        "booktitle": "2018 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)",
        "publisher": "IEEE",
        "author": "Yang, Yiwen and Ai, Jun and Wang, Fei",
        "year": "2018",
        "month": "jul"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "class-network": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "class-network": [
        "node feature: software metrics",
        "node feature: network metrics"
      ]
    },
    "models": {
      "lda": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: linear discriminant analysis"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "adaboost": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: decision tree",
          "misc: model: meta: adaboost"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "rf": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "dt": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "svm": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "knn": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: knn"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "lr": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: logistic regression"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      }
    }
  },
  "sb-098": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Automatically identifying code features for software defect prediction: Using AST N-grams",
        "volume": "106",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2018.10.001",
        "DOI": "10.1016/j.infsof.2018.10.001",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Shippey, Thomas and Bowes, David and Hall, Tracy",
        "year": "2019",
        "month": "feb",
        "pages": "142\u2013160"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph feature vector: bow of node types"
      ]
    },
    "models": {
      "rf": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "naive-bayes": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: naive bayes"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      },
      "dt": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: decision tree"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "sb-100": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "An Approach to Semantic and Structural Features Learning for Software Defect Prediction",
        "volume": "2020",
        "ISSN": "1563-5147",
        "url": "http://dx.doi.org/10.1155/2020/6038619",
        "DOI": "10.1155/2020/6038619",
        "journal": "Mathematical Problems in Engineering",
        "publisher": "Hindawi Limited",
        "author": "Meilong, Shi and He, Peng and Xiao, Haitao and Li, Huixin and Zeng, Cheng",
        "year": "2020",
        "month": "apr",
        "pages": "1\u201313"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)",
      "source code (file)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      },
      "software-network": {
        "vertices": [
          {
            "value": "source code file",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "association",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dependency",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "software-network": [
        "node feature: node embedding (node2vec)"
      ],
      "ast": [
        "node feature: node type (embedding layer)",
        "node feature: node code tokens (embedding layer)",
        "sequence: pre-order linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn",
          "misc: pooling: max pooling",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence/node features"
      }
    }
  },
  "sb-101": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Software Defect Prediction Based on Gated Hierarchical LSTMs",
        "volume": "70",
        "ISSN": "1558-1721",
        "url": "http://dx.doi.org/10.1109/tr.2020.3047396",
        "DOI": "10.1109/tr.2020.3047396",
        "number": "2",
        "journal": "IEEE Transactions on Reliability",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Wang, Hao and Zhuang, Weiyuan and Zhang, Xiaofang",
        "year": "2021",
        "month": "jun",
        "pages": "711\u2013727"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "n/a": [
        "other: software metrics"
      ],
      "ast": [
        "node feature: node type (n/a)",
        "sequence: linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: rnn: lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-102": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEM \u201910",
        "title": "Predicting vulnerable software components with dependency graphs",
        "url": "http://dx.doi.org/10.1145/1853919.1853923",
        "DOI": "10.1145/1853919.1853923",
        "booktitle": "Proceedings of the 6th International Workshop on Security Measurements and Metrics",
        "publisher": "ACM",
        "author": "Nguyen, Viet Hung and Tran, Le Minh Sang",
        "year": "2010",
        "month": "sep",
        "collection": "ESEM \u201910"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "member-dependency-graph": {
        "vertices": [
          {
            "value": "data item",
            "details": [
              "e.g shared variable",
              "function"
            ],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "call",
            "details": [],
            "modifiers": []
          },
          {
            "value": "return",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "component-dependency-graph": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "member-dependency-graph": [
        "node feature: software metrics",
        "edge feature: data flow/dependency information (n/a)"
      ],
      "component-dependency-graph": [
        "node feature: network metrics",
        "node feature: software metrics",
        "node feature: features from [sub-]graph associated with node"
      ]
    },
    "models": {
      "random-forest": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "naive-bayes": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: naive bayes"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "bayesian-network": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: misc: bayesian network"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "svm": {
        "tags": [
          "mode: classification-regression",
          "base-type: classic",
          "misc: model: supervised: svm"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      },
      "neural-network": {
        "tags": [
          "mode: classification-regression",
          "base-type: mlp"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node features"
      }
    }
  },
  "sb-103": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ASE \u201918",
        "title": "node2defect: using network embedding to improve software defect prediction",
        "url": "http://dx.doi.org/10.1145/3238147.3240469",
        "DOI": "10.1145/3238147.3240469",
        "booktitle": "Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering",
        "publisher": "ACM",
        "author": "Qu, Yu and Liu, Ting and Chi, Jianlei and Jin, Yangxu and Cui, Di and He, Ancheng and Zheng, Qinghua",
        "year": "2018",
        "month": "sep",
        "collection": "ASE \u201918"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (multiple files/project)"
    ],
    "graphs": {
      "class-dependency-network": {
        "vertices": [
          {
            "value": "class",
            "details": [],
            "modifiers": []
          },
          {
            "value": "interface",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "class & interface relationships",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "class dependency graph"
      }
    },
    "features": {
      "class-dependency-network": [
        "node feature: software metrics",
        "node feature: node embedding (node2vec)"
      ]
    },
    "models": {
      "random-forest": {
        "tags": [
          "base-type: classic",
          "mode: classification-regression",
          "misc: model: supervised: random forest"
        ],
        "classification-regression-granularity": "node",
        "clustering-granularity": null,
        "usage-details": "main/node-features"
      }
    }
  },
  "sb-104": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "An Improved CNN Model for Within-Project Software Defect Prediction",
        "volume": "9",
        "ISSN": "2076-3417",
        "url": "http://dx.doi.org/10.3390/app9102138",
        "DOI": "10.3390/app9102138",
        "number": "10",
        "journal": "Applied Sciences",
        "publisher": "MDPI AG",
        "author": "Pan, Cong and Lu, Minyan and Xu, Biao and Gao, Houleng",
        "year": "2019",
        "month": "may",
        "pages": "2138"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (file)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (or token(s) for identifier nodes) (embedding layer)",
        "sequence: linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn",
          "misc: model: supervised: neural: textcnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-105": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "ACGVD: Vulnerability Detection Based on Comprehensive Graph via Graph Neural Network with Attention",
        "ISBN": "9783030868901",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-030-86890-1_14",
        "DOI": "10.1007/978-3-030-86890-1_14",
        "booktitle": "Information and Communications Security",
        "publisher": "Springer International Publishing",
        "author": "Li, Min and Li, Chunfang and Li, Shuailou and Wu, Yanna and Zhang, Boyang and Wen, Yu",
        "year": "2021",
        "pages": "243\u2013259"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "dominator",
            "details": [],
            "modifiers": []
          },
          {
            "value": "post dominator",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature: node code tokens (word2vec)",
        "node feature: node type (n/a)",
        "subgraphs: subgraphs based on edge type"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: sum pooling",
          "gnn-functionality: fusion: node-wise attention weighted sum over subgraphs"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-106": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Peculiar: Smart Contract Vulnerability Detection Based on Crucial Data Flow Graph and Pre-training Techniques",
        "url": "http://dx.doi.org/10.1109/issre52982.2021.00047",
        "DOI": "10.1109/issre52982.2021.00047",
        "booktitle": "2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)",
        "publisher": "IEEE",
        "author": "Wu, Hongjun and Zhang, Zhuo and Wang, Shangwen and Lei, Yan and Lin, Bo and Qin, Yihao and Zhang, Haoyu and Mao, Xiaoguang",
        "year": "2021",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "cdfg": {
        "vertices": [
          {
            "value": "variable",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "cdfg": [
        "connectivity: mask matrix",
        "other: positional information of tokens/program elements",
        "others: sequence of constants and/or identifiers from code (n/a)"
      ],
      "n/a": [
        "other: source code (n/a)",
        "other: positional information of tokens/program elements"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: transformer",
          "misc: transformer: transformer encoder",
          "gnn-functionality: attention: connectivity: mask matrix"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "sb-109": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "GraphEye: A Novel Solution for Detecting Vulnerable Functions Based on Graph Attention Network",
        "url": "http://dx.doi.org/10.1109/dsc53577.2021.00060",
        "DOI": "10.1109/dsc53577.2021.00060",
        "booktitle": "2021 IEEE Sixth International Conference on Data Science in Cyberspace (DSC)",
        "publisher": "IEEE",
        "author": "Zhou, Li and Huang, Minhuan and Li, Yujun and Nie, Yuanping and Li, Jin and Liu, Yiwei",
        "year": "2021",
        "month": "oct"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "graph: graph (uses node features)",
        "node feature: node type (one-hot)",
        "node feature: types of program elements (one-hot)",
        "node feature: operators and/or operands (one-hot)",
        "node feature: numerical literals (32 bit representation)",
        "node feature: program element name[s] (binary encoding)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: gnn",
          "gnn-functionality: gnn: gat",
          "gnn-functionality: pooling: graph: sagpool"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-110": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "IJCAI-2019",
        "title": "VulSniper: Focus Your Attention to Shoot Fine-Grained Vulnerabilities",
        "url": "http://dx.doi.org/10.24963/ijcai.2019/648",
        "DOI": "10.24963/ijcai.2019/648",
        "booktitle": "Proceedings of the Twenty-Eighth International Joint Conference on Artificial Intelligence",
        "publisher": "International Joint Conferences on Artificial Intelligence Organization",
        "author": "Duan, Xu and Wu, Jingzheng and Ji, Shouling and Rui, Zhiqing and Luo, Tianyue and Yang, Mutian and Wu, Yanjun",
        "year": "2019",
        "month": "aug",
        "pages": "4665\u20134671",
        "collection": "IJCAI-2019"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "code-property-graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "cpg"
      }
    },
    "features": {
      "code-property-graph": [
        "connectivity: 3D tensor with e_ij denoting features for the relationship between nodes i and j",
        "node pair feature: control flow relation between nodes (one-hot)",
        "node pair feature: ast child/parent relation between nodes (one-hot)",
        "node pair feature: operator connecting nodes (n/a)",
        "node pair feature: data types and modifiers of both nodes (one-hot)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: other",
          "misc: model: supervised: neural: mlp",
          "misc: attention: cnn soft attention"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-features"
      }
    }
  },
  "sb-111": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Vulnerability Prediction From Source Code Using Machine Learning",
        "volume": "8",
        "ISSN": "2169-3536",
        "url": "http://dx.doi.org/10.1109/access.2020.3016774",
        "DOI": "10.1109/access.2020.3016774",
        "journal": "IEEE Access",
        "publisher": "Institute of Electrical and Electronics Engineers (IEEE)",
        "author": "Bilgin, Zeki and Ersoy, Mehmet Akif and Soykan, Elif Ustundag and Tomur, Emrah and Comak, Pinar and Karacay, Leyli",
        "year": "2020",
        "pages": "150672\u2013150684"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[binarised]"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (real number (ordinal))",
        "sequence: bfs sequence of nodes",
        "unclear"
      ]
    },
    "models": {
      "mlp": {
        "tags": [
          "base-type: mlp",
          "mode: classification-regression"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      },
      "cnn": {
        "tags": [
          "mode: classification-regression",
          "base-type: cnn"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-114": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A performance evaluation of deep\u2010learnt features for software vulnerability detection",
        "volume": "31",
        "ISSN": "1532-0634",
        "url": "http://dx.doi.org/10.1002/cpe.5103",
        "DOI": "10.1002/cpe.5103",
        "number": "19",
        "journal": "Concurrency and Computation: Practice and Experience",
        "publisher": "Wiley",
        "author": "Ban, Xinbo and Liu, Shigang and Chen, Chao and Chua, Caslon",
        "year": "2018",
        "month": "dec"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (embedding layer)",
        "sequence: dfs linearised ast",
        "node feature: node code tokens (embedding layer)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: classification-regression",
          "base-type: rnn",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": "graph",
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-115": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ESEC/FSE \u201921",
        "title": "A syntax-guided edit decoder for neural program repair",
        "url": "http://dx.doi.org/10.1145/3468264.3468544",
        "DOI": "10.1145/3468264.3468544",
        "booktitle": "Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering",
        "publisher": "ACM",
        "author": "Zhu, Qihao and Sun, Zeyu and Xiao, Yuan-an and Zhang, Wenjie and Yuan, Kang and Xiong, Yingfei and Zhang, Lu",
        "year": "2021",
        "month": "aug",
        "collection": "ESEC/FSE \u201921"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "self-generated ast",
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      },
      "partial-ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[partial, generated]"
      }
    },
    "features": {
      "graph": [
        "unclear",
        "sequence: pre-order linearised ast",
        "sequence: auxiliary information sequence for linearised graph"
      ],
      "partial-ast": [
        "other: sequence of rules used to generate ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "gnn-functionality: tree: cnn over sequence, but based on original tree structure",
          "misc: attention: self-attention",
          "misc: attention: gating",
          "misc: attention: cross attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-117": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICSE \u201922",
        "title": "DEAR: a novel deep learning-based approach for automated program repair",
        "url": "http://dx.doi.org/10.1145/3510003.3510177",
        "DOI": "10.1145/3510003.3510177",
        "booktitle": "Proceedings of the 44th International Conference on Software Engineering",
        "publisher": "ACM",
        "author": "Li, Yi and Wang, Shaohua and Nguyen, Tien N.",
        "year": "2022",
        "month": "may",
        "collection": "ICSE \u201922"
      }
    },
    "domains": [
      "defects & vulnerabilities"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node code tokens (glove)",
        "subgraphs: subtrees (TreeCaps)",
        "graph: graph (uses node features. some subtrees replaced with summary vectors)"
      ]
    },
    "models": {
      "model-2": {
        "tags": [
          "mode: other",
          "base-type: gnn",
          "gnn-functionality: tree: child-sum tree-lstm",
          "misc: training method: cycle training"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      },
      "model-1": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: tree: child-sum tree-lstm",
          "misc: training method: cycle training",
          "misc: attention: attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-119": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Code Summarization with Structure-induced Transformer",
        "url": "http://dx.doi.org/10.18653/v1/2021.findings-acl.93",
        "DOI": "10.18653/v1/2021.findings-acl.93",
        "booktitle": "Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021",
        "publisher": "Association for Computational Linguistics",
        "author": "Wu, Hongqiu and Zhao, Hai and Zhang, Min",
        "year": "2021"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control {dependence,flow}",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "connectivity: adjacency matrix"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: attention: connectivity: adjacency matrix"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "sb-120": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "A Neural Model for Generating Natural Language Summaries of Program Subroutines",
        "url": "http://dx.doi.org/10.1109/icse.2019.00087",
        "DOI": "10.1109/icse.2019.00087",
        "booktitle": "2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)",
        "publisher": "IEEE",
        "author": "LeClair, Alexander and Jiang, Siyuan and McMillan, Collin",
        "year": "2019",
        "month": "may"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "n/a": [
        "other: source code (n/a)"
      ],
      "ast": [
        "sequence: linearised ast",
        "node feature: node type (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: attention: attention",
          "misc: rnn: gru"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-121": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Summarizing source code with hierarchical code representation",
        "volume": "143",
        "ISSN": "0950-5849",
        "url": "http://dx.doi.org/10.1016/j.infsof.2021.106761",
        "DOI": "10.1016/j.infsof.2021.106761",
        "journal": "Information and Software Technology",
        "publisher": "Elsevier BV",
        "author": "Zhou, Ziyi and Yu, Huiqun and Fan, Guisheng and Huang, Zijie and Yang, Xingguang",
        "year": "2022",
        "month": "mar",
        "pages": "106761"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "n/a": [
        "other: source code with sub-tokens (n/a)"
      ],
      "ast": [
        "sequence: linearised ast"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "mode: encoder-decoder",
          "misc: attention: attention",
          "misc: rnn: bidirectional lstm"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-122": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Source Code Summarization with Structural Relative Position Guided Transformer",
        "url": "http://dx.doi.org/10.1109/saner53432.2022.00013",
        "DOI": "10.1109/saner53432.2022.00013",
        "booktitle": "2022 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER)",
        "publisher": "IEEE",
        "author": "Gong, Zi and Gao, Cuiyun and Wang, Yasheng and Gu, Wenchao and Peng, Yun and Xu, Zenglin",
        "year": "2022",
        "month": "mar"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "other: source code (n/a)",
        "connectivity: shortest path length matrix",
        "connectivity: weighted sum of edge-type specific adjacency matrices"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: attention: connectivity: adjacency matrix",
          "gnn-functionality: transformer: transformer w. shortest path matrix based positional encoding"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "sb-123": {
    "bibtex": {
      "type": "inbook",
      "info": {
        "title": "Code Comments Generation with Data Flow-Guided Transformer",
        "ISBN": "9783031203091",
        "ISSN": "1611-3349",
        "url": "http://dx.doi.org/10.1007/978-3-031-20309-1_15",
        "DOI": "10.1007/978-3-031-20309-1_15",
        "booktitle": "Web Information Systems and Applications",
        "publisher": "Springer International Publishing",
        "author": "Zhou, Wen and Wu, Junhua",
        "year": "2022",
        "pages": "168\u2013180"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "data-flow-graph": {
        "vertices": [
          {
            "value": "variable",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "data-flow-graph": [
        "connectivity: mask matrix"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "misc: transformer: transformer encoder",
          "gnn-functionality: attention: connectivity: mask matrix"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-connectivity"
      }
    }
  },
  "sb-124": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "GypSum: learning hybrid representations for code summarization",
        "url": "http://dx.doi.org/10.1145/3524610.3527903",
        "DOI": "10.1145/3524610.3527903",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Wang, Yu and Dong, Yu and Lu, Xuesong and Zhou, Aoying",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "control flow",
            "details": [],
            "modifiers": []
          },
          {
            "value": "ncs",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          },
          {
            "value": "data flow or dependence",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sub-token",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "node feature (internal): node type (n/a)",
        "graph: graph (uses node features)",
        "node feature (terminal): node code tokens (n/a)"
      ],
      "n/a": [
        "other: source code (CodeBERT)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gat"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-126": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Learning Sequential and Structural Information for Source Code Summarization",
        "author": "Choi, YunSeok  and\n      Bak, JinYeong  and\n      Na, CheolWon  and\n      Lee, Jee-Hyong",
        "editor": "Zong, Chengqing  and\n      Xia, Fei  and\n      Li, Wenjie  and\n      Navigli, Roberto",
        "booktitle": "Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021",
        "month": "aug",
        "year": "2021",
        "address": "Online",
        "publisher": "Association for Computational Linguistics",
        "url": "https://aclanthology.org/2021.findings-acl.251",
        "doi": "10.18653/v1/2021.findings-acl.251",
        "pages": "2842--2851"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "graph": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          },
          {
            "value": "sibling",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "none"
      }
    },
    "features": {
      "graph": [
        "graph: graph (uses node features)",
        "node feature: node code tokens (n/a)",
        "node feature: node type (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gcn",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-127": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "author": "Peng, Han and Li, Ge and Wang, Wenhan and Zhao, Yunfei and Jin, Zhi",
        "title": "Integrating tree path in transformer for code representation",
        "year": "2024",
        "isbn": "9781713845393",
        "publisher": "Curran Associates Inc.",
        "address": "Red Hook, NY, USA",
        "abstract": "Learning distributed representation of source code requires modelling its syntax and semantics. Recent state-of-the-art models leverage highly structured source code representations, such as the syntax trees and paths therein. In this paper, we investigate two representative path encoding methods shown in previous research work and integrate them into the attention module of Transformer. We draw inspiration from the ideas of positional encoding and modify them to incorporate these path encoding. Specifically, we encode both the pairwise path between tokens of source code and the path from the leaf node to the tree root for each token in the syntax tree. We explore the interaction between these two kinds of paths by integrating them into the unified Transformer framework. The detailed empirical study for path encoding methods also leads to our novel state-of-the-art representation model TPTrans, which finally outperforms strong baselines. Extensive experiments and ablation studies on code summarization across four different languages demonstrate the effectiveness of our approaches.",
        "booktitle": "Proceedings of the 35th International Conference on Neural Information Processing Systems",
        "articleno": "715",
        "numpages": "12",
        "series": "NIPS '21"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (n/a)",
        "path: leaf to leaf",
        "path: terminal to root"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "gnn-functionality: attention based on bidirectionla gru over paths",
          "mode: encoder-decoder",
          "base-type: transformer"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-128": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "series": "ICPC \u201922",
        "title": "M2TS: multi-scale multi-modal approach based on transformer for source code summarization",
        "url": "http://dx.doi.org/10.1145/3524610.3527907",
        "DOI": "10.1145/3524610.3527907",
        "booktitle": "Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension",
        "publisher": "ACM",
        "author": "Gao, Yuexiu and Lyu, Chen",
        "year": "2022",
        "month": "may",
        "collection": "ICPC \u201922"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature: node type (BERT)",
        "node feature: node code tokens (BERT)"
      ],
      "n/a": [
        "other: source code (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: encoder-decoder",
          "base-type: transformer",
          "gnn-functionality: gnn: gcn w. higher powers of adjacency matrix",
          "gnn-functionality: architecture: residual connections",
          "misc: transformer: transformer encoder",
          "misc: transformer: transformer decoder",
          "misc: fusion: attention",
          "gnn-functionality: misc: transformer encoder over nodes",
          "misc: transformer: transformer encoder"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-130": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "Effective approaches to combining lexical and syntactical information for code summarization",
        "volume": "50",
        "ISSN": "1097-024X",
        "url": "http://dx.doi.org/10.1002/spe.2893",
        "DOI": "10.1002/spe.2893",
        "number": "12",
        "journal": "Software: Practice and Experience",
        "publisher": "Wiley",
        "author": "Zhou, Ziyi and Yu, Huiqun and Fan, Guisheng",
        "year": "2020",
        "month": "sep",
        "pages": "2313\u20132336"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)",
        "node feature (internal): node type with sub-tokens (n/a)",
        "node feature (terminal): node code tokens with sub-tokens (n/a)",
        "node feature (terminal): node type with sub-tokens (n/a)"
      ],
      "n/a": [
        "other: source code with sub-tokens (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: node-transform: cnn",
          "gnn-functionality: tree: tree-lstm",
          "misc: pooling: attention sum",
          "misc: rnn: bidirectional lstm",
          "gnn-functionality: pooling: graph: attention weighted sum",
          "gnn-functionality: node-transform: attention"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  },
  "sb-131": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "A Grammar-Based Structural CNN Decoder for Code Generation",
        "volume": "33",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v33i01.33017055",
        "DOI": "10.1609/aaai.v33i01.33017055",
        "number": "01",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Sun, Zeyu and Zhu, Qihao and Mou, Lili and Xiong, Yingfei and Li, Ge and Zhang, Lu",
        "year": "2019",
        "month": "jul",
        "pages": "7055\u20137062"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "self-generated ast"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[partial, generated]"
      }
    },
    "features": {
      "n/a": [
        "other: description of code to be generated (n/a)",
        "other: sequence of rules used to generate ast",
        "other: nearest enclosing method/function scope"
      ],
      "ast": [
        "path: path from root to node"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: gnn",
          "mode: other",
          "base-type: cnn",
          "gnn-functionality: tree: tbcnn",
          "gnn-functionality: architecture: tree-gnn layers with residual connections",
          "misc: pooling: attention sum",
          "misc: pooling: max pooling",
          "misc: architecture: residual connections",
          "misc: cnn: cnn"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-132": {
    "bibtex": {
      "type": "article",
      "info": {
        "title": "TreeGen: A Tree-Based Transformer Architecture for Code Generation",
        "volume": "34",
        "ISSN": "2159-5399",
        "url": "http://dx.doi.org/10.1609/aaai.v34i05.6430",
        "DOI": "10.1609/aaai.v34i05.6430",
        "number": "05",
        "journal": "Proceedings of the AAAI Conference on Artificial Intelligence",
        "publisher": "Association for the Advancement of Artificial Intelligence (AAAI)",
        "author": "Sun, Zeyu and Zhu, Qihao and Xiong, Yingfei and Sun, Yican and Mou, Lili and Zhang, Lu",
        "year": "2020",
        "month": "apr",
        "pages": "8984\u20138991"
      }
    },
    "domains": [
      "code generation"
    ],
    "artefacts": [
      "self-generated ast"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast[partial, generated]"
      }
    },
    "features": {
      "ast": [
        "node feature: node type (n/a)",
        "path: path from root to node",
        "other: sequence of rules used to generate ast"
      ],
      "n/a": [
        "other: description of code to be generated (n/a)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "mode: encoder-decoder",
          "base-type: cnn",
          "base-type: other",
          "n/a",
          "gnn-functionality: tree: cnn over sequence, but based on original tree structure",
          "misc: attention: attention",
          "misc: attention: sigmoid gating"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph-as-sequence"
      }
    }
  },
  "sb-133": {
    "bibtex": {
      "type": "inproceedings",
      "info": {
        "title": "Automatic Source Code Summarization with Extended Tree-LSTM",
        "url": "http://dx.doi.org/10.1109/ijcnn.2019.8851751",
        "DOI": "10.1109/ijcnn.2019.8851751",
        "booktitle": "2019 International Joint Conference on Neural Networks (IJCNN)",
        "publisher": "IEEE",
        "author": "Shido, Yusuke and Kobayashi, Yasuaki and Yamamoto, Akihiro and Miyamoto, Atsushi and Matsumura, Tadayuki",
        "year": "2019",
        "month": "jul"
      }
    },
    "domains": [
      "code summarisation"
    ],
    "artefacts": [
      "source code (function/snippet)"
    ],
    "graphs": {
      "ast": {
        "vertices": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "edges": [
          {
            "value": "ast",
            "details": [],
            "modifiers": []
          }
        ],
        "name": "ast"
      }
    },
    "features": {
      "ast": [
        "graph: graph (uses node features)"
      ]
    },
    "models": {
      "model": {
        "tags": [
          "base-type: rnn",
          "base-type: gnn",
          "mode: encoder-decoder",
          "gnn-functionality: tree: tree-lstm",
          "misc: rnn: lstm",
          "gnn-functionality: pooling: graph: attention weighted sum"
        ],
        "classification-regression-granularity": null,
        "clustering-granularity": null,
        "usage-details": "main/graph"
      }
    }
  }
}