paper-id: sb-002
pdf-id: sb-004
graphs:
  graph:
    name: n/a
    description: ast with additional edges. The AST is the thing being generated by the model.
    artefacts:
      - name: source code
        details: n/a
    vertex-type: ast
    edge-type: ast/sibling/parent/next-use/next token
    vertex-features:
    edge-features:
    connectivity-features:
    graph-features:
    other-features: |-
      Context code (which contains the hole to be filled in) is used as feature.
models:
  model:
    name: n/a
    architecture-attributes:
      - GGNN (edge-type specific)
      - Note; goal of the network (per step) is to expand one node
      - Pick nonterminal node to be expanded 1) use attention + softmax to pick production, 2) use softmax to pick variable(s), 3) use softmax to pick literals
tasks:
  code-generation:
    training-objective: Given a code sample ("context") with missing code ("hole"), generate code for the whole by generating an AST
    training-granularity: Generative Graph Creation
    working-objective: Given a code sample ("context") with missing code ("hole"), generate code for the whole by generating an AST
    working-granularity: Generative Graph Creation
    application: Code Generation
    supervision: Self-supervised
combinations:
  - graph: graph
    model: model
    task: code-generation
    comments: This description is not very complete. Refer to the paper if necessary
comments: # list