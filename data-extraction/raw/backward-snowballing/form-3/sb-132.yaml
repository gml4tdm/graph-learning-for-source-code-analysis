paper-id: sb-132
pdf-id: sb-183
graphs:
  ast:
    name: ast (partial)
    description: n/a
    artefacts:
      - name: n/a
        details: generated by model
    vertex-type: ast
    edge-type: ast
    vertex-features: n/a
    edge-features: n/a
    connectivity-features: adjacency matrix
    graph-features: |-
      The AST is represented as a sequence or rule expansions.
    other-features: |- 
      Natural language description of the code to be generated 
      
      Node to be expanded represented as path from root to node, encoded with the node types
models:
  model:
    name: n/a
    architecture-attributes:
      - character-level embedding of tokens in NL description
      - embedding layer for rules (incl. their content/expansion)
      - NL encoder has blocks with following structure; |-
          1) self-attention
          2) gating mechanism (based on softmax; similar to attention) which fuses NL input with the character embeddings
          3) convolution over words
      - AST Reader with blocks with the following structure; |-
          1) Self-attention
          2) gating mechanism 
          3) Attention w/ NL query 
          4) tree-convolution; a convolution which takes the tree structure into account (lost because in the rule sequence, parents and children may be separated)
      - Decoder w/ node to be expanded (path) as input. Following structure; |-
          1) Attention w/ AST 
          2) Attention w/ NL query 
          3) FNN
      - Final decoder output; softmax + pointer (to copy from query if needed); output next rule
tasks:
  code-generation:
    training-objective: Given a natural language description, generate code by generating an AST
    training-granularity: sequence to tree
    working-objective: Given a natural language description, generate code by generating an AST
    working-granularity: sequence to tree
    application: code generation
    supervision: supervised
combinations:
  - graph: ast
    model: model
    task: code-generation
    comments:
comments: # list