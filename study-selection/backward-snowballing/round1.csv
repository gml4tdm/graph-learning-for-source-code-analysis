Title,Full Reference,Inclusion (Title),Inclusion (Abstract)
learning natural coding conventions,"Allamanis M., Barr E.T., Bird C., Sutton C., Learning natural coding conventions, Foundations of Software Engineering (FSE), (2014)",Include,Exclude
compilation of domestic and international information leakage cases in 2018[eb/ol],"Security Guest R., Compilation of domestic and international information leakage cases in 2018[EB/OL], (2023)",Exclude,""
adapting meta knowledge with heterogeneous information network for covid-19 themed malicious repository detection,"Qian Y., Zhang Y., Ye Y., Zhang C., Adapting Meta Knowledge with Heterogeneous Information Network for COVID-19 Themed Malicious Repository Detection, IJCAI, (2021)",Exclude,""
assessing technical debt by identifying design flaws in software systems,"Marinescu R., Assessing technical debt by identifying design flaws in software systems, IBM J. Res. Dev., 56, 5, (2012)",Exclude,""
predicting program properties from ”big code”,"Raychev V., Vechev M., Krause A., Predicting program properties from ”Big Code”, SIGPLAN Not., 50, 1, pp. 111-124, (2015)",Include,Include
the perceptron: a probabilistic model for information storage and organization in the brain,"Rosenblatt F., The perceptron: a probabilistic model for information storage and organization in the brain, Psychol Rev, 65, 6, (1958)",Exclude,""
asteria: deep learning-based ast-encoding for crossplatform binary code similarity detection,"Yang S., Cheng L., Zeng Y., Lang Z., Zhu H., Shi Z., Asteria: Deep learning-based ast-encoding for crossplatform binary code similarity detection, CoRR, (2021)",Exclude,""
practical bayesian optimization of machine learning algorithms,"Snoek J., Larochelle H., Adams R.P., Practical bayesian optimization of machine learning algorithms, Advances in Neural Information Processing Systems, (2012)",Exclude,""
statically-directed dynamic automated test generation,"Babic D., Martignoni L., McCamant S., Song D., Statically-directed dynamic automated test generation, Proceedings of the 2011 International Symposium on Software Testing and Analysis, pp. 12-22, (2011)",Exclude,""
reviewer recommendation using software artifact traceability graphs,"Sulun E., Tuzun E., Dogrusoz U., Reviewer recommendation using software artifact traceability graphs, International Conference on Predictive Models and Data Analytics in Software Engineering, pp. 66-75, (2019)",Include,Include
an automated extract method refactoring approach to correct the long method code smell,"Shahidi M., Ashtiani M., Zakeri-Nasrabadi M., An automated extract method refactoring approach to correct the long method code smell, Journal of Systems and Software, 187, (2022)",Exclude,""
e-cient and extensible security enforcement using dynamic data-ow analysis,"Chang W., Strei- B., Lin C., E-cient and extensible security enforcement using dynamic data-ow analysis, Proceedings of the 15th ACM conference on Computer and communications security, pp. 39-50, (2008)",Exclude,""
the elephant in the interpretability room: why use attention as explanation when we have saliency methods?,"Bastings J., Filippova K., The elephant in the interpretability room: Why use attention as explanation when we have saliency methods?, (2020)",Exclude,""
de-anonymizing programmers via code stylometry,"Caliskan Islam A., Harang R.E., Liu A., Narayanan A., Voss C.R., Yamaguchi F., Greenstadt R., De-anonymizing programmers via code stylometry, Proceedings of the 24th USENIX Security Symposium, pp. 255-270, (2015)",Exclude,""
2021 d2a: a dataset built for aibased vulnerability detection methods using differential analysis,"Zheng Y., Pujar S., Lewis B., Buratti L., Epstein E., Yang B., Laredo J., Morari A., Su Z., 2021 d2a: A dataset built for aibased vulnerability detection methods using differential analysis, Proceedings of the ACM/IEEE 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)",Exclude,""
improving text classification with weighted word embeddings via a multi-channel textcnn model,"Guo B., Zhang C., Liu J., Ma X., Improving text classification with weighted word embeddings via a multi-channel TextCNN model, Neurocomputing, 363, pp. 366-374, (2019)",Exclude,""
change impact graphs: determining the impact of prior codechanges,"German D.M., Hassan A.E., Robles G., Change impact graphs: Determining the impact of prior codechanges, Information and Software Technology, 51, 10, pp. 1394-1408, (2009)",Exclude,""
practical aggregation of semantical program properties for machine learning based optimization,"Namolaru M., Cohen A., Fursin G., Zaks A., Freund A., Practical aggregation of semantical program properties for machine learning based optimization, Proceedings of the 2010 International Conference on Compilers, Architectures and Synthesis for Embedded Systems, pp. 197-206, (2010)",Include,Exclude
graphsearchnet: enhancing gnns via capturing global dependency for semantic code search. corr abs/2111.02671,"Liu S., Xie X., Ma L., Siow J., Liu Y., GraphSearchNet: Enhancing GNNs via capturing global dependency for semantic code search. CoRR abs/2111.02671, 2021",Include,Exclude (Pre-print)
assembler restructuring in fermat,"Ward M., Assembler restructuring in fermat, In: SCAM, pp. 147-156, (2013)",Exclude,""
a survey of emerging threats in cybersecurity,"Jang-Jaccard J., Nepal S., A survey of emerging threats in cybersecurity, J. Comput. System Sci., 80, 5, pp. 973-993, (2014)",Exclude,""
spatio-temporal context reduction: a pointer-analysis-based static approach for detecting useafter-free vulnerabilities,"Yan H., Sui Y., Chen S., Xue J., Spatio-Temporal Context Reduction: A Pointer-Analysis-Based Static Approach for Detecting Useafter-Free Vulnerabilities, Proceedings of the 40th International Conference on Software Engineering (ICSE ?18, (2018)",Include,Include
cocosum: contextual code summarization with multi-relational graph neural network,"Wang Y., Shi E., Du L., Yang X., Hu Y., Han S., Zhang H., Zhang D., Cocosum: Contextual code summarization with multi-relational graph neural network, (2021)",Include,Exclude (Pre-print)
deep graph neural network-based spammer detection under the perspective of heterogeneous cyberspace,"Guo Z., Tang L., Guo T., Yu K., Alazab M., Shalaginov A., Deep Graph Neural Network-Based Spammer Detection Under The Perspective Of Heterogeneous Cyberspace, Future Generation Computer Systems, 117, 2021, pp. 205-218",Exclude,""
what is the long-term impact of changes,"Brudaru I.I., Zeller A., What is the long-term impact of changes, Proceedings of the 2008 International Workshop On Recommendation Systems for Software Engineering, pp. 30-32, (2008)",Exclude,""
software vulnerability detection via deep learning over disaggregated code graph representation. corr abs/2109.03341,"Zhuang Y., Suneja S., Thost V., Domeniconi G., Morari A., Laredo J., Software vulnerability detection via deep learning over disaggregated code graph representation. CoRR abs/2109.03341",Include,Exclude (Pre-print)
discovery of technical expertise from open source code repositories,"Venkataramani R., Gupta A., Asadullah A., Muddu B., Bhat V., Discovery of technical expertise from open source code repositories, WWW, pp. 97-98, (2013)",Exclude,""
towards a software vulnerability prediction model using traceable code patterns and software metrics,"Sultana K.Z., Towards a software vulnerability prediction model using traceable code patterns and software metrics, Proc. 32nd IEEE/ACM Int. Conf. Automated Softw. Eng. (ASE), pp. 1022-1025, (2017)",Exclude,""
learning to blame: localizing novice type errors with data-driven diagnosis,"Seidel E.L., Sibghat H., Chaudhuri K., Weimer W., Jhala R., Learning to blame: Localizing novice type errors with data-driven diagnosis, OOPSLA, pp. 601-6027, (2017)",Exclude,""
summarizing source code using a neural attention model,"Iyer S., Konstas I., Cheung A., Zettlemoyer L., Summarizing Source Code using a Neural Attention Model, Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, ACL 2016, 1, (2016)",Include,Exclude
generative code modeling with graphs,"Brockschmidt M., Allamanis M., Gaunt A.L., Polozov O., Generative Code Modeling with Graphs, International Conference on Learning Representations, (2019)",Include,Include
deepsim: deep semantic information-based automatic mandelbug classification,"Du X., Zheng Z., Xiao G., Zhou Z., Trivedi K.S., DeepSIM: Deep semantic information-based automatic mandelbug classification, IEEE Trans. Reliab., (2021)",Include,Exclude
think locally,"Bettenburg N., Nagappan M., Hassan A.E., Think locally, act globally: Improving defect and effort prediction models, Proceedings of the 9th IEEE Working Conference On Mining Software Repositories, pp. 60-69, (2012)",Include,""
dos and don'ts of machine learning in computer security,"Arp D., Quiring E., Pendlebury F., Warnecke A., Pierazzi F., Wressnegger C., Cavallaro L., Rieck K., Dos and don'ts of machine learning in computer security, USENIX Security Symposium, (2022)",Exclude,""
sard: a software assurance reference dataset,"Sard: A Software Assurance Reference Dataset, (2021)",Exclude,""
generating long sequences with sparse transformers,"Child R., Gray S., Radford A., Sutskever I., Generating long sequences with sparse transformers, (2019)",Exclude,""
how can i use this method?,"Moreno L., Bavota G., Di Penta M., Oliveto R., Marcus A., How can i use this method?, Proceedings of the 37th IEEE/ACM International Conference on Software Engineering (ICSE'15), (2015)",Exclude,""
practical recommendations for gradient-based training of deep architectures,"Bengio Y., Practical recommendations for gradient-based training of deep architectures, Neural Networks: Tricks of the Trade, ser. LNCS., 7700, pp. 437-478, (2012)",Exclude,""
vulinoss: a dataset of security vulnerabilities in open-source systems,"Gkortzis A., Mitropoulos D., Spinellis D., Vulinoss: A dataset of security vulnerabilities in open-source systems, Proceedings of the 15th International Conference on Mining Software Repositories, MSR 2018, pp. 18-21, (2018)",Exclude,""
automatic inference of search patterns for taint-style vulnerabilities,"Yamaguchi F., Maier A., Gascon H., Rieck K., Automatic inference of search patterns for taint-style vulnerabilities, 2015 IEEE Symposium on Security and Privacy. IEEE, pp. 797-812, (2015)",Exclude,""
deepdelta: learning to repair compilation errors,"Mesbah A., Rice A., Johnston E., Glorioso N., Aftandilian E., DeepDelta: Learning to repair compilation errors, Foundations of Software Engineering. ACM, pp. 925-936, (2019)",Include,Exclude
deepam: migrate apis with multi-modal sequence to sequence learning,"Gu X., Zhang H., Zhang D., Kim S., DeepAM: migrate APIs with multi-modal sequence to sequence learning, IJCAI'17 Proceedings of the 26th International Joint Conference on Artificial Intelligence, pp. 3675-3681, (2017)",Exclude,""
synthesizing benchmarks for predictive modeling,"Cummins C., Petoumenos P., Wang Z., Leather H., Synthesizing benchmarks for predictive modeling, 2017 IEEE/ACM International Symposium on Code Generation and Optimization (CGO), (2017)",Exclude,""
a static pre-filter for malicious javascript detection,"Fass A., Backes M., Stock B., Jstap: A static pre-filter for malicious javascript detection, Proceedings of the 35th Annual Computer Security Applications Conference, pp. 257-269, (2019)",Exclude,""
joern(open-source code querying engine for c/c++.),"Joern(Open-Source Code Querying Engine for C/C++.), (2019)",Exclude,""
decoupled weight decay regularization,"Loshchilov I., Hutter F., Decoupled Weight Decay Regularization, 7th International Conference on Learning Representations, ICLR 2019, (2019)",Exclude,""
on-the-fly operation batching in dynamic computation graphs,"Neubig G., Goldberg Y., Dyer C., On-The-fly operation batching in dynamic computation graphs, Advances in Neural Information Processing Systems., pp. 3971-3981, (2017)",Exclude,""
stackoverflow and github: associations between software development and crowdsourced knowledge,"Vasilescu B., Filkov V., Serebrenik A., Stackoverflow and github: Associations between software development and crowdsourced knowledge, 2013 International Conference on Social Computing., pp. 188-195, (2013)",Exclude,""
bridge text and knowledge by learning multi-prototype entity mention embedding,"Cao Y., Huang L., Ji H., Chen X., Li J., Bridge text and knowledge by learning multi-prototype entity mention embedding, Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pp. 1623-1633, (2017)",Exclude,""
syntax-directed variational autoencoder for structured data,"DAI H., TIAN Y., DAI B., SKIENA S., SONG L., Syntax-directed variational autoencoder for structured data, Proceedings of the 6th International Conference on Learning Representations, (2018)",Include,Include
manual of environmental microbiology,"Manual of Environmental Microbiology, (2016)",Exclude,""
cast: enhancing code summarization with hierarchical splitting and reconstruction of abstract syntax trees,"Shi E., Et al., Cast: Enhancing code summarization with hierarchical splitting and reconstruction of abstract syntax trees, (2021)",Include,Include
klee: unassisted and automatic generation of high-coverage tests for complex systems programs,"Cadar C., Dunbar D., Engler D., KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs, Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation (San Diego, California) (OSDI'08), pp. 209-224, (2008)",Exclude,""
autonomously generating hints by inferring problem solving policies,"PIECH C., SAHAMI M., HUANG J., GUIBAS L., Autonomously generating hints by inferring problem solving policies, Proceedings of the Second ACM Conference on Learning @ Scale, pp. 195-204, (2015)",Exclude,""
east: an efficient and accurate scene text detector,"Zhou X., Yao C., Wen H., Wang Y., Zhou S., He W., Liang J., East: An efficient and accurate scene text detector, Proceedings of the IEEE conference on Computer Vision and Pattern Recognition, pp. 5551-5560, (2017)",Exclude,""
class imbalance revisited: a new experimental setup to assess the performance of treatment methods,"Prati R.C., Batista G.E., Silva D.F., Class imbalance revisited: A new experimental setup to assess the performance of treatment methods, Knowl. Inf. Syst., 45, 1, pp. 247-270, (2015)",Exclude,""
2021 vuldeelocator: a deep learning-based fine-grained vulnerability detector ieee transactions on dependable and secure computing,"Li Z., Zou D., Xu S., Chen Z., Zhu Y., Jin H., 2021 VulDeeLocator: A Deep Learning-based Fine-grained Vulnerability Detector IEEE Transactions on Dependable and Secure Computing, 1, 2021, pp. 1-1",Include,Include
value-flow-based demand-driven pointer analysis for c and c++,"Sui Y., Xue J., Value-flow-based demand-driven pointer analysis for C and C++, IEEE Trans Softw Eng, 46, 8, pp. 812-835, (2020)",Include,Exclude
software fault prediction metrics: a systematic literature review,"Radjenovic D., Hericko M., Torkar R., Zivkovic A., Software fault prediction metrics: A systematic literature review, Inf. Softw. Technol., 55, 8, pp. 1397-1418, (2013)",Exclude,""
2020. deep learning based vulnerability detection: are we there yet?,"Chakraborty S., Krishna R., Ding Y., Ray B., 2020. Deep Learning Based Vulnerability Detection: Are We There Yet?",Exclude,""
log2vec: a heterogeneous graph embedding based approach for detecting cyber threats within enterprise,"Liu F., Wen Y., Zhang D., Jiang X., Xing X., Meng D., Log2vec: A heterogeneous graph embedding based approach for detecting cyber threats within enterprise, Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security (CCS). 1777-1794, (2019)",Include,Exclude
a survey on software smells,"Sharma T., Spinellis D., A survey on software smells, Journal of Systems and Software, 138, pp. 158-173, (2018)",Exclude,""
autoencoder constrained clustering with adaptive neighbors,"Li X., Zhang R., Wang Q., Zhang H., Autoencoder constrained clustering with adaptive neighbors, IEEE Trans. Neural Netw. Learn. Syst., 32, 1, pp. 443-449, (2021)",Exclude,""
sequence-to-sequence learning as beamsearch optimization,"Wiseman S., Rush A.M., Sequence-to-sequence learning as beamsearch optimization, Empirical Methods in Natural Language Processing (EMNLP), (2016)",Exclude,""
an initial study on the use of execution complexity metrics as indicators of software vulnerabilities,"Shin Y., Williams L., An initial study on the use of execution complexity metrics as indicators of software vulnerabilities, Proceedings of the SESS, Honolulu, HI, USA, pp. 1-7, (2011)",Exclude,""
predicting bug-fix time: using standard versus topic-based text categorization techniques,"Ardimento P., Bilancia M., Monopoli S., Predicting Bug-Fix Time: Using Standard Versus Topic-Based Text Categorization Techniques, Discovery Science -19th International Conference, Ds 2016, 9956, pp. 167-182, (2016)",Exclude,""
automated vulnerability analysis: leveraging control flow for evolutionary input crafting,"Sparks S., Embleton S., Cunningham R., Zou C.C., Automated vulnerability analysis: Leveraging control flow for evolutionary input crafting, 23rd Annual Computer Security Applications Conference (ACSAC 2007), December 10-14, 2007, Miami Beach, Florida, USA, pp. 477-486, (2007)",Include,Include
microsoft. prefast analysis tool,"Microsoft. PREfast Analysis Tool, (2012)",Exclude,""
a human study of comprehension and code summarization,"Stapleton S., Et al., A human study of comprehension and code summarization, Proc. 28th Int. Conf. Prog. Comprehension, pp. 2-13, (2020)",Exclude,""
apache log4j,"Apache Log4j, (2022)",Include,""
profiling developer expertise across software communities with heterogeneous information network analysis,"Yan J., Sun H., Wang X., Liu X., Song X., Profiling Developer Expertise Across Software Communities With Heterogeneous Information Network Analysis, Proceedings of the Tenth Asia-Pacific Symposium on Internetware, pp. 1-9, (2018)",Include,Include
dlfinder: characterizing and detecting duplicate logging code smells,"Li Z., Chen T., Yang J., Shang W., DLFinder: Characterizing and detecting duplicate logging code smells, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). 152-163, (2019)",Exclude,""
abstractive sentence summarization with attentive recurrent neural networks,"Chopra Sumit, Auli Michael, Rush Alexander M, Abstractive sentence summarization with attentive recurrent neural networks, Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pp. 93-98, (2016)",Exclude,""
leveraging label information in representation learning for multi-label text classification,"Jiayu W., Leveraging Label Information in Representation Learning for Multi-label Text Classification, (2019)",Exclude,""
cross-lingual word embeddings for low-resource language modeling,"Adams O., Makarucha A., Neubig G., Bird S., Cohn T., Cross-lingual word embeddings for low-resource language modeling, Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume 1, Long Papers, pp. 937-947, (2017)",Exclude,""
ramsey vs. lexicographic termination proving,"Cook B., See A., Zuleger F., Ramsey vs. Lexicographic Termination Proving, Tools and Algorithms for the Construction and Analysis of Systems-19th International Conference, TACAS 2013, 7795, pp. 47-61, (2013)",Exclude,""
graph-based bag-of-words for classification,"Silva F.B., Werneck R.D.O., Goldenstein S., Tabbone S., Torres R.D.S., Graph-based bag-of-words for classification, Pattern Recognition, 74, pp. 266-285, (2018)",Exclude,""
chucky: exposing missing checks in source code for vulnerability discovery,"Yamaguchi F., Wressnegger C., Gascon H., Rieck K., Chucky: Exposing missing checks in source code for vulnerability discovery, Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security (CCS’13), pp. 499-510, (2013)",Exclude,""
learning to rank relevant files for bug reports using domain knowledge,"Ye X., Bunescu R., Liu C., Learning to rank relevant files for bug reports using domain knowledge, Proceedings of the 22nd Acm Sigsoft International Symposium on Foundations of Software Engineering., pp. 689-699, (2014)",Exclude,""
katana: dual slicing-based context for learning bug fixes,"Sintaha M., Nashid N., Mesbah A., Katana: Dual slicing-based context for learning bug fixes, (2022)",Exclude,""
a novel multi-module integrated intrusion detection system for high-dimensional imbalanced data,"Cui J., Zong L., Xie J., Tang M., A novel multi-module integrated intrusion detection system for high-dimensional imbalanced data, Applied Intelligence, 53, 1, pp. 272-288, (2023)",Exclude,""
simple or complex? together for a more accurate just-in-time defect predictor,"Zhou X., Han D., Lo D., Simple or complex? together for a more accurate just-in-time defect predictor, ICPC, pp. 229-240, (2022)",Exclude,""
automatically finding patches using genetic programming,"Weimer W., Nguyen T., Le Goues C., Forrest S., Automatically finding patches using genetic programming, 2009 IEEE 31st International Conference on Software Engineering. IEEE, pp. 364-374, (2009)",Exclude,""
adadelta: an adaptive learning rate method,"Zeiler M.D., ADADELTA: An adaptive learning rate method, . Arxiv, 1212, (2012)",Exclude,""
on the evaluation of neural code summarization,"Shi E., Wang Y., Du L., Chen J., Han S., Zhang H., Zhang D., Sun H., On the evaluation of neural code summarization, Proceedings of the 44th International Conference on Software Engineering, pp. 1597-1608, (2022)",Exclude,""
mining file histories: should we consider branches?,"Kovalenko V., Palomba F., Bacchelli A., Mining file histories: Should we consider branches?, 2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 202-213, (2018)",Exclude,""
a comprehensive study on security bug characteristics,"Wei Y., Sun X., Bo L., Cao S., Xia X., Li B., A comprehensive study on security bug characteristics, J. Softw. Evol. Process., 33, 10, (2021)",Exclude,""
a novel method for early software quality prediction based on support vector machine,"Xing F., Guo P., Lyu M.R., A novel method for early software quality prediction based on support vector machine, 16th IEEE International Symposium on Software Reliability Engineering, ISSRE’05, (2005)",Exclude,""
long-span program behavior modeling and attack detection,"Shu X., Yao D., Ramakrishnan N., Jaeger T., Long-span program behavior modeling and attack detection, Acm Trans. Privacy Secur, 20, 4, pp. 1-28, (2017)",Exclude,""
attention is not explanation,"Jain S., Wallace B.C., Attention is not explanation, (2019)",Exclude,""
on the significance of category prediction for code-comment synchronization,"Zhen Y., Keung J.W., Xiao Y., Yan X., Zhi J., Zhang J., On the significance of category prediction for code-comment synchronization, ACM Trans. Softw. Eng. Methodol., (2022)",Exclude,""
premise selection for theorem proving by deep graph embedding,"Wang M., Tang Y., Wang J., Deng J., Premise selection for theorem proving by deep graph embedding, Advances in Neural Information Processing Systems, pp. 2783-2793, (2017)",Exclude,""
automatically capturing source code context of nl-queries for software maintenance and reuse,"Hill E., Pollock L.L., Vijay-Shanker K., Automatically capturing source code context of NL-queries for software maintenance and reuse, Proceedings of the 31st International Conference on Software Engineering, ICSE 2009, pp. 232-242",Exclude,""
textrank: bringing order into text,"Rada M., Tarau P., Textrank: Bringing order into text, Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing, pp. 404-411, (2004)",Exclude,""
a survey of transformers,"Lin T., Wang Y., Liu X., Qiu X., A survey of transformers, (2021)",Exclude,""
detecting format string vulnerabilities with type qualifiers,"Shankar U., Talwar K., Foster J.S., Wagner D.A., Detecting format string vulnerabilities with type qualifiers, Proceedings of the 2001 USENIX Security Symposium (USENlX security'Oi)., pp. 201-220, (2001)",Exclude,""
timers: error-bounded svd restart on dynamic networks,"Zhang Z., Cui P., Pei J., Wang X., Zhu W., TIMERS: Error-Bounded SVD Restart On Dynamic Networks, Thirty-second AAAI Conference on Artificial Intelligence, (2018)",Exclude,""
atom: commit message generation based on abstract syntax tree and hybrid ranking,"Liu S., Gao C., Chen S., Lun Yiu N., Liu Y., Atom: Commit message generation based on abstract syntax tree and hybrid ranking, IEEE Transactions on Software Engineering, (2020)",Include,Include
sentiment classification based on ontology and svm classifier,"Shein K.P.P., Nyunt T.T.S., Sentiment classification based on ontology and SVM classifier, 2010 Second International Conference On Communication Software And Networks, pp. 169-172, (2010)",Exclude,""
a practical approach to the automatic classification of security-relevant commits,"Sabetta A., Bezzi M., A practical approach to the automatic classification of security-relevant commits, ICSME, pp. 579-582, (2018)",Exclude,""
self-attention with relative position representations,"Shaw P., Uszkoreit J., Vaswani A., Self-Attention with Relative Position Representations, Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, 2, pp. 464-468, (2018)",Exclude,""
improving automatic source code summarization via deep reinforcement learning,"Wan Y., Zhao Z., Yang M., Xu G., Ying H., Wu J., Yu P.S., Improving automatic source code summarization via deep reinforcement learning, Ase, pp. 397-407, (2018)",Include,Include
adversarial learning for multi-task sequence labeling with attention mechanism,"Wang Y., Li Y., Zhu Z., Tong H., Huang Y., Adversarial learning for multi-task sequence labeling with attention mechanism, IEEE/ACM Trans. Audio Speech Lang. Process., 28, pp. 2476-2488, (2020)",Exclude,""
improving software diagnosability via log enhancement,"Yuan D., Zheng J., Park S., Zhou Y., Savage S., Improving software diagnosability via log enhancement, ACM Transactions on Computer Systems (TOCS) 2012, pp. 1-28, (2012)",Exclude,""
flakeflagger: predicting flakiness without rerunning tests,"Alshammari A., Morris C., Hilton M., Bell J., FlakeFlagger: Predicting flakiness without rerunning tests, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE, pp. 1572-1584, (2021)",Include,Exclude
chapter four - anti-pattern detection: methods,"Palomba F., Lucia A.D., Bavota G., Oliveto R., Chapter four - anti-pattern detection: Methods, challenges, and open issues, Advances in Computers, Advances in Computers, 95, pp. 201-238, (2014)",Exclude,""
hierarchical attention networks for document classification,"Yang Z., Yang D., Et al., Hierarchical attention networks for document classification, NAACL HLT, the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, San Diego California, USA, June, 12-17, pp. 1480-1489, (2016)",Exclude,""
to camelcase or under_score,"Binkley D., Davis M., Lawrie D., Morrell C., To camelcase or under_score, Proceedings of the 17th International Conference on Program Comprehension, pp. 158-167, (2009)",Exclude,""
multi-type source code defect detection based on textcnn,"Wang X., Guan Z., Xin W., Et al., Multi-type source code defect detection based on TextCNN, Proceedings of the FCS, Singapore, Singapore, pp. 95-103, (2020)",Exclude,""
the dissimilarity representation for pattern recognition: foundations and applications (machine perception and artificial intelligence),"PEKALSKA E., DUIN R., The Dissimilarity Representation for Pattern Recognition: Foundations And Applications (Machine Perception and Artificial Intelligence), (2005)",Exclude,""
pattern recognition and machine learning,"Bishop C.M., Pattern Recognition and Machine Learning, (2006)",Exclude,""
differential geometric treewidth estimation in adiabatic quantum computation,"Wang C., Jonckheere E., Brun T., Differential geometric treewidth estimation in adiabatic quantum computation, Quant. Inf. Process, 15, pp. 3951-3966, (2016)",Exclude,""
optuna: a next-generation hyperparameter optimization framework,"Akiba T., Sano S., Yanase T., Ohta T., Koyama M., Optuna: A next-generation hyperparameter optimization framework, Proceedings of the 25th Acm Sigkdd International Conference on Knowledge Discovery & Data Mining, pp. 2623-2631, (2019)",Exclude,""
visualizing data using t-sne,"Van Der Maaten L., Hinton G., Visualizing data using t-SNE, Journal of machine learning research., 9, 11, pp. 2579-2605, (2008)",Exclude,""
tfix: learning to fix coding errors with a text-to-text transformer,"Berabi B., He J., Raychev V., Vechev M., TFix: Learning to fix coding errors with a text-to-text transformer, International Conference on Machine Learning. PMLR, pp. 780-791, (2021)",Exclude,""
improving code summarization with block-wise abstract syntax tree splitting,"Lin C., Ouyang Z., Zhuang J., Chen J., Li H., Wu R., Improving code summarization with block-wise abstract syntax tree splitting, 2021 IEEE/ACM 29th International Conference on Program Comprehension, pp. 184-195, (2021)",Include,Include
fast and memory-efficient neural code completion,"Svyatkovskiy A., Lee S., Hadjitofi A., Riechert M., Franco J., Allamanis M., Fast and memory-efficient neural code completion, (2020)",Include,Include
historical analysis of exploit availability timelines,"Householder A.D., Chrabaszcz J., Novelly T., Warren D., Spring J.M., Historical analysis of exploit availability timelines, 13th USENIX Workshop on Cyber Security Experimentation and Test (CSET 20), (2020)",Exclude,""
polly-performing polyhedral optimizations on a low-level intermediate representation,"Grosser T., Et al., Polly-performing polyhedral optimizations on a low-level intermediate representation, Parallel Processing Letters, (2012)",Exclude,""
is attention interpretable?,"Serrano S., Smith N.A., Is attention interpretable?, (2019)",Exclude,""
detection and mitigation of label-flipping attacks in federated learning systems with kpca and k-means,"Li D., Wong W. E., Wang W., Yao Y., Chau M., Detection and mitigation of label-flipping attacks in federated learning systems with kpca and k-means, 2021 8th International Conference on Dependable Systems and Their Applications (DSA). IEEE, pp. 551-559, (2021)",Exclude,""
on using machine learning to automatically classify software applications into domain categories,"Linares-Vasquez M., Mcmillan C., Poshyvanyk D., Grechanik M., On using machine learning to automatically classify software applications into domain categories, Empirical Software Engineering, 19, 3, pp. 582-618, (2014)",Include,Include
embedding api dependency graph for neural code generation,"Lyu C., Wang R., Zhang H., Zhang H., Hu S., Embedding API dependency graph for neural code generation, Empirical Softw. Eng., 26, 4, pp. 1-51, (2021)",Include,Include
augmenting java method comments generation with context information based on neural networks,"Zhou Y., Yan X., Yang W., Chen T., Huang Z., Augmenting java method comments generation with context information based on neural networks, J. Syst. Softw., 156, Oct., pp. 328-340, (2019)",Include,Include
assessing the applicability of fault-proneness models across object-oriented software projects,"Briand L.C., Melo W.L., Wust J., Assessing the applicability of fault-proneness models across object-oriented software projects, IEEE Trans. Softw. Eng., 28, 7, pp. 706-720, (2002)",Exclude,""
deep just-in-time defect prediction: how far are we?,"Zeng Z., Zhang Y., Zhang H., Zhang L., Deep just-in-time defect prediction: how far are we?, Proceedings of the 30th International Symposium on Software Testing and Analysis, pp. 427-438, (2021)",Exclude,""
a systematic literature review on fault prediction performance in software engineering,"Hall T., Beecham S., Bowes D., Gray D., Counsell S., A systematic literature review on fault prediction performance in software engineering, IEEE Trans. Softw. Eng., 38, 6, pp. 1276-1304, (2012)",Exclude,""
understanding and improving deep learning-based rolling bearing fault diagnosis with attention mechanism,"Li X., Zhang W., Ding Q., Understanding and improving deep learning-based rolling bearing fault diagnosis with attention mechanism, Signal processing, 161, pp. 136-154, (2019)",Include,Exclude
semi-supervised recursive autoencoders for predicting sentiment distributions,"Socher R., Pennington J., Huang E.H., Ng A.Y., Manning C.D., Semi-supervised recursive autoencoders for predicting sentiment distributions, Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, EMNLP 2011, 27-31 July, 2011, pp. 151-161, (2011)",Exclude,""
a large-scale study of architectural evolution in open-source software systems,"Behnamghader P., Le D.M., Garcia J., Link D., Shahbazian A., Medvidovic N., A large-scale study of architectural evolution in open-source software systems, Empir. Soft. Eng., 22, 3, pp. 1146-1193, (2017)",Exclude,""
code generation as a dual task of code summarization,"Wei B., Li G., Xia X., Fu Z., Jin Z., Code generation as a dual task of code summarization, Advances in Neural Information Processing Systems, pp. 6563-6573, (2019)",Include,Include
a manually-curated dataset of fixes to vulnerabilities of open-source software,"Ponta S.E., Plate H., Sabetta A., Bezzi M., Dangremont C., A manually-curated dataset of fixes to vulnerabilities of open-source software, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR). IEEE, pp. 383-387, (2019)",Exclude,""
hierarchical probabilistic neural network language model,"Morin F., Bengio Y., Hierarchical probabilistic neural network language model, Aistats, 5, pp. 246-252, (2005)",Exclude,""
a.word representations via gaussian embedding,"Vilnis L.M., A.Word Representations via Gaussian Embedding",Exclude,""
reinforcement learning for automatic test case prioritization and selection in continuous integration,"Spieker H., Gotlieb A., Marijan D., Mossige M., Reinforcement learning for automatic test case prioritization and selection in continuous integration, ISSTA, pp. 12-22, (2017)",Include,Exclude
refactoring for software design smells: managing technical debt by girish suryanarayana,"Tracz W., Refactoring for software design smells: Managing technical debt by girish suryanarayana, ganesh samarthyam, and tushar sharma, ACM SIGSOFT Softw. Eng. Notes, 40, 6, (2015)",Exclude,""
normalized (pointwise) mutual information in collocation extraction[j],"Bouma G., Normalized (pointwise) mutual information in collocation extraction[J], Proceedings of GSCL, 30, pp. 31-40, (2009)",Exclude,""
be careful about poisoned word embeddings: exploring the vulnerability of the embedding layers in nlp models. corr abs/2103.15543,"Yang W., Li L., Zhang Z., Ren X., Sun X., He B., Be careful about poisoned word embeddings: exploring the vulnerability of the embedding layers in NLP models. CoRR abs/2103.15543",Exclude,""
rich feature hierarchies for accurate object detection and semantic segmentation,"Girshick R., Donahue J., Darrell T., Malik J., Rich feature hierarchies for accurate object detection and semantic segmentation, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 580-587, (2014)",Exclude,""
is this class thread-safe? inferring documentation using graph-based learning,"Habib A., Pradel M., Is this class thread-safe? Inferring documentation using graph-based learning, ASE, pp. 41-52, (2018)",Include,Include
domain adaptation via transfer component analysis,"Pan S.J., Tsang I.W., Kwok J.T., Yang Q., Domain adaptation via transfer component analysis, Ieee Trans. Neural Netw., 22, 2, pp. 199-210, (2011)",Exclude,""
sorry ma'am you didn't win $43m-there was a slot machine 'malfunction',"Kravets D., Sorry Ma'am You Didn't Win $43M-There Was A Slot Machine 'malfunction', (2017)",Exclude,""
search-driven string constraint solving for vulnerability detection[c],"Thome J., Shar L.K., Bianculli D., Et al., Search-driven string constraint solving for vulnerability detection[C], 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE). IEEE, pp. 198-208, (2017)",Exclude,""
pycp: an open-source conformal predictions toolkit,"Balasubramanian V.N., Baker A., Yanez M., Chakraborty S., Panchanathan S., Pycp: An open-source conformal predictions toolkit, Proc. Ifip Int. Conf. Artif. Intell. Appl. Innov, pp. 361-370, (2013)",Exclude,""
algorithmic stability and sanity-check bounds for leave-one-out cross-validation,"Kearns M., Ron D., Algorithmic stability and sanity-check bounds for leave-one-out cross-validation, Neural Comput, 11, 6, pp. 1427-1453, (1999)",Exclude,""
neural network-based graph embedding for cross-platform binary code similarity detection [c],"Xu X., Liu C., Feng Q., Et al., Neural network-based graph embedding for cross-platform binary code similarity detection [C], Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security., pp. 363-376, (2017)",Exclude,""
understanding exception-related bugs in large-scale cloud systems,"Chen H., Dou W., Jiang Y., Qin F., Understanding exception-related bugs in large-scale cloud systems, ASE, pp. 339-351, (2019)",Exclude,""
cwe list version 3.1,"CWE List Version 3.1, (2018)",Exclude,""
analysis of the automl challenge series 2015-2018,"Guyon I., Sun-Hosoya L., Boulle M., Jair Escalante H., Escalera S., Liu Z., Jajetic D., Ray B., Saeed M., Sebag M., Statnikov A., Tu W., Viegas E., Analysis of the AutoML Challenge series 2015-2018, AutoML, (2019)",Exclude,""
improving continuous integration with similarity-based test case selection,"de Oliveira Neto F.G., Ahmad A., Leifler O., Sandahl K., Enoiu E., Improving continuous integration with similarity-based test case selection, Proceedings of the 13Th International Workshop on Automation of Software Test, pp. 39-45, (2018)",Exclude,""
learning to represent edits,"Yin P., Neubig G., Allamanis M., Brockschmidt M., Gaunt A.L., Learning to Represent Edits, International Conference on Learning Representations, (2019)",Include,Include
walklets: multiscale graph embeddings for interpretable network classification,"Perozzi B., Kulkarni V., Skiena S., Walklets: Multiscale Graph Embeddings for Interpretable Network Classification, (2016)",Include,Exclude
ast-trans: code summarization with efficient tree-structured attention,"Tang Z., Shen X., Li C., Ge J., Huang L., Zhu Z., Luo B., AST-trans: Code summarization with efficient tree-structured attention, 44th IEEE/ACM 44th International Conference on Software Engineering, ICSE 2022, pp. 150-162, (2022)",Include,Include
pangr: a behavior-based automatic vulnerability detection and exploitation framework,"Liu D., Wang J., Rong Z., Mi X., Gai F., Tang Y., Wang B., Pangr: a behavior-based automatic vulnerability detection and exploitation framework, 2018 17th IEEE International Conference On Trust, Security And Privacy In Computing And Communications/12th IEEE International Conference On Big Data Science And Engineering (TrustCom/BigDataSE), pp. 705-712, (2018)",Exclude,""
) clang 12 documentation,") Clang 12 Documentation, (2021)",Exclude,""
facenet: a unified embedding for face recognition and clustering,"Schroff F., Kalenichenko D., Philbin J., Facenet: A unified embedding for face recognition and clustering, Proceedings of the IEEE conference on computer vision and pattern recognition, (2015)",Exclude,""
all you ever wanted to know about dynamic taint analysis and forward symbolic execution (but might have been afraid to ask),"Schwartz E.J., Avgerinos T., Brumley D., All you ever wanted to know about dynamic taint analysis and forward symbolic execution (but might have been afraid to ask), Proceedings-IEEE Symposium on Security and Privacy, pp. 317-331, (2010)",Exclude,""
execute this! analyzing unsafe and malicious dynamic code loading in android applications,"Poeplau S., Fratantonio Y., Bianchi A., Kruegel C., Vigna G., Execute this! analyzing unsafe and malicious dynamic code loading in android applications, NDSS, (2014)",Exclude,""
applying the abc metric to c,"Fitzpatrick J., Applying the ABC metric to C, C++, and Java, Proc. More C++ Gems, pp. 245-264, (2000)",Exclude,""
economic impact of cybercrime-no slowing down report,"Lewis J., Economic Impact of Cybercrime-No Slowing down Report, (2018)",Exclude,""
on the effectiveness of manual and automatic unit test generation: ten years later,"Serra D., Grano G., Palomba F., Ferrucci F., Gall H.C., Bacchelli A., On the Effectiveness of Manual and Automatic Unit Test Generation: Ten Years Later, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), pp. 121-125, (2019)",Exclude,""
the analytic hierarchy process: planning,"Saaty T.L., The Analytic Hierarchy Process: Planning, Priority Setting, Resources Allocation, (1980)",Exclude,""
deepwalk: online learning of social representations,"Perozzi B., Al-Rfou R., Skiena S., Deepwalk: online learning of social representations, Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 701-710, (2014)",Exclude,""
a model for spectra-based software diagnosis,"Naish L., Lee H., Ramamohanarao K., A model for spectra-based software diagnosis, Journal of the ACM Transactions on Software Engineering and Methodology, 20, 3, (2011)",Exclude,""
latent predictor networks for code generation,"Ling W., Blunsom P., Grefenstette E., Hermann K.M., Kocisky T., Wang F., Senior A., Latent predictor networks for code generation, Proceedings of the 54Th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), 1, pp. 599-609, (2016)",Include,Exclude
instruction2vec: efficient preprocessor of assembly code to detect software weakness with cnn[j],"Lee Y., Kwon H., Choi S.H., Et al., Instruction2vec: Efficient preprocessor of assembly code to detect software weakness with CNN[J], Applied Sciences, 9, 19, (2019)",Exclude,""
an empirical study of architectural decay in open-source software,"Le D.M., Link D., Shahbazian A., Medvidovic N., An empirical study of architectural decay in open-source software, IEEE International Conference on Software Architecture, ICSA 2018, Seattle, WA, USA, April 30 - May 4, 2018, pp. 176-185, (2018)",Exclude,""
neural collaborative filtering,"He X., Liao L., Zhang H., Nie L., Hu X., Chua T.S., Neural collaborative filtering, Proceedings of the 26Th International Conference on World Wide Web, pp. 173-182, (2017)",Exclude,""
mining temporal specifications for error detection,"Weimer W., Necula G.C., Mining temporal specifications for error detection, TACAS, pp. 461-476, (2005)",Include,Include
deep just-intime defect localization,"Qiu F., Gao Z., Xia X., Lo D., Grundy J., Wang X., Deep just-intime defect localization, IEEE Transactions on Software Engineering, (2021)",Include,Exclude
separating style and content with bilinear models,"Tenenbaum J.B., Freeman W.T., Separating style and content with bilinear models, Neural Computation, 12, 6, pp. 1247-1283, (2000)",Exclude,""
classification of source code solutions based on the solved programming tasks,"Pinter A., Szenasi S., Classification of source code solutions based on the solved programming tasks, 2018 IEEE 18th International Symposium on Computational Intelligence and Informatics (CINTI)., pp. 277-282, (2018)",Include,Exclude
dialogue learning with human teaching and feedback in end-to-end trainable task-oriented dialogue systems,"Liu B., Tur G., Hakkani-Tur D., Shah P., Heck L., Dialogue learning with human teaching and feedback in end-to-end trainable task-oriented dialogue systems, NAACL, (2018)",Exclude,""
avoiding javascript scoping pitfalls,"Sotomayor L., Avoiding javascript scoping pitfalls, (2022)",Exclude,""
cyber-guided deep neural network for malicious repository detection in github,"Zhang Y., Fan Y., Hou S., Ye Y., Xiao X., Li P., Shi C., Zhao L., Xu S., Cyber-Guided Deep Neural Network For Malicious Repository Detection In Github, 2020 IEEE International Conference on Knowledge Graph (ICKG), pp. 458-465, (2020)",Include,Include
a general path-based representation for predicting program properties.,"Alon U., Zilberstein M., Levy O., A general path-based representation for predicting program properties., (2018)",Include,Include
appdna: profiling app behavior via deep-learning on function call graphs,"Li A., Xue S., Li X., Zhang L., Qian J., Appdna: Profiling app behavior via deep-learning on function call graphs, IEEE Transactions on Emerging Topics in Computing, (2020)",Include,Include
gg-nns reference implementation,"gg-nns reference implementation, (2020)",Exclude,""
nist: national vulnerability database.,"NIST: National Vulnerability Database., (2021)",Exclude,""
on the” naturalness” of buggy code,"Ray B., Hellendoorn V., Godhane S., Tu Z., Bacchelli A., Devanbu P., On the” naturalness” of buggy code, 2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE), pp. 428-439, (2016)",Exclude,""
debugging: finding,"Fitzgerald S., Lewandowski G., McCauley R., Murphy L., Simon B., Thomas L., Zander C., Debugging: finding, fixing and flailing, a multi-institutional study of novice debuggers, Computer Science Education, (2008)",Include,""
dropout vs.batch normalization: an empirical study of their impact to deep learning,"Garbin C., Zhu X., Marques O., Dropout vs.batch normalization: an empirical study of their impact to deep learning, Multimedia Tools Appl., 79, 19-20, pp. 12777-12815, (2020)",Exclude,""
round robin classification,"Furnkranz J., Round robin classification, J. Mach. Learn. Res., 2, pp. 721-747, (2002)",Exclude,""
results of the competition,"Beyer D., Results of the Competition, (2018)",Exclude,""
performance and participation in open source software on github,"McDonald N., Goggins S., Performance and participation in open source software on github, CHI, pp. 139-144, (2013)",Exclude,""
an empirical study of rule-based and learning-based approaches for static application security testing,"Croft R., Newlands D., Chen Z., Ali Babar M., An Empirical Study of Rule-Based and Learning-Based Approaches for Static Application Security Testing, Proceedings of the 15th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)., pp. 1-12, (2021)",Exclude,""
discovering bug patterns in javascript,"Hanam Q., De Brito F.M.S., Mesbah A., Discovering bug patterns in Javascript, Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering., pp. 144-156, (2016)",Exclude,""
coda: an end-to-end neural program decompiler,"Fu C., Chen H., Liu H., Chen X., Tian Y., Koushanfar F., Zhao J., Coda: An end-to-end neural program decompiler, Advances in Neural Information Processing Systems 32: Annual Conference on Neural Information Processing Systems 2019, pp. 3703-3714, (2019)",Exclude,""
jsac: a novel framework to detect malicious javascript via cnns over ast and cfg,"Liang H., Yang Y., Sun L., Jiang L., JSAC: a novel framework to detect malicious javascript via CNNs over AST and CFG, 2019 International Joint Conference on Neural Networks (IJCNN), pp. 1-8, (2019)",Include,Include
when do changes induce fixes?,"Sliwerski J., Zimmermann T., Zeller A., When do changes induce fixes?, Proceedings Of The 2005 International Workshop On Mining Software Repositories, St. Louis, Missouri, MSR ’05, pp. 1-5, (2005)",Exclude,""
neural software vulnerability analysis using rich intermediate graph representations of programs,"Ghaffarian S.M., Shahriari H.R., Neural software vulnerability analysis using rich intermediate graph representations of programs, Information Sciences, 553, pp. 189-207, (2021)",Include,Include
injecting mechanical faults to localize developer faults for evolving software,"Zhang L., Zhang L., Khurshid S., Injecting mechanical faults to localize developer faults for evolving software, Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages & Applications, OOPSLA '13, pp. 765-784, (2013)",Exclude,""
cpachecker with sequential combination of explicit-state analysis and predicate analysis—(competition contribution),"Wendler P., CPAchecker with sequential combination of explicit-state analysis and predicate analysis—(Competition Contribution), TACAS, LNCS, 7795, pp. 613-615, (2013)",Exclude,""
adaptive control processes.,"Bellman R.E., Adaptive Control Processes., (2015)",Exclude,""
are mutation scores correlated with real fault detection?: a large scale empirical study on the relationship between mutants and real faults,"Papadakis M., Shin D., Yoo S., Bae D., Are mutation scores correlated with real fault detection?: A large scale empirical study on the relationship between mutants and real faults, Proceedings of the 40th International Conference on Software Engineering, ICSE 2018, Gothenburg, Sweden, May 27 - June 03, 2018, pp. 537-548, (2018)",Exclude,""
identification of extract method refactoring opportunities,"Tsantalis N., Chatzigeorgiou A., Identification of extract method refactoring opportunities for the decomposition of methods, Journal of Systems and Software, 84, pp. 1757-1782, (2011)",Exclude,""
improving neural language models with a continuous cache,"Grave E., Joulin A., Usunier N., Improving neural language models with a continuous cache, (2016)",Exclude,""
tucker tensor decomposition-based tracking and gaussian mixture model for anomaly localisation and detection in surveillance videos,"Ratre A., Pankajakshan V., Tucker tensor decomposition-based tracking and gaussian mixture model for anomaly localisation and detection in surveillance videos, IET Comput Vision, 12, 6, pp. 933-940, (2018)",Exclude,""
supervised feature extraction for tensor objects based on maximization of mutual information,"Jukic A., Filipovic M., Supervised feature extraction for tensor objects based on maximization of mutual information, Pattern Recognit. Lett., 34, 13, pp. 1476-1484, (2013)",Exclude,""
a commit messages-based bug localization for android applications,"Zhang T., Wenjun H., Luo X., Ma X., A commit messages-based bug localization for android applications, Int J Softw En Knowledge Eng, 29, 4, pp. 457-487, (2019)",Exclude,""
methodological approaches at phd and skills sought for research posts in academia: a mismatch?,"WILES R., DURRANT G., BROE S. D., POWELL J., Methodological approaches at PhD and skills sought for research posts in academia: A mismatch?, International Journal of Social Research Methodology, 12, 3, pp. 257-269, (2009)",Exclude,""
code property graph-joern documentation,"Code Property Graph-Joern Documentation, (2021)",Exclude,""
bridging semantic gaps between natural languages and apis with word embedding,"Li X., Jiang H., Kamei Y., Chen X., Bridging semantic gaps between natural languages and apis with word embedding, IEEE Transactions on Software Engineering, (2018)",Exclude,""
a systematic literature review on the use of deep learning in software engineering re-search,"Watson C., Cooper N., Palacio D.N., Et al., A Systematic Literature Review on the Use of Deep Learning in Software Engineering Re-search",Exclude,""
pesco: predicting sequential combinations of verifiers (competition contribution),"Richter C., Wehrheim H., PeSCo: Predicting sequential combinations of verifiers (competition contribution), TACAS, LNCS, 11429, pp. 229-233, (2019)",Exclude,""
combining deep learning with information retrieval to localize buggy files for bug reports (n),"Lam A.N., Nguyen A.T., Nguyen H.A., Nguyen T.N., Combining deep learning with information retrieval to localize buggy files for bug reports (n), 2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 476-481, (2015)",Include,Exclude
neural-machine-translation-based commit message generation: how far are we?,"Liu Zhongxin, Xia Xin, Hassan Ahmed E, Lo David, Xing Zhenchang, Wang Xinyu, Neural-machine-translation-based commit message generation: how far are we?, Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering, pp. 373-384, (2018)",Exclude,""
maintaining mental models: a study of developer work habits,"LaToza T.D., Venolia G., DeLine R., Maintaining mental models: A study of developer work habits, Proc. 28th Int. Conf. Softw. Eng, pp. 492-501, (2006)",Exclude,""
relational collaborative filtering: modeling multiple item relations for recommendation,"Xin X., He X., Zhang Y., Zhang Y., Jose J., Relational collaborative filtering: Modeling multiple item relations for recommendation, Proceedings of the 42Nd International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 125-134, (2019)",Exclude,""
automatic identification of key classes in a software system using webmining techniques,"Zaidman A., Demeyer S., Automatic identification of key classes in a software system using webmining techniques, J. Softw. Maintenance Res. Pract., 20, 6, pp. 387-417, (2008)",Include,Include
api.susi.ai—software and rules for personal assistants,"api.susi.ai—software and Rules for Personal Assistants, (2018)",Exclude,""
an empirical study on evolution of api documentation,"Shi L., Zhong H., Xie T., Li M., An empirical study on evolution of API documentation, Proc. Int. Conf. Fundam. Approaches Softw. Eng., Springer, pp. 416-431, (2011)",Exclude,""
representing programs with dependency and function call graphs for learning hierarchical embeddings,"Romanov V., Ivanov V., Succi G., Representing programs with dependency and function call graphs for learning hierarchical embeddings, ICEIS, 2, pp. 360-366, (2020)",Include,Include
building program vector representations for deep learning,"Mou L., Li G., Liu Y., Peng H., Jin Z., Xu Y., Zhang L., Building Program Vector Representations for Deep Learning, (2014)",Include,Exclude
action word prediction for neural source code summarization,"Haque S., Bansal A., Wu L., McMillan C., Action word prediction for neural source code summarization, 2021 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER). IEEE, pp. 330-341, (2021)",Include,Exclude
2021 path-sensitive sparse analysis without path conditions,"Shi Q., Yao P., Wu R., Zhang C., 2021 path-sensitive sparse analysis without path conditions, Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation (PLDI ?21). ACM, pp. 930-943",Include,Exclude
using network analysis for recommendation of central software classes,"Steidl D., Hummel B., Jurgens E., Using network analysis for recommendation of central software classes, Proc. 19th Work. Conf. Reverse Eng., pp. 93-102, (2012)",Include,Exclude
"2013. ""mining source code repositories at massive scale using language modeling","Allamanis M., Sutton C., 2013. ""mining source code repositories at massive scale using language modeling, Proceedings of the 10th Ieee Working Conference on Mining Software Repositories Ieee Cs, pp. 207-216, (2013)",Exclude,""
managing technical debt in enterprise software packages,"Ramasubbu N., Kemerer C.F., Managing technical debt in enterprise software packages, IEEE Trans. Softw. Eng., 40, 8, pp. 758-772, (2014)",Exclude,""
where is the bug and how is it fixed? an experiment with practitioners,"Bohme M., Soremekun E.O., Chattopadhyay S., Ugherughe E., Zeller A., Where is the bug and how is it fixed? An experiment with practitioners, Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2017, pp. 117-128, (2017)",Exclude,""
sk p: a neural program corrector for moocs,"Pu Y., Narasimhan K., Solar-Lezama A., Barzilay R., sk p: a neural program corrector for moocs, SPLASH Companion, (2016)",Include,Exclude
bert: pre-training of deep bidirectional transformers for language understanding. arxiv preprint arxiv,"Devlin J., Chang M.W., Lee K., Toutanova K., BERT: Pre-Training of Deep Bidirectional Transformers for Language Understanding. Arxiv Preprint Arxiv, 1810, (2018)",Exclude,""
dynamine: finding common error patterns by mining software revision histories,"Livshits B., Zimmermann T., Dynamine: finding common error patterns by mining software revision histories, ACM SIGSOFT Software Engineering Notes, 30, 5, pp. 296-305, (2005)",Exclude,""
how does student behaviour change approaching dropout? a study of gender and school year differences,"MCBROOM J., KOPRINSKA I., YACEF K., How does student behaviour change approaching dropout? A study of gender and school year differences, Proceedings of the 13th International Conference on Educational Data Mining, pp. 643-647, (2020)",Exclude,""
code-based vulnerability detection in node.js applications: how far are we?,"Chinthanet B., Ponta S.E., Plate H., Sabetta A., Kula R.G., Ishio T., Matsumoto K., Code-based vulnerability detection in node.js applications: how far are we?, pp. 1199-1203, (2020)",Exclude,""
auto-encoding variational bayes,"Kingma D.P., Welling M., Auto-encoding variational bayes, Proceedings of the 2nd International Conference on Learning Representations, ICLR 2014, (2014)",Exclude,""
tensor decompositions for signal processing applications: from two-way to multiway component analysis,"Cichocki A., Mandic D.P., Tensor decompositions for signal processing applications: from two-way to multiway component analysis, IEEE Signal Process Mag, 32, 2, pp. 145-163, (2015)",Exclude,""
learning dynamical systems in a stationary environment,"CAMPI M., KUMAR P., Learning dynamical systems in a stationary environment, Systems & Control Letters, 34, 3, pp. 125-132, (1998)",Exclude,""
using graph-based program characterization for predictive modeling,"Park E., Cavazos J., Alvarez M.A., Using graph-based program characterization for predictive modeling, Proceedings of the Tenth International Symposium on Code Generation and Optimization, pp. 196-206, (2012)",Include,Include
a new algorithm for the calculation of transitive dependences,"Livadas P.E., Croll S., A new algorithm for the calculation of transitive dependences, Journal of Software Maintenance: Research and Practice, 7, 3, pp. 151-176, (1995)",Exclude,""
rouge: a package for automatic evaluation of summaries,"Lin C.Y., ROUGE: A Package for Automatic Evaluation of Summaries, Proceedings of the ACL Workshop: Text Summarization Braches Out 2004, pp. 74-81, (2004)",Exclude,""
nist software assurance reference dataset project,"NIST Software Assurance Reference Dataset Project, (2019)",Exclude,""
evaluation of a data-driven feedback algorithm for open-ended programming,"PRICE T., ZHI R., BARNES T., Evaluation of a data-driven feedback algorithm for open-ended programming, Proceedings of the 10th International Conference on Educational Data Mining, pp. 192-197, (2017)",Exclude,""
grammar variational autoencoder,"KUSNER M. J., PAIGE B., HERNANDEZ-LOBATO J. M., Grammar variational autoencoder, Proceedings of the 34th International Conference on Machine Learning, pp. 1945-1954, (2017)",Exclude,""
automatic generation of pull request descriptions,"Liu Z., Xia X., Treude C., Lo D., Li S., Automatic generation of pull request descriptions, 34th IEEE/ACM International Conference on Automated Software Engineering. IEEE, pp. 176-188, (2019)",Exclude,""
control flow graph embedding based on multi-instance decomposition for bug localization,"Control flow graph embedding based on multi-instance decomposition for bug localization, Proceedings of the 34Th AAAI Conference on Artificial Intelligence, Volume 34, pp. 4223-4230, (2020)",Include,Include
privacy preserving text representation learning,"Beigi G., Shu K., Guo R., Wang S., Liu H., Privacy preserving text representation learning, pp. 275-276, (2019)",Exclude,""
on learning meaningful assert statements for unit test cases,"Watson C., Tufano M., Moran K., Bavota G., Poshyvanyk D., On learning meaningful assert statements for unit test cases, International Conference on Software Engineering. ACM, pp. 1398-1409, (2020)",Exclude,""
on the use of relevance feedback in ir-based concept location,"Gay G., Haiduc S., Marcus A., Menzies T., On the use of relevance feedback in ir-based concept location, In 2009 IEEE International Conference on Software Maintenance, pp. 351-360, (2009)",Exclude,""
leveraging developer information for efficient effort-aware bug prediction,"Qu Y., Chi J., Yin H., Leveraging developer information for efficient effort-aware bug prediction, Inf. Softw. Technol., 137, (2021)",Exclude,""
bag constrained structure pattern mining for multi-graph classification,"Jia W., Zhu X., Zhang C., Philip S.Y., Bag constrained structure pattern mining for multi-graph classification, IEEE Trans Knowl Data Eng, 26, 10, pp. 2382-2396, (2014)",Exclude,""
spoc: search-based pseudocode to code,"Kulal S., Pasupat P., Chandra K., Lee M., Padon O., Aiken A., Liang P., Spoc: Search-based pseudocode to code, NeurIPS, (2019)",Exclude,""
training deep code comment generation models via data augmentation,"Zhang X., Zhou Y., Han T., Chen T., Training deep code comment generation models via data augmentation, Proceedings of the 12th Asia-Pacific Symposium on Internetware, pp. 185-188, (2020)",Include,Exclude
debugging method names,"Host E.W., Ostvold B.M., Debugging method names, European Conference on Object-Oriented Programming, pp. 294-317, (2009)",Exclude,""
learning recommenders for implicit feedback with importance resampling,"Chen J., Lian D., Jin B., Zheng K., Chen E., Learning Recommenders for Implicit Feedback with Importance Resampling, WWW, pp. 1997-2005, (2022)",Exclude,""
byte pair encoding: a text compression scheme that accelerates pattern matching,"Shibata Yusuxke, Kida Takuya, Fukamachi Shuichi, Takeda Masayuki, Shinohara Ayumi, Shinohara Takeshi, Arikawa Setsuo, Byte pair encoding: A text compression scheme that accelerates pattern matching, (1999)",Exclude,""
visual semantic reasoning for image-text matching,"Li K., Zhang Y., Li K., Li Y., Fu Y., Visual semantic reasoning for image-text matching, Proceedings of the IEEE/CVF international conference on computer vision, pp. 4654-4662, (2019)",Exclude,""
scminer: localizing system-level concurrency faults from large system call traces,"Shaila Zaman T., Han X., Yu T., SCMiner: Localizing system-level concurrency faults from large system call traces, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). 515-526, (2019)",Exclude,""
a self-attentional neural architecture for code completion with multi-task learning,"Liu F., Li G., Wei B., Xia X., Fu Z., Jin Z., A self-attentional neural architecture for code completion with multi-task learning, Proc. 28th Int. Conf. Prog. Comprehension, pp. 37-47, (2020)",Include,Include
on predictive accuracy and risk minimization in pairwise label ranking,"Hullermeier E., Furnkranz J., On predictive accuracy and risk minimization in pairwise label ranking, J. Comput. Syst. Sci., 76, 1, pp. 49-62, (2010)",Exclude,""
can developer-module networks predict failures?,"Pinzger M., Nagappan N., Murphy B., Can developer-module networks predict failures?, Proc. 16th Acm Sigsoft Int. Symp. Found. Softw. Eng., pp. 2-12, (2008)",Include,Exclude
just-in-time defect identification and localization: a two-phase framework,"Yan M., Xia X., Fan Y., Hassan A.E., Lo D., Li S., Just-in-time defect identification and localization: A two-phase framework, IEEE Transactions on Software Engineering, 48, 1, pp. 82-101, (2022)",Exclude,""
learning long-term dependencies with gradient descent is difficult,"Bengio Y., Simard P.Y., Frasconi P., Learning long-term dependencies with gradient descent is difficult, IEEE Trans. Neural Networks, 5, 2, pp. 157-166, (1994)",Exclude,""
the anatomy of a large-scale hypertextual web search engine,"Brin S., Page L., The anatomy of a large-scale hypertextual web search engine, Comput. Netw., 30, 1-7, pp. 107-117, (1998)",Exclude,""
predicting defective lines using a model-agnostic technique,"Wattanakriengkrai S., Thongtanunam P., Tantithamthavorn C., Hata H., Matsumoto K., Predicting Defective Lines Using a Model-Agnostic Technique, IEEE Transactions on Software Engineering, 1, (2020)",Include,Exclude
autostyle: toward coding style feedback at scale,"CHOUDHURY R. R., YIN H., MOGHADAM J., FOX A., Autostyle: Toward coding style feedback at scale, Proceedings of the 19th ACM Conference on Computer Supported Cooperative Work and Social Computing Companion, pp. 21-24, (2016)",Exclude,""
virus propagation and patch distribution in multiplex networks: modeling,"Zhao D., Wang L., Wang Z., Et al., Virus propagation and patch distribution in multiplex networks: modeling, analysis, and optimal allocation, IEEE Trans. Inf. Forensics Secur., 14, 7, pp. 1755-1767, (2018)",Exclude,""
fault localization with nearest neighbor queries,"Fault localization with nearest neighbor queries, In Proceedings of International Conference on Automated Software Engineering., (2003)",Include,Exclude
evosuite: automatic test suite generation for object-oriented software,"Fraser G., Arcuri A., EvoSuite: Automatic test suite generation for object-oriented software, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, pp. 416-419, (2011)",Exclude,""
can an old fashioned feature extraction and a light-weight model improve vulnerability type identification performance?,"Vo H.D., Nguyen S., Can an old fashioned feature extraction and a light-weight model improve vulnerability type identification performance?, Information and Software Technology, 164, (2023)",Include,Exclude
neural embeddings of graphs in hyperbolic space,"Chamberlain B.P., Clough J., Deisenroth M.P., Neural Embeddings of Graphs in Hyperbolic Space, (2017)",Exclude,""
re-labeling imagenet: from single to multi-labels,"Yun S., Oh S.J., Heo B., Han D., Choe J., Chun S., Re-labeling imagenet: from single to multi-labels, from global to localized labels, pp. 2340-2350, (2021)",Exclude,""
characterizing the natural language descriptions in software logging statements,"He P., Chen Z., He S., Lyu M.R., Characterizing the natural language descriptions in software logging statements, 2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE). 178-189, (2018)",Exclude,""
contractward: automated vulnerability detection models for ethereum smart contracts,"Wang W., Song J., Xu G., Li Y., Wang H., Su C., ContractWard: Automated vulnerability detection models for ethereum smart contracts, IEEE Transactions on Network Science and Engineering, 8, 2, pp. 1133-1144, (2020)",Exclude,""
pydriller: python framework for mining software repositories,"Spadini D., Aniche M., Bacchelli A., PyDriller: Python framework for mining software repositories, Foundations of Software Engineering. ACM, pp. 908-911, (2018)",Exclude,""
from ui design image to gui skeleton: a neural machine translator to bootstrap mobile gui implementation,"Chen C., Su T., Meng G., Xing Z., Liu Y., From ui design image to gui skeleton: A neural machine translator to bootstrap mobile gui implementation, ICSE, pp. 665-676, (2018)",Include,Exclude
riemannian svrg: fast stochastic optimization on riemannian manifolds,"Zhang H., Reddi S.J., Sra S., Riemannian SVRG: Fast Stochastic Optimization on Riemannian Manifolds, Proceedings of the Advances in Neural Information Processing Systems, (2016)",Exclude,""
attention is all you need,"Vaswani A., Shazeer N., Parmar N., Et al., Attention is all you need, Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing Systems, pp. 5998-6008, (2017)",Exclude,""
discriminative embeddings of latent variable models for structured data,"Dai H., Dai B., Song L., Discriminative embeddings of latent variable models for structured data, Proceedings of The 33rd International Conference on Machine Learning, ser. Proceedings of Machine Learning Research, 48, pp. 2702-2711, (2016)",Exclude,""
p-mart: pattern-like micro architecture repository,"Gueheneuc Y.G., P-MARt: Pattern-like Micro Architecture Repository, (2007)",Exclude,""
how about bug-triggering paths? understanding and characterizing learning-based vulnerability detectors,"Cheng X., Nie X., Li N., Wang H., Zheng Z., Sui Y., How about bug-triggering paths? Understanding and characterizing learning-based vulnerability detectors, IEEE Trans Dependable Secure Comput, 14, 8, pp. 1-18, (2022)",Include,Exclude
quantifying performance changes with effect size confidence intervals,"Kalibera T., Jones R., Quantifying Performance Changes with Effect Size Confidence Intervals, (2020)",Exclude,""
icomment: bugs or bad comments?,"Tan L., Yuan D., Krishna G., Zhou Y., icomment: Bugs or bad comments?, Proc. 21st ACM Symp. Operating Syst. Princ., pp. 145-158, (2007)",Exclude,""
comparison of svm and some older classification algorithms in text classification tasks,"Colas F., Brazdil P., Comparison of SVM and some older classification algorithms in text classification tasks, Artificial Intelligence In Theory And Practice, Vol. 217, pp. 169-178, (2006)",Exclude,""
prioritizing maintainability defects based on refactoring recommendations,"Steidl D., Eder S., Prioritizing maintainability defects based on refactoring recommendations, 22nd International Conference on Program Comprehension, pp. 168-176, (2014)",Exclude,""
sampling in software engineering research: a critical review and guidelines,"Baltes S., Ralph P., Sampling in software engineering research: A critical review and guidelines, EMSE, 94, 27, (2022)",Exclude,""
deep learning on code with an unbounded vocabulary,"Cvitkovic M., Singh B., Anandkumar A., Deep learning on code with an unbounded vocabulary, CAV, (2018)",Include,Include
aspect-level drug reviews sentiment analysis based on double bigru and knowledge transfer,"Han Y., Liu M., Jing W., Aspect-level drug reviews sentiment analysis based on double BiGRU and knowledge transfer, IEEE Access, 8, pp. 21314-21325, (2020)",Exclude,""
nvd analysis 2022: a call to action on software supply chain security,"NVD Analysis 2022: A Call to Action on Software Supply Chain Security, (2022)",Exclude,""
codes: mining source code descriptions from developers discussions,"Vassallo C., Panichella S., Di Penta M., Canfora G., Codes: Mining source code descriptions from developers discussions, Proceedings of the 22nd International Conference on Program Comprehension, pp. 106-109, (2014)",Exclude,""
a novel co-evolutionary approach to automatic software bug fixing,"Arcuri A., Yao X., A novel co-evolutionary approach to automatic software bug fixing, Evolutionary Computation, pp. 162-168, (2008)",Exclude,""
large-scale identification of malicious singleton files,"Li B., Roundy K., Gates C., Vorobeychik Y., Large-scale identification of malicious singleton files, Proceedings of the Seventh ACM on Conference on Data and Application Security and Privacy, pp. 227-238, (2017)",Exclude,""
evaluating network embedding techniques’ performances in software bug prediction,"Qu Y., Yin H., Evaluating network embedding techniques’ performances in software bug prediction, Empir. Softw. Eng., 26, 4, pp. 1-44, (2021)",Include,Include
"an initial exploration of the ""good first issue"" label for newcomer developers","Willem David Alderliesten J., Zaidman A., An Initial Exploration of the ""Good First Issue"" Label for Newcomer Developers, CHASE, pp. 117-118, (2021)",Exclude,""
modeling and discovering vulnerabilities with code property graphs,"Yamaguchi F., Golde N., Arp D., Rieck K., Modeling and discovering vulnerabilities with code property graphs, Proc. IEEE Symp. Secur. Privacy, pp. 590-604, (2014)",Include,Include
boa: a language and infrastructure for analyzing ultra-large-scale software repositories,"Dyer R., Nguyen H.A., Rajan H., Nguyen T.N., Boa: A language and infrastructure for analyzing ultra-large-scale software repositories, Proceedings of the 2013 International Conference On Software Engineering, pp. 422-431, (2013)",Exclude,""
introduction to automata theory,"Hopcroft J.E., Motwani R., Ullman J.D., Introduction to automata theory, languages, and computation, (2007)",Exclude,""
type analysis for javascript.,"Jensen S.H., Moller A., Thiemann P., Type Analysis for Javascript., (2009)",Include,""
binsequence: fast,"Huang H., Youssef A.M., Debbabi M., Binsequence: Fast, accurate and scalable binary code reuse detection, Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security (AsiaCCS), (2017)",Include,""
supervised speech separation based on deep learning: an overview,"Wang D., Chen J., Supervised speech separation based on deep learning: an overview, IEEE/ACM Trans Audio Speech Lang Process, 26, 10, pp. 1702-1726, (2018)",Exclude,""
codesmell detection as a bilevel problem,"Sahin D., Kessentini M., Bechikh S., Deb K., Codesmell detection as a bilevel problem, ACM Trans. Softw. Eng. Methodol, 24, 1, pp. 61-644, (2014)",Exclude,""
the plastic surgery hypothesis,"Barr E.T., Brun Y., Devanbu P., Harman M., Sarro F., The plastic surgery hypothesis, Foundations of Software Engineering. ACM, pp. 306-317, (2014)",Include,""
static detection of control-flow-related vulnerabilities using graph embedding,"Cheng X., Wang H., Hua J., Zhang M., Xu G., Yi L., Sui Y., Static detection of control-flow-related vulnerabilities using graph embedding, 2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS’19), pp. 41-50, (2019)",Include,Include
smack: decoupling source language details from verifier implementations,"Rakamaric Z., Emmi M., SMACK: Decoupling source language details from verifier implementations, CAV, LNCS, 8559, pp. 106-113, (2014)",Exclude,""
a new subspace clustering strategy for ai-based data analysis in iot system,"Cui Z., Jing X., Zhao P., Zhang W., Chen J., A new subspace clustering strategy for ai-based data analysis in iot system, IEEE Internet of Things Journal, 8, 16, pp. 12540-12549, (2021)",Exclude,""
an empirical study of security warnings from static application security testing tools,"Aloraini B., Nagappan M., German D.M., Hayashi S., Higo Y., An empirical study of security warnings from static application security testing tools, Journal of Systems and Software, 158, (2019)",Exclude,""
can knowledge of technical debt help identify software vulnerabilities?,"Nord R.L., Ozkaya I., Schwartz E.J., Shull F., Kazman R., Can Knowledge of Technical Debt Help Identify Software Vulnerabilities?, 9th Workshop on Cyber Security Experimentation and Test (CSET 16), (2016)",Exclude,""
explained: how big is the damage caused by open source software log4j vulnerability?,"Raveendran S., Explained: How Big Is the Damage Caused by Open Source Software Log4J Vulnerability?, (2021)",Exclude,""
representation learning for information diffusion through social networks: an embedded cascade model,"Bourigault S., Lamprier S., Gallinari P., Representation learning for information diffusion through social networks: An embedded cascade model, Proceedings of the Ninth ACM International Conference On Web Search and Data Mining, Ser. WSDM '16, pp. 573-582, (2016)",Exclude,""
do automatically generated unit tests find real faults? an empirical study of effectiveness and challenges,"Shamshiri S., Just R., Rojas J.M., Fraser G., McMinn P., Arcuri A., Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges (T), 2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 201-211, (2015)",Exclude,""
wala documentation,WALA Documentation,Exclude,""
inc secure software,"Inc Secure Software, (2014)",Include,""
translating embeddings for modeling multi-relational data,"Bordes A., Usunier N., Garcia-Duran A., Weston J., Yakhnenko O., Translating embeddings for modeling multi-relational data, Advances in Neural Information Processing Systems 26: 27th Annual Conference on Neural Information Processing Systems 2013, pp. 2787-2795, (2013)",Exclude,""
the proof and measurement of association between two things,"Spearman C., The proof and measurement of association between two things, Am. J. Psychol., 15, pp. 72-101, (1904)",Exclude,""
how can i improve my app? classifying user reviews for software maintenance and evolution,"Panichella S., Di Sorbo A., Guzman E., Aaron Visaggio C., Canfora G., Gall H.C., How can I improve my app? Classifying user reviews for software maintenance and evolution, Proceedings of the IEEE International Conference on Software Maintenance and Evolution, pp. 281-290, (2015)",Exclude,""
a parallel corpus of python functions and documentation strings for automated code documentation and code generation,"Barone A.V.M., Sennrich R., A parallel corpus of python functions and documentation strings for automated code documentation and code generation, Proceedings of the Eighth International Joint Conference on Natural Language Processing, IJCNLP 2017, pp. 314-319, (2017)",Exclude,""
virustotal: r client for the virustotal api,"virustotal: R Client for the VirusTotal API, (2017)",Exclude,""
two modifications of cnn,"Tomek I., Two modifications of CNN, Ieee Transactions on Systems, Man, and Cybernetics, 6, 11, pp. 769-772, (1976)",Exclude,""
cppcheck,"",Exclude,""
automated patch correctness assessment: how far are we?,"Wang S., Wen M., Lin B., Wu H., Qin Y., Zou D., Mao X., Jin H., Automated patch correctness assessment: How far are we?, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering., pp. 968-980, (2020)",Exclude,""
who should review this change?: putting text and file location analyses together for more accurate recommendations,"Xia X., Lo D., Wang X., Yang X., Who should review this change?: Putting text and file location analyses together for more accurate recommendations, 2015 IEEE International Conference on Software Maintenance and Evolution (ICSME), pp. 261-270, (2015)",Exclude,""
linux auditing: overhead and adaptation,"Zeng L., Xiao Y., Chen H., Linux auditing: Overhead and adaptation, Proceedings of the International Conference on Communications, pp. 7168-7173, (2015)",Exclude,""
2021. learning to find naming issues with big code and small supervision,"He J., Lee C., Raychev V., Vechev M., 2021. Learning to Find Naming Issues with Big Code and Small Supervision, pp. 296-311",Exclude,""
predicting the precise number of software defects: are we there yet?,"Yu X., Keung J., Xiao Y., Feng S., Li F., Dai H., Predicting the precise number of software defects: Are we there yet?, Inf. Softw. Technol., 146, (2022)",Exclude,""
on end-to-end program generation from user intention by deep neural networks,"Mou L., Men R., Li G., Zhang L., Jin Z., On end-to-end program generation from user intention by deep neural networks, (2015)",Include,Exclude (Pre-print)
generating hints for programming problems using intermediate output,"PEDDYCORD B., HICKS A., BARNES T., Generating hints for programming problems using intermediate output, Proceedings of the 7th International Conference on Educational Data Mining, pp. 92-98, (2014)",Exclude,""
knowledge extraction from on-line open source bug tracking systems to predict bug-fixing time,"Ardimento P., Dinapoli A., Knowledge Extraction from On-Line Open Source Bug Tracking Systems to Predict Bug-Fixing Time, Proceedings of the 7th International Conference on Web Intelligence, Mining and Semantics (WIMS '17)., (2017)",Exclude,""
identifying reasons for software changes using historic databases.,"Mockus A., Votta L.G., Identifying reasons for software changes using historic databases., Icsm, pp. 120-130, (2000)",Exclude,""
lstm: a search space odyssey,"Greff K., Srivastava R.K., Koutnik J., Steunebrink B.R., Schmidhuber J., LSTM: A search space odyssey, IEEE Trans. Neural Netw. Learn. Syst., 28, 10, pp. 2222-2232, (2016)",Exclude,""
twitter spam detection: survey of new approaches and comparative study,"Wu T., Wen S., Xiang Y., Zhou W., Twitter spam detection: Survey of new approaches and comparative study, Comput. Secur., 76, pp. 265-284, (2018)",Exclude,""
evilcoder: automated bug insertion,"Pewny J., Holz T., Evilcoder: Automated bug insertion, Proceedings of the 32Nd Annual Conference on Computer Security Applications, Pp. 214–225, ACSAC ’16, New York, NY, USA, (2016)",Exclude,""
refactoring in large software projects: per-forming complex restructurings successfully,"Lippert M., Roock S., Refactoring in large software projects: Per-forming complex restructurings successfully, (2006)",Exclude,""
fitness functions and transformations in an automated process,"Sukur N., Pracner D., Budimac Z., Fitness functions and transformations in an automated process, SQAMIA 2019, 8Th Workshop of Software Quality, Analysis, Monitoring, Improvement, and Applications, pp. 17-011710, (2019)",Exclude,""
an analysis of machine learning algorithms for condensing reverse engineered class diagrams,"Osman M.H., Chaudron M.R.V., Van Der Putten P., An analysis of machine learning algorithms for condensing reverse engineered class diagrams, Proc. IEEE Int. Conf. Softw. Maintenance, pp. 140-149, (2013)",Exclude,""
software assurance reference dataset (sard,Software Assurance Reference Dataset (SARD,Exclude,""
an empirical study on the maintenance of source code clones,"Thummalapenta S., Cerulo L., Aversano L., Di Penta M., An empirical study on the maintenance of source code clones, Empir. Softw. Eng., 15, pp. 1-34, (2010)",Exclude,""
do bugs foreshadow vulnerabilities? a study of the chromium project,"Camilo F., Meneely A., Nagappan M., Do bugs foreshadow vulnerabilities? A study of the chromium project, 2015 IEEE/ACM 12th Working Conference On Mining Software Repositories, pp. 269-279, (2015)",Exclude,""
learning programs from noisy data,"Raychev V., Bielik P., Vechev M., Krause A., Learning programs from noisy data, ACM SIGPLAN Notices, 51, 1, pp. 761-774, (2016)",Exclude,""
schematic pseudocode for program constructs and its computer automation by schemacode,"Robillard P., Schematic pseudocode for program constructs and its computer automation by SCHEMACODE, Commun ACM, 29, pp. 1072-1089, (1986)",Exclude,""
mining the execution history of a software system to infer the best time for its adaptation,"Canavera K.R., Esfahani N., Malek S., Mining the execution history of a software system to infer the best time for its adaptation, Proceedings of the Acm Sigsoft 20th International Symposium on the Foundations of Software Engineering, (2012)",Exclude,""
rectified linear units improve restricted boltzmann machines,"Nair V., Hinton G.E., Rectified linear units improve restricted boltzmann machines, Proceedings of the 27th International Conference on International Conference on Machine Learning., pp. 807-814, (2010)",Exclude,""
effectiveness of exploring historical commits for developer recommendation: an empirical study,"Sun X., Yang H., Leung H., Li B., Li H.J., Liao L., Effectiveness of exploring historical commits for developer recommendation: An empirical study, Front. Comp. Sci., 12, 3, pp. 528-544, (2018)",Exclude,""
automatically detecting vulnerable websites before they turn malicious,"Soska K., Christin N., Automatically detecting vulnerable websites before they turn malicious, Proc. Usenix Secur. Symp., pp. 625-640, (2014)",Exclude,""
a survey of software refactoring,"Mens T., Tourwe T., A survey of software refactoring, IEEE Transactions on Software Engineering, 30, 2, pp. 126-139, (2004)",Exclude,""
improved automatic summarization of subroutines via attention to file context,"Haque S., LeClair A., Wu L., McMillan C., Improved automatic summarization of subroutines via attention to file context, Proceedings of the 17th International Conference on Mining Software Repositories, pp. 300-310, (2020)",Exclude,""
convolutional neural networks over tree structures for programming language processing,"Mou L., Li G., Zhang L., Wang T., Jin Z., Convolutional Neural Networks over Tree Structures for Programming Language Processing, Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence, pp. 1287-1293, (2016)",Include,Include
detecting self-mutating malware using control-flow graph matching,"Bruschi D., Martignoni L., Monga M., Detecting self-mutating malware using control-flow graph matching, Proc. Int. Conf. Detection Intrusions Malware Vulnerability Assessment, Springer, pp. 129-143, (2006)",Include,Include
learning to fix build errors with graph2diff neural networks,"Tarlow D., Moitra S., Rice A., Chen Z., Manzagol P., Sutton C., Aftandilian E., Learning to fix build errors with graph2diff neural networks, ICSE '20: 42nd International Conference on Software Engineering, pp. 19-20, (2020)",Include,Include
layer normalization,"Ba L.J., Kiros J.R., Hinton G.E., Layer normalization, CoRR, (2016)",Exclude,""
exceptions and aspects: the devil is in the details,"Filho F.C., Cacho N., Figueiredo E., Maranhao R., Garcia A., Rubira C.M.F., Exceptions and aspects: The devil is in the details, FSE, pp. 152-162, (2006)",Exclude,""
mutation testing advances: an analysis and survey,"Papadakis M., Kintis M., Zhang J., Jia Y., Le Traon Y., Harman M., Mutation testing advances: An analysis and survey, Advances in Computers., 112, pp. 275-378, (2019)",Exclude,""
stochastic gradient descent on riemannian manifolds,"Bonnabel S., Stochastic Gradient Descent on Riemannian Manifolds, IEEE Trans. Autom. Control, 58, pp. 2217-2229, (2013)",Exclude,""
resilience and vulnerability in supply chain: literature review,"Elleuch H., Dafaoui E., Elmhamedi A., Chabchoub H., Resilience and vulnerability in supply chain: literature review, IFAC-PapersOnLine, 49, 12, pp. 1448-1453, (2016)",Exclude,""
h2 database engine,"H2 Database Engine, (2022)",Exclude,""
network versus code metrics to predict defects: a replication study,"Premraj R., Herzig K., Network versus code metrics to predict defects: A replication study, Proc. Int. Symp. Empirical Softw. Eng. Meas., pp. 215-224, (2011)",Exclude,""
query expansion based on crowd knowledge for code search,"Nie L., Jiang H., Ren Z., Sun Z., Li X., Query expansion based on crowd knowledge for code search, IEEE Transactions on Services Computing, 9, 5, pp. 771-783, (2016)",Exclude,""
on the localness of software,"Tu Z., Su Z., Devanbu P., On the localness of software, : Proceedings of the 22Nd ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE 2014)., pp. 269-280, (2014)",Exclude,""
summarizing software artifacts: a literature review,"Nazar N., Hu Y., Jiang H., Summarizing software artifacts: A literature review, J. Comput. Sci. Technol, 31, 5, pp. 883-909, (2016)",Exclude,""
combining symbolic expressions and blackbox function evaluations in neural programs,"Arabshahi F., Singh S., Anandkumar A., Combining symbolic expressions and blackbox function evaluations in neural programs, Proceedings of the International Conference on Learning Representations (ICLR'18), (2018)",Exclude,""
itemrank: a random-walk based scoring algorithm for recommender engines,"Gori M., Pucci A., Itemrank: A random-walk based scoring algorithm for recommender engines, Proc. 20th Int. Joint Conf. Artif. Intell., pp. 2766-2771, (2007)",Exclude,""
generating natural language summaries for crosscutting source code concerns,"Rastkar S., Murphy G.C., Bradley A.W., Generating natural language summaries for crosscutting source code concerns, Icsm, pp. 103-112, (2011)",Exclude,""
the definitive antlr 4 reference.,"Parr T., The Definitive Antlr 4 Reference., (2013)",Exclude,""
deep code comment generation with hybrid lexical and syntactical information,"Hu X., Li G., Xia X., Lo D., Jin Z., Deep code comment generation with hybrid lexical and syntactical information, Empir. Softw. Eng., 25, 3, pp. 2179-2217, (2020)",Include,Include
extensions of recurrent neural network language model,"Mikolov T., Kombrink S., Burget L., Cernocky J., Khudanpur S., Extensions of recurrent neural network language model, Proc. Ieee Int. Conf. Acoust., Speech Signal Process. (ICASSP), pp. 5528-5531, (2011)",Exclude,""
bidirectional lstm-crf models for sequence tagging,"Huang Z., Xu W., Yu K., Bidirectional LSTM-CRF models for sequence tagging, (2015)",Exclude,""
on learning meaningful code changes via neural machine translation,"Tufano M., Pantiuchina J., Watson C., Bavota G., Poshyvanyk D., On learning meaningful code changes via neural machine translation, ICSE, pp. 25-36, (2019)",Include,Exclude
data-driven cybersecurity incident prediction: a survey,"Sun N., Zhang J., Rimba P., Gao S., Zhang L.Y., Xiang Y., Data-driven cybersecurity incident prediction: A survey, Ieee Commun. Surveys Tuts., 21, 2, pp. 1744-1772, (2019)",Exclude,""
scan synthesis for one-hot signals,"Mitra S., Avra L.J., McCluskey E.J., Scan synthesis for one-hot signals, Proceedings International Test Conference 1997, pp. 714-722, (1997)",Exclude,""
what does a textcnn learn?[j],"Gong L., Ji R., What does a TextCNN learn?[J], (2018)",Exclude,""
enhancing the unified features to locate buggy files by exploiting the sequential nature of source code,"Huo X., Li M., Enhancing the unified features to locate buggy files by exploiting the sequential nature of source code, Proceedings of the 26th International Joint Conference on Artificial Intelligence (IJCAI'17)., pp. 1909-1915, (2017)",Exclude,""
another look at measures of forecast accuracy,"HYNDMAN R. J., KOEHLER A. B., Another look at measures of forecast accuracy, International Journal of Forecasting, 22, 4, pp. 679-688, (2006)",Exclude,""
buggraph: differentiating source-binary code similarity with graph triplet-loss network,"Ji Y., Cui L., Huang H.H., Buggraph: Differentiating source-binary code similarity with graph triplet-loss network, Proceedings of the 2021 ACM Asia Conference on Computer and Communications Security, pp. 702-715, (2021)",Exclude,""
code completion with neural attention and pointer networks,"Li J., Wang Y., Lyu M.R., King I., Code completion with neural attention and pointer networks, Proceedings of the twenty-seventh international joint conference on artificial intelligence, IJCAI, pp. 4159-4165, (2018)",Include,Include
abstractive text summarization using sequence-to-sequence rnns and beyond,"Nallapati R., Zhou B., Gulcehre C., Xiang B., Et al., Abstractive text summarization using sequence-to-sequence rnns and beyond, (2016)",Include,Exclude
the hawthorne effect: a reconsideration of the methodological artifact,"Adair J.G., The hawthorne effect: A reconsideration of the methodological artifact, Journal of applied psychology, 69, (1984)",Exclude,""
page ranking based on number of visits of links of web page,"Kumar G., Duhan N., Sharma A.K., Page ranking based on number of visits of links of web page, Proc. 2nd Int. Conf. Comput. Commun. Technol., pp. 11-14, (2011)",Exclude,""
malicious http request detection using code-level convolutional neural network,"Jemal I., Haddar M.A., Cheikhrouhou O., Mahfoudhi A., Malicious http request detection using code-level convolutional neural network, Risks and Security of internet and systems - 15th International Conference, CRiSIS 2020, Paris, France, November 4-6, 2020, Revised Selected Papers, pp. 317-324, (2020)",Exclude,""
enhancing developer recommendation with supplementary information via mining historical commits,"Sun X., Yang H., Xia X., Li B., Enhancing developer recommendation with supplementary information via mining historical commits, J. Syst. Softw., 134, pp. 355-368, (2017)",Exclude,""
a learning algorithm for optimizing continuous integration development and testing practice,"Marijan D., Gotlieb A., Liaaen M., A learning algorithm for optimizing continuous integration development and testing practice, Softw. Pract. Exp., 49, 2, pp. 192-213, (2019)",Exclude,""
empirical study of transformers for source code,"Chirkova N., Troshin S., Empirical study of transformers for source code, Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 703-715, (2021)",Exclude,""
contest 1027c-minimum value rectangle,Contest 1027C-Minimum Value Rectangle,Exclude,""
generating effective software obfuscation sequences with reinforcement learning,"Wang H., Wang S., Xu D., Zhang X., Liu X., Generating effective software obfuscation sequences with reinforcement learning, IEEE Trans Depend Secure Comput, (2020)",Include,Exclude
modeling social coding dynamics with sampled historical data,"Bidoki N.H., Schiappa M., Sukthankar G., Garibay I., Modeling Social Coding Dynamics With Sampled Historical Data, Online Social Networks and Media, 16, 2020",Exclude,""
detecting false alarms from automatic static analysis tools: how far are we?,"Kang H.J.K.L.D., Detecting false alarms from automatic static analysis tools: How far are we?, Proceedings of the 44Th International Conference on Software Engineering (ICSE ’22)., pp. 698-709, (2022)",Exclude,""
t. j. watson libraries for analysis (wala,"T. J. Watson Libraries for Analysis (WALA, (2006)",Exclude,""
progress networks as a tool for analysing student programming difficulties,"MCBROOM J., PAASSEN B., JEFFRIES B., KOPRINSKA I., YACEF K., Progress networks as a tool for analysing student programming difficulties, Proceedings of the Twenty-Third Australasian Conference on Computing Education, pp. 158-167, (2021)",Include,Exclude
convolutional sequence to sequence learning,"Gehring Jonas, Auli Michael, Grangier David, Yarats Denis, Dauphin Yann N., Convolutional sequence to sequence learning, Proceedings of the 34th International Conference on Machine Learning, volume 70 of Proceedings of Machine Learning Research, pp. 1243-1252, (2017)",Exclude,""
robust spammer detection using collaborative neural network in internet-of-things applications,"Guo Z., Shen Y., Bashir A.K., Imran M., Kumar N., Zhang D., Yu K., Robust spammer detection using collaborative neural network in internet-of-things applications, IEEE Internet of Things Journal, 8, 12, pp. 9549-9558, (2021)",Exclude,""
malicious web request detection using character-level cnn,"Rong W., Zhang B., Lv X., Malicious web request detection using character-level CNN, Machine learning for cyber security - second international conference, ML4CS 2019, Xi'An, China, september 19-21, 2019, Proceedings, pp. 6-16, (2019)",Exclude,""
a comparison of the quality of data-driven programming hint generation algorithms,"PRICE T. W., DONG Y., ZHI R., PAASSEN B., LYTLE N., CATETE V., BARNES T., A comparison of the quality of data-driven programming hint generation algorithms, International Journal of Artificial Intelligence in Education, 29, 3, pp. 368-395, (2019)",Exclude,""
malware analysis with graph kernels and support vector machines,"Wagner C., Wagener G., State R., Engel T., Malware analysis with graph kernels and support vector machines, MALWARE, pp. 63-68, (2009)",Include,Exclude
threshold extraction framework for software metrics,"Alqmase M., Alshayeb M., Ghouti L., Threshold extraction framework for software metrics, J. Comput. Sci. Technol., 34, 5, pp. 1063-1078, (2019)",Exclude,""
learning representations by back-propagating errors,"Rumelhart David E, Hinton Geoffrey E, Williams Ronald J, Learning representations by back-propagating errors, nature, 323, 6088, pp. 533-536, (1986)",Exclude,""
collective personalized change classification with multiobjective search,"Xia X., Lo D., Wang X., Yang X., Collective personalized change classification with multiobjective search, IEEE Trans. Reliab., 65, 4, pp. 1810-1829, (2016)",Exclude,""
vuldeepecker: a deep learning-based system for vulnerability detection. proceedings of the network and distributed systems security (ndss) symposium 2018,"Li Z., Zou D., Xu S., Et al., Vuldeepecker: a deep learning-based system for vulnerability detection. Proceedings of the Network and Distributed Systems Security (NDSS) Symposium 2018",Include,Include
identification of extract method refactoring opportunities for the decomposition of methods,"Tsantalis N., Chatzigeorgiou A., Identification of extract method refactoring opportunities for the decomposition of methods, Journal of Systems and Software, 84, pp. 1757-1782, (2011)",Exclude,""
intelligent mining vulnerabilities in python code snippets,"Guo W., Huang C., Niu W., Fang Y., Intelligent mining vulnerabilities in python code snippets, Journal of Intelligent & Fuzzy Systems, 41, 2, pp. 3615-3628, (2021)",Exclude,""
graph grammars and global program data flow analysis,"Farrow R., Kennedy K., Zucconi L., Graph grammars and global program data flow analysis, 17th Annual Symposium on Foundations of Computer Science (sfcs 1976), pp. 42-56, (1976)",Include,Exclude
remaining trouble spots with computational thinking,"DENNING P. J., Remaining trouble spots with computational thinking, Communications of the ACM, 60, 6, pp. 33-39, (2017)",Exclude,""
using an rbf neural network to locate program bugs,"Wong W. E., Shi Y., Qi Y., Golden R., Using an rbf neural network to locate program bugs, 2008 19th International Symposium on Software Reliability Engineering (ISSRE). IEEE, pp. 27-36, (2008)",Include,Exclude
gate-variants of gated recurrent unit (gru) neural networks,"Dey R., Salem F.M., Gate-variants of gated recurrent unit (gru) neural networks, 2017 IEEE 60th International Midwest Symposium on Circuits and Systems (MWSCAS), pp. 1597-1600, (2017)",Exclude,""
cppchecker,"Anon M., Cppchecker, (2022)",Exclude,""
recognizing behavioral patterns atruntime using finite automata,"Wendehals L., Orso A., Recognizing Behavioral Patterns Atruntime Using Finite Automata, Proceedings of the 2006 International Workshop on Dynamic Systems Analysis (WODA '06)., pp. 33-40, (2006)",Exclude,""
replication package,"Replication package, (2020)",Exclude,""
optimal transport for applied mathematicians,"Santambrogio F., Optimal transport for applied mathematicians, Progress in Nonlinear Differential Equations & Their Applications, pp. 99-102, (2015)",Exclude,""
codit: code editing with treebased neural models,"Chakraborty S., Ding Y., Allamanis M., Ray B., CODIT: Code editing with treebased neural models, IEEE Transactions on Software Engineering, (2020)",Include,Include
giraph: large-scale graph processing on hadoop,"Giraph: Large-Scale Graph Processing on Hadoop, (2020)",Include,Exclude
contest 4c-registration,Contest 4C-Registration,Exclude,""
an adjusted recommendation list size approach for users’ multiple item preferences,"Peker S., Kocyigit A., An adjusted recommendation list size approach for users’ multiple item preferences, Artificial Intelligence: Methodology, Systems, and Applications, pp. 310-319, (2016)",Exclude,""
bugs as deviant behavior: a general approach to inferring errors in systems code,"Engler D., Yu Chen D., Hallem S., Chou A., Chelf B., Bugs as deviant behavior: A general approach to inferring errors in systems code, ACM SIGOPS Operating Systems Review, 35, 5, pp. 57-72, (2001)",Exclude,""
implicit session contexts for next-item recommendations,"Oh S., Bhardwaj A., Han J., Kim S., Rossi R.A., Kumar S., Implicit Session Contexts for Next-Item Recommendations, CIKM, pp. 4364-4368, (2022)",Exclude,""
code property graph-based vulnerability dataset generation for source code detection. in guangquan xu,"Guan Z., Wang X., Xin W., Wang J., Code property graph-based vulnerability dataset generation for source code detection. in Guangquan Xu, Kaitai Liang, and Chunhua Su, editors, Frontiers in Cyber Security, pp. 584-591, (2020)",Include,Exclude
machine-learning-guided typestate analysis for static use-after-free detection,"Yan H., Sui Y., Chen S., Xue J., Machine-learning-guided typestate analysis for static use-after-free detection, Proceedings of the 33rd Annual Computer Security Applications Conference (ACSAC’17), pp. 42-54, (2017)",Exclude,""
overcode: visualizing variation in student solutions to programming problems at scale,"GLASSMAN E. L., SCOTT J., SINGH R., GUO P. J., MILLER R. C., Overcode: Visualizing variation in student solutions to programming problems at scale, ACM Transactions on Computer-Human Interaction, 22, 2, (2015)",Exclude,""
automatic detection and correction of web application vulnerabilities using data mining to predict false positives,"Medeiros I., Neves N.F., Correia M., Automatic detection and correction of web application vulnerabilities using data mining to predict false positives, Proceedings of The 23rd International Conference on World Wide Web, Ser. WWW’14, pp. 63-74, (2014)",Exclude,""
leveraging textual properties of bug reports to localize relevant source files,"Gharibi R., Rasekh A.H., Sadreddini M.H., Fakhrahmad S.M., Leveraging textual properties of bug reports to localize relevant source files, Inf. Process. Manage., 54, 6, pp. 1058-1076, (2018)",Exclude,""
a systematic review of machine learning techniques for software fault prediction,"Malhotra R., A systematic review of machine learning techniques for software fault prediction, Applied Soft Computing, 27, pp. 504-518, (2015)",Exclude,""
leveraging code generation to improve code retrieval and summarization via dual learning,"Ye W., Xie R., Zhang J., Hu T., Wang X., Zhang S., Leveraging code generation to improve code retrieval and summarization via dual learning, Proceedings of the Web Conference 2020, pp. 2309-2319, (2020)",Include,Exclude
condensing class diagrams with minimal manual labeling cost,"Yang X., Lo D., Xia X., Sun J., Condensing class diagrams with minimal manual labeling cost, 2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC, 1, pp. 22-31",Exclude,""
[journal first] are fix-inducing changes a moving target?: a longitudinal case study of just-in-time defect prediction,"McIntosh S., Kamei Y., [Journal first] are fix-inducing changes a moving target?: A longitudinal case study of just-in-time defect prediction, 2018 IEEE/ACM 40th International Conference On Software Engineering, ICSE, (2018)",Exclude,""
statically discovering high-order taint style vulnerabilities in os kernels,"Zhang H., Chen W., Hao Y., Li G., Zhai Y., Zou X., Qian Z., Statically discovering high-order taint style vulnerabilities in os kernels, Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security (CCS), (2021)",Exclude,""
pinpoint: fast and precise sparse value flow analysis for million lines of code,"Shi Q., Xiao X., Wu R., Zhou J., Fan G., Zhang C., Pinpoint: Fast and precise sparse value flow analysis for million lines of code, Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2018, pp. 693-706, (2018)",Exclude,""
a survey of combinatorial testing,"Nie C., Hareton L., A survey of combinatorial testing, ACM Comput Surv, 43, 2, (2011)",Exclude,""
contest 230b-tprime,Contest 230B-TPrime,Exclude,""
architecture reconstruction.,"Koschke R., Architecture Reconstruction., pp. 140-173, (2009)",Include,""
control flow analysis,"Allen F.E., Control flow analysis, Proceedings of a Symposium on Compiler Optimization, (1970)",Include,""
empirical review of automated analysis tools on 47,"Durieux T., Ferreira J.F., Abreu R., Cruz P., Empirical review of automated analysis tools on 47,587 ethereum smart contracts, the ACM/IEEE 42nd International Conference on Software Engineering, 2020, pp. 530-541",Exclude,""
prototypical fine-tuning: towards robust performance under varying data sizes,"Jin Y., Wang X., Hao Y., Sun Y., Xie X., Prototypical Fine-tuning: Towards Robust Performance Under Varying Data Sizes, AAAI, (2023)",Exclude,""
adaptive mixtures of local experts,"Jacobs R.A., Jordan M.I., Nowlan S.J., Hinton G.E., Adaptive mixtures of local experts, Neural Comput, 3, 1, pp. 79-87, (2012)",Exclude,""
nscaching: simple and efficient negative sampling for knowledge graph embedding,"Zhang Y., Yao Q., Shao Y., Chen L., Nscaching: Simple and efficient negative sampling for knowledge graph embedding, 2019 IEEE 35th International Conference on Data Engineering (ICDE), pp. 614-625, (2019)",Exclude,""
link prediction in complex networks: a survey,"Lu L., Zhou T., Link prediction in complex networks: A survey, Physica A, 390, 6, (2011)",Exclude,""
vulnerability detection with finegrained interpretations,"Li Y., Wang S., Nguyen T.N., Vulnerability Detection with Finegrained Interpretations, The 29th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, (2021)",Exclude,""
the cost of developing large-scale software,"Wolverton R.W., The cost of developing large-scale software, IEEE Trans. Comput., 23, 6, pp. 615-636, (1974)",Exclude,""
a survey of cyber attack detection strategies,"Raiyn J., Et al., A survey of cyber attack detection strategies, Int. J. Secur. Appl., 8, 1, pp. 247-256, (2014)",Exclude,""
bp-transformer: modelling long-range context via binary partitioning,"Ye Z., Guo Q., Gan Q., Qiu X., Zhang Z., Bp-transformer: Modelling long-range context via binary partitioning, (2019)",Exclude,""
learning to repair compilation errors,"Mesbah A., Rice A., Johnston E., Glorioso N., Aftandilian E., DeepDelta: Learning to repair compilation errors, Foundations of Software Engineering. ACM, pp. 925-936, (2019)",Exclude,""
marfcat: fast code analysis for defects and vulnerabilities,"Mokhov S.A., Paquet J., Debbabi M., MARFCAT: Fast code analysis for defects and vulnerabilities, 2015 IEEE 1st International Workshop on Software Analytics, pp. 35-38, (2015)",Exclude,""
software model checking for people who love automata,"Heizmann M., Hoenicke J., Podelski A., Software model checking for people who love automata, CAV, LNCS, 8044, pp. 36-52, (2013)",Exclude,""
imbalanced text classification: a term weighting approach,"Liu Y., Loh H.T., Sun A., Imbalanced text classification: A term weighting approach, Expert Syst. Appl., 36, 1, pp. 690-701, (2009)",Exclude,""
strategy selection for software verification based on boolean features—a simple but effective approach,"Beyer D., Dangl M., Strategy selection for software verification based on boolean features—a simple but effective approach, Isola, LNCS, 11245, pp. 144-159, (2018)",Exclude,""
2015 defense of soundiness:amanifesto. commun acm,"Livshits B., Sridharan M., Smaragdakis Y., Lhotak O., Nelson Amaral J., Evan Chang B., Guyer S.Z., Khedker U.P., Moller A., Vardoulakis D., 2015 Defense of Soundiness:AManifesto. Commun ACM, 58, 2, pp. 44-46, (2015)",Exclude,""
antlr (another tool for language recognition),"Antlr (ANother Tool for Language Recognition), (2019)",Exclude,""
towards the use of the readily available tests from the release pipeline as performance tests. are we there yet?,"Ding Z., Chen J., Shang W., Towards the use of the readily available tests from the release pipeline as performance tests. Are we there yet?, Proceedings of the 42nd International Conference on Software Engineering, (2020)",Exclude,""
positive and unlabeled learning for detecting software functional clones with adversarial training,"Wei H., Li M., Positive and unlabeled learning for detecting software functional clones with adversarial training, Proceedings of the 27th International Joint Conference on Artificial Intelligence (IJCAI'18)., pp. 2840-2846, (2018)",Exclude,""
identifying redundancy in source code using fingerprints,"Howard Johnson J., Identifying redundancy in source code using fingerprints, Proceedings of the 1993 Conference of the Centre for Advanced Studies on Collaborative Research: Software Engineering - Volume 1 (CASCON’93), pp. 171-183, (1993)",Exclude,""
scalable graph-based bug search for firmware images,"Feng Q., Zhou R., Xu C., Cheng Y., Testa B., Yin H., Scalable graph-based bug search for firmware images, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS), (2016)",Exclude,""
be more familiar with our enemies and pave the way forward: a review of the roles bugs played in software failures,"Wong W. E., Li X., Laplante P. A., Be more familiar with our enemies and pave the way forward: A review of the roles bugs played in software failures, Journal of Systems and Software, 133, pp. 68-94, (2017)",Exclude,""
a software assurance reference dataset: thousands of programs with known bugs,"Black P., A software assurance reference dataset: Thousands of programs with known bugs, J. Res. Nat. Inst. Standards Technol., 123, pp. 1-3, (2018)",Exclude,""
deep learning based program generation from requirements text: are we there yet?,"Liu H., Shen M., Zhu J., Niu N., Li G., Zhang L., Deep learning based program generation from requirements text: Are we there yet?, IEEE Trans. Softw. Eng., (2020)",Include,Exclude
semantic learning and emulation based cross-platform binary vulnerability seeker,"Gao J., Jiang Y., Liu Z., Yang X., Wang C., Jiao X., Yang Z., Sun J., Semantic learning and emulation based cross-platform binary vulnerability seeker, IEEE Transactions on Software Engineering, pp. 1-1, (2019)",Exclude,""
striking a balance: pruning false-positives from static call graphs,"Utture A., Liu S., Kalhauge C.G., Palsberg J., Striking a balance: pruning false-positives from static call graphs, Proceedings of the 44Th International Conference on Software Engineering (ICSE ’22), pp. 2043-2055, (2022)",Include,Include
theano: a python framework for fast computation of mathematical expressions,"Theano: A python framework for fast computation of mathematical expressions, Arxiv, 1605, (2016)",Exclude,""
satune: study-driven auto-tuning approach for configurable software verification tools,"Koc U., Mordahl A., Wei S., Foster J.S., Porter A., SATune: Study-driven auto-tuning approach for configurable software verification tools, Proceedings of the 36Th IEEE/ACM International Conference on Automated Software Engineering (ASE 2021, (2021)",Exclude,""
code injection in c and c++: a survey of vulnerabilities and countermeasures,"Younan Y., Joosen W., Piessens F., Code Injection in C and C++: A Survey of Vulnerabilities and Countermeasures, (2004)",Exclude,""
who should comment on this pull request? analyzing attributes for more accurate commenter recommendation in pull-based development,"Jiang J., Yang Y., He J., Blanc X., Zhang L., Who should comment on this pull request? analyzing attributes for more accurate commenter recommendation in pull-based development, Information and Software Technology, 84, pp. 48-62, (2017)",Exclude,""
dualsc: automatic generation and summarization of shellcode via transformer and dual learning,"Yang G., Chen X., Zhou Y., Yu C., DualSC: Automatic generation and summarization of shellcode via transformer and dual learning, IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2022, Honolulu, HI, USA, March 15-18, 2022, pp. 361-372, (2022)",Exclude,""
2018. coherence of comments and method implementations: a dataset and an empirical investigation,"Corazza A., Maggio V., Scanniello G., 2018. Coherence of comments and method implementations: A dataset and an empirical investigation, Software Quality Journal, 26, 2, pp. 751-777, (2018)",Exclude,""
finding and preventing run-time error handling mistakes,"Weimer W., Necula G.C., Finding and preventing run-time error handling mistakes, OOPSLA, pp. 419-431, (2004)",Exclude,""
a survey of automated programming hint generation: the hints framework,"MCBROOM J., KOPRINSKA I., YACEF K., A survey of automated programming hint generation: The hints framework, ACM Computing Surveys, 54, 8, (2021)",Exclude,""
how do learners behave in help-seeking when given a choice?,"GROSS S., PINKWART N., How do learners behave in help-seeking when given a choice?, Proceedings of the 17th International Conference on Artificial Intelligence in Education, pp. 600-603, (2015)",Exclude,""
contest 914d-bash and a tough math puzzle,Contest 914D-Bash and a Tough Math Puzzle,Exclude,""
a clustering-based approach to enriching code foraging environment,"Niu N., Jin X., Niu Z., Cheng J.C., Li L., Kataev M., A clustering-based approach to enriching code foraging environment, IEEE Trans. Cybern., 46, 9, pp. 1962-1973, (2016)",Include,Exclude
tree-to-tree neural networks for program translation,"Chen X., Liu C., Song D., Tree-to-tree neural networks for program translation, NIPS'18 Proceedings of the 32nd International Conference on Neural Information Processing Systems, 31, pp. 2552-2562, (2018)",Include,Include
get to the point: summarization with pointer-generator networks,"See A., Liu P.J., Manning C.D., Get to the point: summarization with pointer-generator networks, Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pp. 1073-1083, (2017)",Exclude,""
approximation theory of the mlp model in neural networks,"Pinkus A., Approximation theory of the MLP model in neural networks, Acta numerica, 8, pp. 143-195, (1999)",Exclude,""
example-based feedback provision using structured solution spaces,"Gross S., Mokbel B., Paassen B., Hammer B., Pinkwart N., Example-based feedback provision using structured solution spaces, International Journal of Learning Technology, 10, 9, pp. 248-280, (2014)",Exclude,""
a training algorithm for optimal margin classifiers,"Boser B.E., Guyon I., Vapnik V., A training algorithm for optimal margin classifiers, COLT, pp. 144-152, (1992)",Exclude,""
palmtree: learning an assembly language model for instruction embedding,"Li X., Qu Y., Yin H., Palmtree: learning an assembly language model for instruction embedding, Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security (CCS), (2021)",Exclude,""
autocomment: mining question and answer sites for automatic comment generation,"Wong E., Yang J., Tan L., AutoComment: Mining question and answer sites for automatic comment generation, 2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 562-567, (2013)",Exclude,""
hierarchical question-image co-attention for visual question answering,"Lu J., Yang J., Batra D., Parikh D., Hierarchical question-image co-Attention for visual question answering, Advances in Neural Information Processing Systems, pp. 289-297, (2016)",Exclude,""
2021 cwe top 25 most dangerous software weaknesses,"2021 Cwe Top 25 Most Dangerous Software Weaknesses, (2021)",Exclude,""
how far we have progressed in the journey? an examination of cross-project defect prediction,"Zhou Y., Et al., How far we have progressed in the journey? An examination of cross-project defect prediction, Acm Trans. Softw. Eng. Methodol, 27, 1, (2018)",Exclude,""
incorporating syntactic and semantic information in word embeddings using graph convolutional networks,"Vashishth S., Bhandari M., Yadav P., Rai P., Bhattacharyya C., Talukdar P.P., Incorporating syntactic and semantic information in word embeddings using graph convolutional networks, Proceedings of the 57th Conference of the Association for Computational Linguistics, pp. 3308-3318, (2019)",Include,Exclude
don't count,"Baroni M., Dinu G., Kruszewski G., Don't count, predict! A systematic comparison of context-counting vs. Context-predicting semantic vectors, Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers, 1, pp. 238-247, (2014)",Include,""
lstm neural networks for language modeling,"Sundermeyer M., Schluter R., Ney H., Lstm neural networks for language modeling, Thirteenth Annual Conference of the International Speech Communication Association, (2012)",Exclude,""
selecting software phase markers with code structure analysis,"Lau J., Perelman E., Calder B., Selecting software phase markers with code structure analysis, Proceedings of the 2006 International Symposium on Code Generation and Optimization, pp. 135-146, (2006)",Include,Exclude
apimatchmaker: matching the right apis for supporting the development of android apps,"Zhao Y., Li L., Wang H., He Q., Grundy J., APIMatchmaker: Matching the right APIs for supporting the development of android apps, IEEE Trans Softw Eng, (2022)",Exclude,""
an executable formal semantics of php,"Filaretti D., Maffeis S., An executable formal semantics of PHP, ECOOP 2014 - Object-Oriented Programming - 28th European Conference, Ser. LNCS, 8586, pp. 567-592, (2014)",Exclude,""
source code documentation generation using program execution,"Sulir M., Poruban J., Source code documentation generation using program execution, Information, 8, (2017)",Exclude,""
learning program semantics with code representations: an empirical study,"Siow J.K., Liu S., Xie X., Meng G., Liu Y., Learning program semantics with code representations: An empirical study, (2022)",Include,Exclude
deep reinforcement learning for programming language correction,"Gupta R., Kanade A., Shevade S., Deep reinforcement learning for programming language correction, AAAI, (2019)",Include,Include
the conversational interface,"McTear M., Callejas Z., Griol D., The conversational interface, 694, (2016)",Include,""
statically checking api protocol conformance with mined multi-object specifications,"Pradel M., Jaspan C., Aldrich J., Gross T.R., Statically checking api protocol conformance with mined multi-object specifications, ICSE, pp. 925-935, (2012)",Exclude,""
the effectiveness of software metrics in identifying error-prone classes in post-release software evolution process,"Shatnawi R., Li W., The effectiveness of software metrics in identifying error-prone classes in post-release software evolution process, J. Syst. Softw., 81, 11, pp. 1868-1882, (2008)",Exclude,""
learning to optimize tensor programs,"Chen T., Zheng L., Yan E., Jiang Z., Moreau T., Ceze L., Guestrin C., Krishnamurthy A., Learning to optimize tensor programs, Advances in Neural Information Processing Systems, pp. 3389-3400, (2018)",Exclude,""
node2vec: scalable feature learning for networks. proceedings of the 22nd acm sigkdd international conference on knowledge discovery and data mining,"Grover A., Leskovec J., node2vec: scalable feature learning for networks. Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining",Exclude,""
tracking pointers with path and context sensitivity for bug detection in c programs,"Benjamin Livshits V., Lam M.S., Tracking pointers with path and context sensitivity for bug detection in C programs, Proceedings of the 9th European software engineering conference held jointly with 11th ACM SIGSOFT international symposium on Foundations of software engineering, pp. 317-326, (2003)",Include,Include
general data protection regulation,General data protection regulation,Exclude,""
) is there a “golden” feature set for static warning identification?: an experimental evaluation,"Wang J., Wang S., Wang Q., ) Is there a “golden” feature set for static warning identification?: An experimental evaluation, In: Proceedings of the 12Th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM ’18)., (2018)",Exclude,""
predicting cyber risks through national vulnerability database,"Zhang S., Ou X., Caragea D., Predicting cyber risks through National Vulnerability Database, Inf. Secur. J., Global Perspective, 24, 4-6, pp. 194-206, (2015)",Exclude,""
literature review on vulnerability detection using nlp technology. corr abs/2104.11230,"Wu J., Literature review on vulnerability detection using NLP technology. CoRR abs/2104.11230, 2021",Exclude,""
flow-sensitive pointer analysis for millions of lines of code,"Hardekopf B., Lin C., Flow-sensitive pointer analysis for millions of lines of code, Proceedings of the 9th Annual IEEE/ACM International Symposium on Code Generation and Optimization (CGO’11), pp. 289-298, (2011)",Include,Include
detecting integer overfow errors in java source code via machine learning,"Luo Y., Xu W., Xu D., Detecting Integer Overfow Errors in Java Source Code via Machine Learning, 2021 IEEE 33rd International Conference on Tools with Artifcial Intelligence (ICTAI), pp. 724-728, (2021)",Include,Exclude
unsupervised learning of sentence embeddings using compositional n-gram features,"Pagliardini M., Gupta P., Jaggi M., Unsupervised learning of sentence embeddings using compositional n-gram features, Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers), pp. 528-540, (2018)",Exclude,""
rule-based detection of design patterns in program code,"Alnusair A., Zhao T., Yan G., Rule-based detection of design patterns in program code, Int. J. Softw. Tools Technol. Transf., 16, 3, pp. 315-334, (2014)",Exclude,""
interprocedural path-sensitive resource leaks detection for c programs,"Ji X., Yang J., Xu J., Feng L., Li X., Interprocedural path-sensitive resource leaks detection for c programs, Proceedings of the Fourth Asia-Pacific Symposium on Internetware, Internetware 2012, pp. 191-199, (2012)",Exclude,""
deepfix: fixing common c language errors by deep learning,"Gupta R., Pal S., Kanade A., Shevade S., DeepFix: Fixing Common C Language Errors by Deep Learning, Proceedings of the AAAI, pp. 1345-1351, (2017)",Include,Exclude
contest 1027c-military problem,Contest 1027C-Military Problem,Exclude,""
enabling code transformations with fermat on simplified bytecode,"Pracner D., Budimac Z., Enabling code transformations with fermat on simplified bytecode, J Softw Evol Process, 29, 5, (2017)",Exclude,""
sentencepiece: a simple and language independent subword tokenizer and detokenizer for neural text processing,"Kudo T., Richardson J., SentencePiece: A simple and language independent subword tokenizer and detokenizer for Neural Text Processing, Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing: System Demonstrations., pp. 66-71, (2018)",Exclude,""
using k-core decomposition on class dependency networks to improve bug prediction model's practical performance,"Qu Y., Zheng Q., Chi J., Jin Y., He A., Cui D., Zhang H., Liu T., Using K-core decomposition on class dependency networks to improve bug prediction model's practical performance, IEEE Trans. Softw. Eng., 47, 2, pp. 348-366, (2019)",Include,Exclude
source code quality classification based on software metrics,"Vytovtov P., Markov E., Source code quality classification based on software metrics, FRUCT, 20",Exclude,""
on the use of dependabot security pull requests,"Alfadel M., Costa D.E., Shihab E., Mkhallalati M., On the Use of Dependabot Security Pull Requests, IEEE/ACM 18th International Conference on Mining Software Repositories (MSR), pp. 254-265, (2021)",Exclude,""
a convolutional attention network for extreme summarization of source code,"Allamanis M., Peng H., Sutton C., A Convolutional Attention Network for Extreme Summarization of Source Code, Proceedings of the International Conference on Machine Learning, (2016)",Exclude,""
a convolutional neural network for language-agnostic source code summarization,"Moore J., Gelman B., Slater D., A convolutional neural network for language-Agnostic source code summarization, Proceedings of the 14th International Conference on Evaluation of Novel Approaches to Software Engineering, 1, pp. 15-26, (2019)",Exclude,""
hypercomplex graph collaborative filtering,"Li A., Yang B., Huo H., Hussain F., Hypercomplex Graph Collaborative Filtering, WWW, pp. 1914-1922, (2022)",Exclude,""
the comparison ofword embedding techniques in rnns for vulnerability detection,"Ngoc Nguyen H., Teerakanok S., Inomata A., Uehara T., The Comparison ofWord Embedding Techniques in RNNs for Vulnerability Detection, ICISSP, pp. 109-120, (2021)",Exclude,""
cpgva: code property graph based vulnerability analysis by deep learning,"Xiaomeng W., Tao Z., Runpu W., Wei X., Changyu H., Cpgva: Code property graph based vulnerability analysis by deep learning, 2018 10th International Conference on Advanced Infocomm Technology (ICAIT), pp. 184-188, (2018)",Include,Include
visualizing textual redundancy in legacy source,"Howard Johnson J., Visualizing textual redundancy in legacy source, Proceedings of the 1994 Conference of the Centre for Advanced Studies on Collaborative Research (CASCON’94), (1994)",Exclude,""
national vulnerability database (nvd),The National Vulnerability Database (NVD),Exclude,""
a survey of loss functions for semantic segmentation,"Jadon S., A survey of loss functions for semantic segmentation, 2020 IEEE Conference on Computational Intelligence in Bioinformatics and Computational Biology (CIBCB), (2020)",Exclude,""
labelencoder,"LabelEncoder, (2011)",Include,""
2018. multi-task learning using uncertainty to weigh losses for scene geometry and semantics,"Kendall A., Gal Y., Cipolla R., 2018. Multi-Task learning using uncertainty to weigh losses for scene geometry and semantics, Proceedings of the Ieee Conference on Computer Vision and Pattern Recognition, pp. 7482-7491",Exclude,""
the seahorn verification framework,"Gurfinkel A., Kahsai T., Komuravelli A., Navas J.A., The SeaHorn verification framework, CAV, LNCS, 9206, pp. 343-361, (2015)",Exclude,""
securetf: a secure tensorflow framework,"Quoc D.L., Gregor F., Arnautov S., Kunkel R., Bhatotia P., Fetzer C., secureTF: a secure tensorflow framework, (2021)",Exclude,""
gan-enabled code embedding for reentrant vulnerabilities detection,"Zhao H., Su P., Wei Y., Gai K., Qiu M., Gan-enabled code embedding for reentrant vulnerabilities detection, Knowledge Science, Engineering and Management, pp. 585-597, (2021)",Include,Exclude
nltk: the natural language toolkit in proceedings of the acl 2004 on interactive poster and demonstration sessions,"Steven B., NLTK: The Natural Language Toolkit in Proceedings of The ACL 2004 on Interactive Poster and Demonstration Sessions, (2004)",Exclude,""
where should the bugs be fixed?-more accurate information retrieval-based bug localization based on bug reports,"Zhou J., Zhang H., Lo D., Where should the bugs be fixed?-more accurate information retrieval-based bug localization based on bug reports, pp. 14-24, (2012)",Exclude,""
a low-cost approximate minimal hitting set algorithm and its application to model-based diagnosis,"A low-cost approximate minimal hitting set algorithm and its application to model-based diagnosis, Proceedings of the Eight Symposium on Abstraction, Reformulation, and Approximation., (2009)",Exclude,""
an efficient framework for learning sentence representations,"Logeswaran L., Honglak L., An efficient framework for learning sentence representations, (2018)",Exclude,""
doubletake: fast and precise error detection via evidence-based dynamic analysis,"Liu T., Curtsinger C., Berger E.D., Doubletake: Fast and precise error detection via evidence-based dynamic analysis, Proceedings of the 38th International Conference on Software Engineering, ICSE 2016, pp. 911-922, (2016)",Include,Exclude
cross-platform binary code similarity detection based on nmt and graph embedding,"Zhu X., Jiang L., Chen Z., Cross-platform binary code similarity detection based on nmt and graph embedding, Mathematical Biosciences and Engineering, 18, 5, pp. 4528-4551, (2021)",Exclude,""
improving vulnerability remediation through better exploit prediction[j],"Jacobs J., Romanosky S., Adjerid I., Baker W., Improving vulnerability remediation through better exploit prediction[J], J. Cybersecur., 6, 1, (2020)",Exclude,""
devign: effective vulnerability identification by learning comprehensive program semantics via graph neural networks. proceedings of the 33rd international conference on neural information processing systems,"Zhou Y., Liu S., Siow J., Du X., Liu Y., Devign: Effective vulnerability identification by learning comprehensive program semantics via graph neural networks. Proceedings of the 33rd International Conference on Neural Information Processing Systems, vol. 32",Include,Exclude (Duplicate)
kernels for structured data,"",Exclude,""
experimentation in software engineering,"Wohlin C., Runeson P., Host M., Ohlsson M. C., Regnell B., Wesslen A., Experimentation in software engineering, (2012)",Exclude,""
a practical guide for using statistical tests to assess randomized algorithms in software engineering,"Arcuri A., Briand L., A practical guide for using statistical tests to assess randomized algorithms in software engineering, Proc. 33rd Int. Conf. Softw. Eng., pp. 1-10, (2011)",Exclude,""
a comparative analysis of the efficiency of change metrics and static code attributes for defect prediction,"Moser R., Pedrycz W., Succi G., A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction, Proceedings of the 30th international conference on Software engineering, pp. 181-190, (2008)",Exclude,""
coset: a benchmark for evaluating neural program embeddings,"Wang K., Christodorescu M., COSET: A Benchmark for Evaluating Neural Program Embeddings, (2019)",Exclude,""
understanding and monitoring embedded web scripts,"Zhou Y., Evans D., Understanding and monitoring embedded web scripts, 2015 IEEE Symposium on Security and Privacy, pp. 850-865, (2015)",Exclude,""
improving vulnerability inspection efficiency using active learning,"Yu Z., Theisen C., Williams L., Menzies T., Improving vulnerability inspection efficiency using active learning, IEEE Trans. Softw. Eng., (2019)",Exclude,""
experimental evaluation of train and test split strategies in link prediction,"de Bruin G., Veenman C., van den Herik H., Takes F., Experimental evaluation of train and test split strategies in link prediction, Complex Networks & their Applications IX - Volume 2, Proceedings of the Ninth International Conference on Complex Networks and their Applications, COMPLEX NETWORKS 2020, 1-3 December 2020, Madrid, Spain, Studies in Computational Intelligence, 944, pp. 79-91, (2020)",Exclude,""
elementrank: ranking java software classes and packages using a multilayer complex network-based approach,"Pan W., Ming H., Chang C.K., Yang Z., Kim D., ElementRank: Ranking Java software classes and packages using a multilayer complex network-based approach, IEEE Trans. Softw. Eng., 47, 10, pp. 2272-2295, (2021)",Include,Include
user-guided program reasoning using bayesian inference,"Raghothaman M., Kulkarni S., Heo K., Naik M., User-guided program reasoning using bayesian inference, : Proceedings of the 39Th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 2018)., pp. 722-735, (2018)",Exclude,""
improving stack overflow question title generation with copying enhanced codebert model and bi-modal information,"Zhang F., Yu X., Keung J., Li F., Xie Z., Yang Z., Ma C., Zhang Z., Improving Stack Overflow question title generation with copying enhanced CodeBERT model and bi-modal information, Inf. Softw. Technol., 148, (2022)",Exclude,""
1600 faults in 100 projects: automatically finding faults while achieving high coverage with evosuite,"Fraser G., Arcuri A., 1600 Faults in 100 Projects: Automatically Finding Faults While Achieving High Coverage with EvoSuite, Empirical Softw. Engg., 20, 3, pp. 611-639, (2015)",Exclude,""
named entity recognition as dependency parsing,"Yu J., Bohnet B., Poesio M., Named entity recognition as dependency parsing, Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pp. 6470-6476, (2020)",Exclude,""
misim: an end-to-end neural code similarity system,"Ye F., Zhou S., Venkat A., Marcus R., Tatbul N., Jahan Tithi J., Petersen P., Mattson T.G., Kraska T., Dubey P., Sarkar V., Gottschlich J., MISIM: An end-to-end neural code similarity system, CoRR, (2020)",Include,Exclude (Pre-print)
sequence to sequence learning with neural networks,"Sutskever I., Vinyals O., Le Q.V., Sequence to sequence learning with neural networks, Proceedings of the 27th international conference on neural information processing systems, 2, pp. 3104-3112, (2014)",Exclude,""
detecting and removing web application vulnerabilities with static analysis and data mining,"Medeiros I., Neves N., Correia M., Detecting and removing web application vulnerabilities with static analysis and data mining, IEEE Trans. Reliab, 65, pp. 54-69, (2015)",Exclude,""
adaptive subgradient methods for online learning and stochastic optimization,"Duchi J., Hazan E., Singer Y., Adaptive subgradient methods for online learning and stochastic optimization, J Mach Learn Res, 12, pp. 2121-2159, (2011)",Exclude,""
an extended benchmark system of word embedding methods for vulnerability detection,"Nguyen N.H., Nguyen V.H., Uehara T., An extended benchmark system of word embedding methods for vulnerability detection, Proc. 4th Int. Conf. Future Netw. Distrib. Syst. (ICFNDS), pp. 1-8, (2020)",Exclude,""
a novel deep-learning-based bug severity classification technique using convolutional neural networks and random forest with boosting[j],"Kukkar A., Mohana R., Nayyar A., Et al., A novel deep-learning-based bug severity classification technique using convolutional neural networks and random forest with boosting[J], Sensors, 19, 13, (2019)",Exclude,""
as per the paper open vocabulary learning on source code with a graph-structured cache,As per the Paper Open Vocabulary Learning on Source Code with a Graph-Structured Cache,Include,Exclude
facoy: a code-to-code search engine,"Kim K., Kim D., Bissyande T.F., Choi E., Li L., Klein J., Le Traon Y., FaCoY: A code-To-code search engine, Proceedings of the 40th International Conference on Software Engineering, ICSE 2018, pp. 946-957, (2018)",Exclude,""
towards using visual,"Mi Q., Hao Y., Ou L., Ma W., Towards using visual, semantic and structural features to improve code readability classification, J Syst Softw, 193, (2022)",Include,Include
noise-contrastive estimation of unnormalized statistical models,"Gutmann M.U., Hyvarinen A., Noise-contrastive estimation of unnormalized statistical models, with applications to natural image statistics, J. Mach. Learn. Res., 13, 2, (2012)",Exclude,""
combining program analysis and statistical language model for code statement completion,"Nguyen S., Nguyen T., Li Y., Wang S., Combining program analysis and statistical language model for code statement completion, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEE, pp. 710-721, (2019)",Exclude,""
neural factorization machines for sparse predictive analytics,"He X., Chua T., Neural factorization machines for sparse predictive analytics, Proceedings of the 40th International, (2017)",Exclude,""
text summarization method based on double attention pointer network,"Li Z., Peng Z., Tang S., Zhang C., Ma H., Text summarization method based on double attention pointer network, IEEE Access, 8, pp. 11279-11288, (2020)",Exclude,""
under-constrained symbolic execution: correctness checking for real code,"Ramos D.A., Engler D., Under-constrained symbolic execution: Correctness checking for real code, Proc. 24th Usenix Secur. Symp. (USENIX Secur.), pp. 49-64, (2015)",Exclude,""
empirical comparison of three metrics suites for fault prediction in packages of object-oriented systems: a case study of eclipse,"Elish M.O., Al-Yafei A.H., Al-Mulhem M., Empirical comparison of three metrics suites for fault prediction in packages of object-oriented systems: A case study of Eclipse, Adv. Eng. Softw., 42, 10, pp. 852-859, (2011)",Exclude,""
investigating instability architectural smells evolution: an exploratory case study,"Sas D., Avgeriou P., Fontana F.A., Investigating instability architectural smells evolution: an exploratory case study, 2019 IEEE International Conference on software maintenance and evolution (ICSME), pp. 557-567, (2019)",Exclude,""
automated software transplantation,"Barr E.T., Harman M., Jia Y., Marginean A., Petke J., Automated software transplantation, International Symposium on Software Testing and Analysis (ISSTA), (2015)",Exclude,""
learning deep architectures for ai,"Bengio Y., Et al., Learning deep architectures for ai, Foundations and Trends in Machine Learning, 2, 1, pp. 1-127, (2009)",Exclude,""
an industrial evaluation of unit test generation: finding real faults in a financial application,"Almasi M.M., Hemmati H., Fraser G., Arcuri A., Benefelds J., An Industrial Evaluation of Unit Test Generation: Finding Real Faults in a Financial Application, 2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP), pp. 263-272, (2017)",Exclude,""
a learning rule for asynchronous perceptrons with feedback in a combinatorial environment,"Almeida L.B., A learning rule for asynchronous perceptrons with feedback in a combinatorial environment, Artificial Neural Networks: Concept Learning, pp. 102-111, (1990)",Exclude,""
reproduction package for msr double-blind review.,"Reproduction Package for MSR Double-blind Review., (2022)",Exclude,""
supporting continuous integration by code-churn based test selection,"Knauss E., Staron M., Meding W., Soder O., Nilsson A., Castell M., Supporting continuous integration by code-churn based test selection, 2015 IEEE/ACM 2Nd International Workshop on Rapid Continuous Software Engineering, pp. 19-25, (2015)",Exclude,""
on applying machine learning techniques for design pattern detection,"Zanoni M., Fontana F.A., Stella F., On applying machine learning techniques for design pattern detection, J. Syst. Softw., 103, pp. 102-117, (2015)",Include,Include
identifying vulnerable github repositories and users in scientific cyberinfrastructure: an unsupervised graph embedding approach,"Lazarine B., Samtani S., Patton M., Zhu H., Ullman S., Ampel B., Chen H., Identifying Vulnerable Github Repositories And Users In Scientific Cyberinfrastructure: An Unsupervised Graph Embedding Approach, 2020 IEEE International Conference on Intelligence and Security Informatics (ISI), pp. 1-6, (2020)",Include,Include
constructing the call graph of a program,"Ryder B.G., Constructing the call graph of a program, Software Engineering, 3, pp. 216-226, (1979)",Exclude,""
coupling and cohesion as modularization drivers: are we being over-persuaded?,"Abreu F.B.E., Goul Ao M., Coupling and cohesion as modularization drivers: Are we being over-persuaded?, Proc. 5th Conf. Softw. Maintenance Reengineering, pp. 47-57, (2001)",Exclude,""
multilayer perceptron: architecture optimization and training with mixed activation functions,"Ramchoun H., Janati Idrissi M.A., Ghanou Y., Ettaouil M., Multilayer perceptron: Architecture optimization and training with mixed activation functions, Proceedings of the 2nd International Conference on Big Data, Cloud and Applications (BDCA’17), (2017)",Exclude,""
kernel methods for pattern analysis,"Shawe-Taylor J., Cristianini N., Kernel methods for pattern analysis, (2004)",Exclude,""
learning to map source code to software vulnerability using code-as-a-graph,"Suneja S., Zheng Y., Zhuang Y., Laredo J., Morari A., Learning to map source code to software vulnerability using code-as-a-graph, Icst, pp. 1-8, (2019)",Include,Exclude (Pre-print)
deep learning in neural networks: an overview,"Schmidhuber J., Deep learning in neural networks: An overview, Neural networks, (2015)",Exclude,""
p-companion: a principled framework for diversified complementary product recommendation,"Hao J., Zhao T., Li J., Luna Dong X., Faloutsos C., Sun Y., Wang W., P-companion: A principled framework for diversified complementary product recommendation, CIKM, pp. 2517-2524, (2020)",Exclude,""
evaluating static analysis defect warnings on production software,"Ayewah N., Pugh W., David Morgenthaler J., Penix J., Zhou Y., Evaluating static analysis defect warnings on production software, Proceedings of the 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering, pp. 1-8, (2007)",Exclude,""
spec cpu2000: measuring cpu performance in the new millennium,"John L.H., Spec cpu2000: Measuring cpu performance in the new millennium, Computer, 33, 7, pp. 28-35, (2000)",Exclude,""
combating architectural degeneration: a survey,"Hochstein L., Lindvall M., Combating architectural degeneration: A survey, Inf. Softw. Technol., 47, 10, pp. 643-656, (2005)",Exclude,""
apt: a data structure for optimal control dependence computation,"Pingali K., Bilardi G., APT: A data structure for optimal control dependence computation, Proceedings of the ACM SIGPLAN 1995 Conference on Programming Language Design and Implementation (PLDI’95), pp. 32-46, (1995)",Include,Exclude
learning binary code with deep learning to detect software weakness,"Lee Y.J., Choi S.-H., Kim C., Lim S.-H., Park K.-W., Learning binary code with deep learning to detect software weakness, KSII the 9th International Conference on Internet (ICON!) 2017 Symposium, (2017)",Exclude,""
hypersql database,"Hypersql Database, (2021)",Exclude,""
learning from source code history to identify performance failures,"Sandoval Alcocer J.P., Bergel A., Valente M.T., Learning from source code history to identify performance failures, ICPE. Association for Computing Machinery, (2016)",Exclude,""
patterns in the chaos-a study of performance variation and predictability in public iaas clouds,"Leitner P., Cito J., Patterns in the Chaos-a study of performance variation and predictability in public IaaS clouds, ACM TOIT, 16, 3, pp. 1-15, (2016)",Exclude,""
an incremental algorithm for maintaining the dominator tree of a reducible flowgraph,"Ramalingam G., Reps T., An incremental algorithm for maintaining the dominator tree of a reducible flowgraph, Proc. 21st ACM SIGPLAN-SIGACT Symp. Princ. Program. Lang., pp. 287-296, (1994)",Exclude,""
codewebs: scalable homework search for massive open online programming courses,"NGUYEN A., PIECH C., HUANG J., GUIBAS L., Codewebs: Scalable homework search for massive open online programming courses, Proceedings of the 23rd International Conference on World Wide Web, pp. 491-502, (2014)",Exclude,""
tensor decompositions and applications,"Kolda T.G., Bader B.W., Tensor decompositions and applications, SIAM Rev., 51, 3, pp. 455-500, (2009)",Exclude,""
programl: graph-based deep learning for program optimization and analysis,"Cummins C., Fisches Z.V., Ben-Nun T., Hoefler T., Leather H., ProGraML: Graph-based Deep Learning for Program Optimization and Analysis, (2020)",Include,Include
sourcerer: mining and searching internet-scale software repositories,"Linstead E., Bajracharya S., Ngo T., Rigor P., Lopes C., Baldi P., Sourcerer: Mining and searching internet-scale software repositories, Data Mining Knowl. Discovery, 18, 2, pp. 300-336, (2009)",Exclude,""
metapath-and entity-aware graph neural network for recommendation. arxiv e-prints,"Han Z., Et al., Metapath-and entity-aware graph neural network for recommendation. arXiv e-prints, Arxiv-2010, (2020)",Exclude,""
quantifying the vanishing gradient and long distance dependency problem in recursive neural networks and recursive lstms,"Le P., Zuidema W.H., Quantifying the vanishing gradient and long distance dependency problem in recursive neural networks and recursive LSTMs, Proceedings of the 1st Workshop on Representation Learning for NLP, Rep4NLP@ACL 2016, pp. 87-93, (2016)",Exclude,""
feature-dependent graph convolutional autoencoders with adversarial training methods,"Wu D., Hu R., Zheng Y., Jiang J., Sharma N., Blumenstein M., Feature-Dependent Graph Convolutional Autoencoders with Adversarial Training Methods, 2019 International Joint Conference on Neural Networks (IJCNN)., pp. 1-8, (2019)",Exclude,""
automated code review tools for security,"McGraw G., Automated code review tools for security, Computer, 41, 12, pp. 108-111, (2008)",Exclude,""
automated security analysis of dynamic web applications through symbolic code execution,"Agosta G., Barenghi A., Parata A., Pelosi G., Automated security analysis of dynamic web applications through symbolic code execution, pp. 189-194, (2012)",Exclude,""
revisiting frank-wolfe: projection-free sparse convex optimization,"Jaggi M., Revisiting Frank-Wolfe: Projection-free sparse convex optimization, 30th International Conference on Machine Learning, pp. 427-435, (2013)",Exclude,""
the social network of java classes,"Puppin D., Silvestri F., The social network of java classes, Proc. ACM Symp. Appl. Comput., pp. 1409-1413, (2006)",Include,Exclude
detection strategies: metrics-based rules for detecting design flaws,"Marinescu R., Detection strategies: Metrics-based rules for detecting design flaws, 20th IEEE International Conference on Software Maintenance, pp. 350-359, (2004)",Exclude,""
codeforces: online programming competition,Codeforces: Online Programming Competition,Exclude,""
ultimate taipan: trace abstraction and abstract interpretation,"Greitschus M., Dietsch D., Heizmann M., Nutz A., Schatzle C., Schilling C., Schussele F., Podelski A., Ultimate Taipan: Trace abstraction and abstract interpretation, TACAS, LNCS, 10206, pp. 399-403, (2017)",Exclude,""
real-time scene text detection with differentiable binarization,"Liao M., Wan Z., Yao C., Chen K., Bai X., Real-time scene text detection with differentiable binarization, Proceedings of the AAAI conference on artificial intelligence, 34, 7, pp. 11474-11481, (2020)",Exclude,""
brick: a binary tool for run time detecting and locating integer-based vulnerability,"Chen P., Wang Y., Xin Z., Mao B., Xie L., Brick: A binary tool for run time detecting and locating integer-based vulnerability, 2009 International Conference on Availability, Reliability and Security, pp. 208-215, (2009)",Exclude,""
coacor: code annotation for code retrieval with reinforcement learning,"Yao Z., Peddamail J. R., Sun H., CoaCor: Code Annotation for Code Retrieval with Reinforcement Learning, The World Wide Web Conference, pp. 2203-2214, (2019)",Include,Include
the paradox of choice: why more is less,"Schwartz B., The Paradox of Choice: Why More is Less, (2004)",Exclude,""
design pattern recovery through visual language parsing and source code analysis,"De Lucia A., Deufemia V., Gravino C., Risi M., Design Pattern Recovery through Visual Language Parsing and Source Code Analysis, J. Syst. Softw., 82, 7, pp. 1177-1193, (2009)",Exclude,""
github code security,"GitHub Code Security, (2021)",Include,""
deep domain adaptation for vulnerable code function identification,"Nguyen V., Le T., Le T., Et al., Deep domain adaptation for vulnerable code function identification, Proceedings of the IJCNN, Budapest, Hungary, pp. 1-8, (2019)",Include,Exclude
patching as translation: the data and the metaphor,"Ding Y., Ray B., Devanbu P., Hellendoorn V.J., Patching as translation: The data and the metaphor, 2020 35th IEEE/ACM International Conference on Automated Software Engineering. IEEE, pp. 275-286, (2020)",Exclude,""
universal password manager.,"Smith A., Universal Password Manager., (2019)",Exclude,""
manticore: a user-friendly symbolic execution framework for binaries and smart contracts,"Mossberg M., Et al., Manticore: A user-friendly symbolic execution framework for binaries and smart contracts, 34Th IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 1186-1189, (2019)",Exclude,""
classification ofmalware using structured control flow,"Cesare S., Xiang Y., Classification ofmalware using structured control flow, Proc. 8th Australas. Symp. Parallel Distrib. Comput, pp. 61-70, (2010)",Include,Exclude
targeting at-risk students using engagement and effort predictors in an introductory computer programming course,"Azcona D., Smeaton A.F., Targeting at-risk students using engagement and effort predictors in an introductory computer programming course, European Conference on Technology Enhanced Learning (EC-TEL'17), pp. 361-366, (2017)",Exclude,""
are we really making much progress revisiting,"Lv Q., Ding M., Liu Q., Chen Y., Feng W., He S., Zhou C., Jiang J., Dong Y., Tang J., Are we really making much progress revisiting, benchmarking and refining heterogeneous graph neural networks, Proceedings of the 27th ACM SIGKDD conference on knowledge discovery & data mining, pp. 1150-1160, (2021)",Exclude,""
ontology-driven evolution of software security,"Peldszus S., Burger J., Kehrer T., Jurjens J., Ontology-driven evolution of software security, Data Knowl Eng, 134, (2021)",Exclude,""
prediction of common weakness probability in c/c++ source code using recurrent neural networks,"Vytovtov P., Chuvilin K., Prediction of common weakness probability in c/c++ source code using recurrent neural networks, FRUCT, 21",Exclude,""
condensing class diagrams by analyzing design and network metrics using optimistic classification,"Thung F., Lo D., Osman M.H., Chaudron M.R.V., Condensing class diagrams by analyzing design and network metrics using optimistic classification, Proc. 22nd Int. Conf. Prog. Comprehension, pp. 110-121, (2014)",Include,Exclude
on the effectiveness of deep vulnerability detectors to simple stupid bug detection,"Hua J., Wang H., On the effectiveness of deep vulnerability detectors to simple stupid bug detection, 2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR), pp. 530-534, (2021)",Include,Exclude
find security bugs,"Arteau Ph F.D., Polesovsky T., Find Security Bugs, Version 1.4.6., (2018)",Include,""
a principled approach to selective context sensitivity for pointer analysis,"Li Y., Tan T., Moller A., Smaragdakis Y., A principled approach to selective context sensitivity for pointer analysis, ACM Trans. Program. Lang. Syst., 42, 2, pp. 101-1040, (2020)",Exclude,""
robust optimization as data augmentation for large-scale graphs,"Kong K., Et al., Robust optimization as data augmentation for large-scale graphs, Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pp. 60-69, (2022)",Exclude,""
detection of similar functions through the use of dominator information,"Schafer A., Amme W., Heinze T.S., Detection of similar functions through the use of dominator information, Proc. IEEE Int. Conf. Auto-Nomic Comput. Self-Organizing Syst. Companion (ACSOS-C), pp. 206-211, (2020)",Include,Exclude
using stereotypes to help characterize commits,"Dragan N., Collard M.L., Hammad M., Maletic J.I., Using stereotypes to help characterize commits, 2011 27th IEEE International Conference on Software Maintenance (ICSM). IEEE, pp. 520-523, (2011)",Exclude,""
predicting fault incidence using software change history,"Graves T.L., Karr A.F., Marron J.S., Siy H., Predicting fault incidence using software change history, IEEE Trans. Softw. Eng., 26, 7, pp. 653-661, (2000)",Exclude,""
icon2code: recommending code implementations for android gui components,"Zhao Y., Li L., Sun X., Liu P., Grundy J.C., Icon2Code: Recommending code implementations for Android GUI components, Inf Softw Technol, 138, (2021)",Exclude,""
synshine: improved fixing of syntax errors,"Ahmed T., Ledesma N.R., Devanbu P., SYNSHINE: Improved fixing of syntax errors, Transactions on Software Engineering, (2022)",Exclude,""
fault-localization techniques for software systems: a literature review,"Fault-localization techniques for software systems: A literature review, In SIGSOFT Software Engineering Notes., (2014)",Exclude,""
learning from examples to improve code completion systems,"Bruch M., Monperrus M., Mezini M., Learning from examples to improve code completion systems, Proceedings of the the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, pp. 213-222, (2009)",Exclude,""
combating web spam with trustrank,"Gyongyi Z., Garcia-Molina H., Pedersen J.O., Combating web spam with trustrank, Proc. 30th Int. Conf. Very Large Data Bases, pp. 576-587, (2004)",Exclude,""
predicting student performance from multiple data sources,"KOPRINSKA I., STRETTON J., YACEF K., Predicting student performance from multiple data sources, Proceedings of the International Conference on Artificial Intelligence in Education, pp. 678-681, (2015)",Exclude,""
bug severity prediction using question-and-answer pairs from stack overflow[j],"Tan Y., Et al., Bug severity prediction using question-and-answer pairs from Stack Overflow[J], J. Syst. Softw., 165, (2020)",Exclude,""
smartcondetect: highly accurate smart contract code vulnerability detection mechanism using bert,"Jeon S., Lee G., Kim H., Woo S.S., Smartcondetect: Highly accurate smart contract code vulnerability detection mechanism using bert, KDD Workshop on Programming Language Processing, (2021)",Exclude,""
sok: eternalwar in memory,"Szekeres L., Payer M., Wei T., Song D., Sok: Eternalwar in memory, 2013 IEEE Symposium on Security and Privacy, SP 2013, pp. 48-62, (2013)",Include,""
pac learning-based verification and model synthesis,"Chen Y., Hsieh C., Lengal O., Lii T., Tsai M., Wang B., Wang F., PAC learning-based verification and model synthesis, ICSE, pp. 714-724, (2016)",Exclude,""
national vulnerability database[eb/ol],"American Information Technology Laboratory W.U., National Vulnerability Database[EB/OL], (2023)",Exclude,""
rethinking the inception architecture for computer vision,"Szegedy C., Vanhoucke V., Ioffe S., Shlens J., Wojna Z., Rethinking the inception architecture for computer vision, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition., pp. 2818-2826, (2016)",Exclude,""
inadequately pretrained models are better feature extractors,"Deng A., Li X., Li Z., Hu D., Xu C., Dou D., Inadequately Pretrained Models Are Better Feature Extractors, (2022)",Exclude,""
cbcd: cloned buggy code detector [c],"Li J., Ernst M.D., CBCD: Cloned buggy code detector [C], 2012 34th International Conference on Software Engineering (ICSE). IEEE, pp. 310-320, (2012)",Exclude,""
retrieval-based neural source code summarization,"Zhang J., Wang X., Zhang H., Sun H., Liu X., Retrieval-based neural source code summarization, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)., pp. 1385-1397, (2020)",Include,Include
saturn: a scalable framework for error detection using boolean satisfiability,"Xie Y., Aiken A., Saturn: A scalable framework for error detection using boolean satisfiability, ACM Transactions on Programming Languages and Systems (TOPLAS), 29, 3, pp. 16-es, (2007)",Exclude,""
2021 vulnerability detection with fine-grained interpretations (fse ?21,"Li Y., Wang S., Nguyen T.N., 2021 Vulnerability Detection with Fine-Grained Interpretations (FSE ?21, pp. 292-303",Exclude,""
adding interpretable attention to neural translation models improves word alignment,"Zenkel T., Wuebker J., DeNero J., Adding interpretable attention to neural translation models improves word alignment, (2019)",Exclude,""
fitness-guided path exploration in dynamic symbolic execution,"Xie T., Tillmann N., De Halleux J., Schulte W., Fitness-guided path exploration in dynamic symbolic execution, 2009 IEEE/IFIP International Conference on Dependable Systems & Networks, pp. 359-368, (2009)",Exclude,""
early stopping-but when?,"Prechelt L., Early stopping-but when?, Neural Networks: Tricks of the Trade, pp. 55-69, (1998)",Exclude,""
a neural network approach for early detection of program modules having high risk in the maintenance phase,"Khoshgoftaar T.M., Lanning D.L., A neural network approach for early detection of program modules having high risk in the maintenance phase, J. Syst. Softw., 29, 1, pp. 85-91, (1995)",Include,Exclude
the dogged pursuit of bug-free c programs: the frama-c software analysis platform,"Baudin P., Bobot F., Buhler D., Correnson L., Kirchner F., Kosmatov N., Maroneze A., Perrelle V., Prevosto V., Signoles J., Williams N., The dogged pursuit of bug-free C programs: The Frama-C software analysis platform, Commun. ACM, 64, 8, pp. 56-68, (2021)",Exclude,""
the best of both worlds: integrating semantic features with expert features for defect prediction and localization,"Ni C., Wang W., Yang K., Xia X., Liu K., Lo D., The best of both worlds: integrating semantic features with expert features for defect prediction and localization, Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 672-683, (2022)",Include,Exclude
okhttp: an http & http/2 client for android and java applications.,"Okhttp: An HTTP & HTTP/2 Client for Android and Java Applications., (2022)",Exclude,""
precision-guided context sensitivity for pointer analysis,"Li Y., Tan T., Moller A., Smaragdakis Y., Precision-guided context sensitivity for pointer analysis, Proc. ACM Program. Lang., 2, OOPSLA, pp. 1411-14129, (2018)",Exclude,""
geml: a grammar-based evolutionary machine learning approach for design-pattern detection,"Barbudo R., Ramirez A., Servant F., Raul Romero J., GEML: A grammar-based evolutionary machine learning approach for design-pattern detection, Journal of Systems and Software, 175, (2021)",Exclude,""
learning structural edits via incremental tree transformations,"Yao Z., Xu F.F., Yin P., Sun H., Neubig G., Learning structural edits via incremental tree transformations, 9Th International Conference on Learning Representations, ICLR 2021, Virtual Event, Austria, May 3–7, 2021, Openreview.Net, (2021)",Include,Include
unveiling exception handling bug hazards in android based on github and google code issues,"Coelho R., Almeida L., Gousios G., Van Deursen A., Unveiling exception handling bug hazards in android based on github and google code issues, MSR, pp. 134-145, (2015)",Exclude,""
deeptle: learning code-level features to predict code performance before it runs,"Zhou M., Chen J., Hu H., Yu J., Li Z., Hu H., DeepTLE: Learning code-level features to predict code performance before it runs, APSEC, (2019)",Exclude,""
on computable numbers,"Turing A., On Computable Numbers, with an Application to the N Tscheidungsproblem, Proceedings of the London Mathematical Society, 42, 1, pp. 230-265, (1936)",Exclude,""
2020. embedding java classes with code2vec: improvements from variable obfuscation [accepted],"Compton R., Frank E., Patros P., Koay A., 2020. Embedding Java classes with code2vec: Improvements from variable obfuscation [Accepted], Msr, 2020",Exclude,""
backpropagation through time: what it does and how to do it,"Werbos P.J., Backpropagation through time: What it does and how to do it, Proceedings of the IEEE, 78, 10, pp. 1550-1560, (1990)",Exclude,""
"archerr: runtime environment driven program safety""","Chinchani R., Iyer A., Jayaraman B., Upadhyaya S., ARCHERR: Runtime Environment Driven Program Safety"", pp. 385-406",Exclude,""
automated clustering and program repair for introductory programming assignments,"Gulwani S., Radicek I., Zuleger F., Automated clustering and program repair for introductory programming assignments, PLDI 2018, pp. 465-480, (2018)",Include,Include
infer: an automatic program verifier for memory safety of c programs,"Calcagno C., Distefano D., Infer: An automatic program verifier for memory safety of c programs, Proceedings of the Third International Conference on NASA Formal Methods, NFM'11, pp. 459-465, (2011)",Exclude,""
modeling programs hierarchically with stack-augmented lstm,"Liu F., Zhang L., Jin Z., Modeling programs hierarchically with stack-augmented lstm, Journal of Systems and Software, 164, (2020)",Include,Include
deep reinforcement learning for syntactic error repair in student programs,"Gupta R., Kanade A., Shevade S.K., Deep reinforcement learning for syntactic error repair in student programs, The Thirty-Third AAAI Conference on Artificial Intelligence, AAAI 2019, pp. 930-937, (2019)",Include,Exclude
a formula-based approach for automatic fault localization of imperative programs,"Lamraoui S., Nakajima S., A formula-based approach for automatic fault localization of imperative programs, International Conference on Formal Engineering Methods, ICFEM 2014, (2014)",Exclude,""
an automated framework for recommending program elements to novices (n),"ZIMMERMAN K., RUPAKHETI C. R., An automated framework for recommending program elements to novices (N), Proceedings of the 30th IEEE/ACM International Conference on Automated Software Engineering (ASE 2015), pp. 283-288, (2015)",Exclude,""
multipas: applying program transformations to introductory programming assignments for data augmentation,"Orvalho P., Janota M., Manquinho V., MultIPAs: Applying Program Transformations to Introductory Programming Assignments for Data Augmentation, Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ESEC/FSE 2022, pp. 1657-1661, (2022)",Exclude,""
a unified approach to global program optimization,"Kildall G.A., A unified approach to global program optimization, Proceedings of the 1st Annual ACM SIGACTSIGPLAN Symposium on Principles of Programming Languages, pp. 194-206, (1973)",Exclude,""
review of recent systems for automatic assessment of programming assignments,"IHANTOLA P., AHONIEMI T., KARAVIRTA V., SEPPALA O., Review of recent systems for automatic assessment of programming assignments, Proceedings of the 10th Koli Calling International Conference on Computing Education Research, pp. 86-93, (2010)",Exclude,""
automated error localization and correction for imperative programs,"Konighofer R., Bloem R., Automated error localization and correction for imperative programs, International Conference on Formal Methods in Computer-Aided Design, FMCAD '11, pp. 91-100, (2011)",Exclude,""
simplifying loop invariant generation using splitter predicates,"Sharma R., Dillig I., Dillig T., Aiken A., Simplifying loop invariant generation using splitter predicates, Computer Aided Verification - 23rd International Conference, CAV 2011, Snowbird, UT, USA, July 14-20, 2011. Proceedings, Lecture Notes in Computer Science, 6806, pp. 703-719, (2011)",Exclude,""
safeosl: ensuring memory safety of c via ownership-based intermediate language,"Yin X., Huang Z., Kan S., Et al., SafeOSL: ensuring memory safety of C via ownership-based intermediate language, Softw Pract Exp, 52, 5, pp. 1114-1142, (2022)",Exclude,""
auto-tuning a high-level language targeted to gpu codes,"Grauer-Gray S., Xu L., Searles R., Ayalasomayajula S., Cavazos J., Auto-tuning A High-Level Language Targeted to GPU Codes, (2012)",Exclude,""
ultimate kojak with memory safety checks,"Nutz A., Dietsch D., Mohamed M.M., Podelski A., ULTIMATE KOJAK with memory safety checks, TACAS, LNCS, 9035, pp. 458-460, (2015)",Exclude,""
automatic grading and feedback using program repair for introductory programming courses,"Parihar S., Dadachanji Z., Praveen Kumar Singh R. D., Karkare A., Bhattacharya A., Automatic grading and feedback using program repair for introductory programming courses, ACM Conference on Innovation and Technology in Computer Science Education, (2017)",Exclude,""
automatic grading of programming assignments: an approach based on formal semantics,"Liu X., Wang S., Wang P., Wu D., Automatic grading of programming assignments: An approach based on formal semantics, ICSE (SEET) 2019, pp. 126-137, (2019)",Exclude,""
automatically documenting program changes,"Buse R.P.L., Weimer W.R., Automatically documenting program changes, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering., pp. 33-42, (2010)",Exclude,""
depthk: a k-induction verifier based on invariant inference for c programs,"Rocha W., Rocha H., Ismail H., Cordeiro L., Fischer B., DepthK: A k-induction verifier based on invariant inference for C programs, TACAS, LNCS, 10206, pp. 360-364, (2017)",Exclude,""
invaastcluster: on applying invariant-based program clustering to introductory programming assignments,"Orvalho P., Janota M., Manquinho V., InvAASTCluster: On Applying Invariant-Based Program Clustering to Introductory Programming Assignments, (2022)",Include,Exclude (Pre-print)
dynamically discovering likely program invariants to support program evolution,"Ernst M.D., Cockrell J., Griswold W.G., Notkin D., Dynamically discovering likely program invariants to support program evolution, IEEE Transactions on Software Engineering, 27, 2, pp. 99-123, (2001)",Exclude,""
esp: path-sensitive program verification in polynomial time,"Das M., Lerner S., Seigle M., ESP: Path-Sensitive Program Verification in Polynomial Time, Proceedings of the ACM SIGPLAN 2002 Conference on Programming Language Design and Implementation (PLDI ?02). Association for Computing Machinery, pp. 57-68, (2002)",Include,Exclude
exceptional situations and program reliability,"Weimer W., Necula G.C., Exceptional situations and program reliability, ACM Transactions on Programming Languages and Systems, 30, 2, pp. 1-51, (2008)",Exclude,""
the detection of fault-prone programs,"Munson J.C., Khoshgoftaar T.M., The detection of fault-prone programs, IEEE Trans. Softw. Eng., 26, 5, pp. 423-433, (1992)",Exclude,""
a tool for checking ansic programs,"Clarke E., Kroening D.F., A tool for checking ANSIC programs, Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2004), pp. 168-176, (2004)",Exclude,""
signature verification using a 'siamese' time delay neural network,"Bromley J., Guyon I., LeCun Y., Sackinger E., Shah R., Signature verification using a 'Siamese' time delay neural network, Proc. Adv. Neural Inf. Process. Syst., 6, pp. 1-8, (1993)",Include,Exclude
learning loop invariants for program verification,"Si X., Dai H., Raghothaman M., Naik M., Song L., Learning loop invariants for program verification, Proceedings of the 32nd International Conference on Neural Information Processing Systems (NIPS'18), (2018)",Exclude,""
automated correction for syntax errors in programming assignments using recurrent neural networks,"Bhatia S., Singh R., Automated correction for syntax errors in programming assignments using recurrent neural networks, CoRR, (2016)",Exclude,""
localizing and explaining reasons for non-terminating logic programs with failure-slices,"Neumerkel U., Mesnard F., Localizing and Explaining Reasons for Non-terminating Logic Programs with Failure-Slices, Principles and Practice of Declarative Programming, International Conference PPDP'99, 1702, pp. 328-342, (1999)",Exclude,""
semantic program alignment for equivalence checking,"Churchill B.R., Padon O., Sharma R., Aiken A., Semantic program alignment for equivalence checking, Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI, pp. 1027-1040, (2019)",Exclude,""
effective program debloating via reinforcement learning,"Heo K., Lee W., Pashakhanloo P., Naik M., Effective program debloating via reinforcement learning, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, pp. 380-394, (2018)",Include,Include
learning program embeddings to propagate feedback on student code,"Piech C., Huang J., Nguyen A., Phulsuksombati M., Sahami M., Guibas L., Learning program embeddings to propagate feedback on student code, International conference on machine Learning, pp. 1093-1102, (2015)",Include,Include
neural attribution for semantic bug-localization in student programs,"Gupta R., Kanade A., Shevade S., Neural attribution for semantic bug-localization in student programs, NeurIPS, (2019)",Include,Include
cpack of ipas: a c90 program benchmark of introductory programming assignments,"Orvalho P., Janota M., Manquinho V., CPack of IPAs: A C90 Program Benchmark of Introductory Programming Assignments, (2022)",Exclude,""
mining business topics in source code using latent dirichlet allocation,"Maskeri G., Sarkar S., Heafield K., Mining business topics in source code using latent dirichlet allocation, Proceedings of the 2008 1st India Software Engineering Conference, ISEC'08, pp. 113-120, (2008)",Exclude,""
non-essential changes in version histories,"Kawrykow D., Robillard M.P., Non-essential changes in version histories, Proceeding 33rd Int. Conf. Softw. Eng.-ICSE'11, (2011)",Exclude,""
incorporating version histories in information retrieval based bug localization,"Sisman B., Kak A.C., Incorporating version histories in information retrieval based bug localization, In Proceedings of 9Th IEEE Working Conference on Mining Software Repositories., (2012)",Exclude,""
compositional vector space models for improved bug localization,"Wang S., Lo D., Lawall J., Compositional vector space models for improved bug localization, In Proceedings of IEEE International Conference on Software Maintenance and Evolution (ICSME)., (2014)",Exclude,""
incbl: incremental bug localization,"Yang Z., Shi J., Wang S., Lo D., IncBL: Incremental bug localization, 36th IEEE/ACM International Conference on Automated Software Engineering, ASE 2021, Melbourne, Australia, November 15-19, 2021, pp. 1223-1226, (2021)",Exclude,""
an approach for bug localization in models using two levels: model and metamodel,"Arcega L., Font J., Haugen O., Cetina C., An approach for bug localization in models using two levels: model and metamodel, Softw Syst Model, 18, 6, pp. 3551-3576, (2019)",Exclude,""
bug localization with combination of deep learning and information retrieval,"Lam A.N., Nguyen A.T., Nguyen H.A., Nguyen T.N., Bug localization with combination of deep learning and information retrieval, 2017 IEEE/ACM 25Th International Conference on Program Comprehension, pp. 218-229, (2017)",Include,Exclude
where2change: change request localization for app reviews,"Zhang T., Chen J., Zhan X., Luo X., Lo D., Jiang H., Where2Change: change request localization for app reviews, IEEE Transactions on Software Engineering, 47, 11, pp. 2590-2616, (2021)",Exclude,""
improving bug localization using structured information retrieval,"Saha Ripon K., Lease Matthew, Khurshid Sarfraz, Perry Dewayne E., Improving bug localization using structured information retrieval, 28th IEEE/ACM International Conference on Automated Software Engineering, pp. 345-355, (2013)",Exclude,""
deep learning with customized abstract syntax tree for bug localization,"Liang H., Sun L., Wang M., Yang Y., Deep learning with customized abstract syntax tree for bug localization, IEEE Access, 7, pp. 116309-116320, (2019)",Include,Include
potential biases in bug localization: do they matter?,"Kochhar P.S., Tian Y., Lo D., Potential biases in bug localization: Do they matter?, Proceedings of the 29Th ACM/IEEE International Conference on Automated Software Engineering, pp. 803-814, (2014)",Exclude,""
structured information in bug report descriptions - influence on ir-based bug localization and developers,"Rath M., Mader P., Structured information in bug report descriptions - influence on IR-based bug localization and developers, Softw Qual J, 27, 3, pp. 1315-1337, (2019)",Exclude,""
a deep multimodal model for bug localization,"Zhu Z., Li Y., Wang Y., Wang Y., Tong H., A deep multimodal model for bug localization, Data Mining and Knowledge Discovery, (2021)",Exclude,""
bug localization via supervised topic modeling,"Wang Yaojing, Yao Yuan, Tong Hanghang, Huo Xuan, Li Ming, Xu Feng, Lu Jian, Bug localization via supervised topic modeling, 18th IEEE International Conference on Data Mining, pp. 607-616, (2018)",Exclude,""
mining cause-effect-chains from version histories,"Herzig K., Zeller A., Mining cause-effect-chains from version histories, Software Reliability Engineering (ISSRE), 2011 IEEE 22nd International Symposium On. IEEE, pp. 60-69, (2011)",Exclude,""
exploiting code knowledge graph for bug localization via bi-directional attention,"Zhang J., Xie R., Ye W., Zhang Y., Zhang S., Exploiting code knowledge graph for bug localization via bi-directional attention, pp. 219-229, (2020)",Include,Include
bug localization using latent dirichlet allocation,"Lukins S.K., Kraft N.A., Etzkorn L.H., Bug localization using latent Dirichlet allocation, Information and Software Technology, 52, 9, (2012)",Exclude,""
beep: fine-grained fix localization by learning to predict buggy code elements,"Wang S., Liu K., Lin B., Li L., Klein J., Mao X., Bissyande T.F., Beep: Fine-grained Fix Localization by Learning to Predict Buggy Code Elements, (2021)",Include,Exclude (Pre-print)
populating a release history database from version control and bug tracking systems,"Fischer Michael, Pinzger Martin, Gall Harald, Populating a release history database from version control and bug tracking systems, International Conference on Software Maintenance, pp. 23-32, (2003)",Exclude,""
improved bug localization based on code change histories and bug reports,"Youm K.C., Ahn J., Lee E., Improved bug localization based on code change histories and bug reports, Information and Software Technology, 82, pp. 177-192, (2017)",Exclude,""
cooba: cross-project bug localization via adversarial transfer learning,"Zhu Z., Li Y., Tong H., Wang Y., COOBA: Cross-project bug localization via adversarial transfer learning, pp. 3565-3571, (2020)",Include,Include
can automated program repair refine fault localization? a unified debugging approach,"Lou Y., Ghanbari A., Li X., Zhang L., Zhang H., Hao D., Zhang L., Can automated program repair refine fault localization? a unified debugging approach, Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA 2020, pp. 75-87, (2020)",Exclude,""
improving ir-based bug localization with context-aware query reformulation,"Rahman M.M., Roy C.K., Improving IR-based bug localization with context-aware query reformulation, Proceedings of the 2018 26th ACM joint meeting on European software engineering conference and symposium on the foundations of software engineering, (2018)",Exclude,""
slicing in the presence of parameter aliasing,"Binkley D., Slicing in the presence of parameter aliasing, Software Engineering Research Forum, pp. 261-268, (1993)",Exclude,""
source code retrieval for bug localization using latent dirichlet allocation,"Lukins Stacy K., Kraft Nicholas A., Etzkorn Letha H., Source code retrieval for bug localization using latent dirichlet allocation, Proceedings of the 15th Working Conference on Reverse Engineering, pp. 155-164, (2008)",Exclude,""
whosefault: automatic developer-to-fault assignment through fault localization,"Servant F., Jones J.A., WhoseFault: Automatic developer-to-fault assignment through fault localization, 2012 34Th International Conference on Software Engineering (ICSE), Pp. 36–46. IEEE, (2012)",Exclude,""
cause clue clauses: error localization using maximum satisfiability,"Jose M., Majumdar R., Cause clue clauses: Error localization using maximum satisfiability, Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI 2011, pp. 437-446, (2011)",Exclude,""
spectrum-based fault localization: testing oracles are no longer mandatory,"Xie X., Wong W. E., Chen T. Y., Xu B., Spectrum-based fault localization: Testing oracles are no longer mandatory, 2011 11th International Conference on Quality Software. IEEE, pp. 1-10, (2011)",Exclude,""
comparing learning to rank techniques in hybrid bug localization,"Shi Z., Keung J., Bennin K.E., Zhang X., Comparing learning to rank techniques in hybrid bug localization, Appl. Soft Comput., 62, pp. 636-648, (2018)",Exclude,""
exploring machine learning techniques for fault localization,"Ascari L.C., Araki L.Y., Pozo A.R., Vergilio S.R., Exploring machine learning techniques for fault localization, In Proceedings of 10Th Latin American Test Workshop., (2009)",Exclude,""
bp neural network-based effective fault localization,"Wong W.E., Qi Y., BP Neural Network-based Effective Fault Localization, International Journal of Software Engineering and Knowledge Engineering, 19, 4, (2019)",Include,Include
on the accuracy of spectrum-based fault localization,"Abreu R., Zoeteweij P., Van Gemund A. J., On the accuracy of spectrum-based fault localization, Testing: Academic and industrial conference practice and research techniques-MUTATION (TAICPARTMUTATION 2007), pp. 89-98, (2007)",Exclude,""
empirical evaluation of the tarantula automatic fault-localization technique,"Jones J. A., Harrold M. J., Empirical evaluation of the tarantula automatic fault-localization technique, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, pp. 273-282, (2005)",Exclude,""
deepfl: integrating multiple fault diagnosis dimensions for deep fault localization,"Li X., Li W., Zhang Y., Zhang L., Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization, Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis, pp. 169-180, (2019)",Include,Include
an empirical study of fault localization families and their combinations,"Zou D., Liang J., Xiong Y., Ernst M.D., Zhang L., An empirical study of fault localization families and their combinations, IEEE Transactions on Software Engineering, 2019, (2019)",Exclude,""
a family of code coveragebased heuristics for effective fault,"Wong W.E., Debroy V., Choi B., A family of code coveragebased heuristics for effective fault, The Journal of Systems and Software (JSS), 83, 2, pp. 188-208, (2010)",Exclude,""
“retrieval from software libraries for bug localization: a comparative study of generic and composite text models,"“Retrieval from software libraries for bug localization: A comparative study of generic and composite text models, MSR., (2011)",Exclude,""
cumulated gain-based evaluation of ir techniques,"Jarvelin K., Kekalainen J., Cumulated gain-based evaluation of IR techniques, ACM Trans. Inf. Syst. (TOIS), 20, 4, pp. 422-446, (2002)",Exclude,""
fluccs: using code and change metrics to improve fault localization,"Sohn J., Yoo S., Fluccs: Using code and change metrics to improve fault localization, Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis, pp. 273-283, (2017)",Exclude,""
boosting coverage-based fault localization via graphbased representation learning,"Lou Y., Zhu Q., Dong J., Li X., Sun Z., Hao D., Zhang L., Zhang L., Boosting coverage-based fault localization via graphbased representation learning, Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering., pp. 664-676, (2021)",Include,Exclude
feature-fl: feature-based fault localization,"Lei Y., Xie H., Zhang T., Yan M., Zhou X., Sun C., Feature-FL: feature-based fault localization, IEEE Trans Reliab, 71, 1, pp. 264-283, (2022)",Exclude,""
ask the mutants: mutating faulty programs for fault localization,"Moon S., Kim Y., Kim M., Yoo S., Ask the mutants: Mutating faulty programs for fault localization, 2014 IEEE Seventh Inter-national Conference on Software Testing, Verification and Validation, pp. 153-162, (2014)",Exclude,""
practitioners' expectations on automated fault localization,"Kochhar P. S., Xia X., Lo D., Li S., Practitioners' expectations on automated fault localization, Proceedings of the 25th International Symposium on Software Testing and Analysis, pp. 165-176, (2016)",Exclude,""
on the influence of multiple faults on coverage-based fault localization,"On the influence of multiple faults on coverage-based fault localization, In Proceedings of the 2011 International Symposium on Software Testing and Analysis (ISSTA)., (2011)",Exclude,""
spectrum-based software fault localization: a survey of techniques,"de Souza H. A., Chaim M. L., Kon F., Spectrum-based software fault localization: A survey of techniques, advances, and challenges, (2016)",Exclude,""
an evaluation of similarity coefficients for software fault localization,"Abreu R., Zoeteweij P., Van Gemund A. J., An evaluation of similarity coefficients for software fault localization, 2006 12th Pacific Rim International Symposium on Dependable Computing (PRDC'06). IEEE, pp. 39-46, (2006)",Exclude,""
test input reduction for result inspection to facilitate fault localization,"Hao D., Xie T., Zhang L., Wang X., Sun J., Mei H., Test input reduction for result inspection to facilitate fault localization, (2012)",Exclude,""
learning a graph-based classifier for fault localization,"Zhong H., Mei H., Learning a graph-based classifier for fault localization, Science China Information Sciences, 63, (2020)",Include,Include
selecting fault revealing mutants,"Titcheu Chekam T., Papadakis M., Bissyande T.F., Le Traon Y., Sen K., Selecting fault revealing mutants, Empir. Softw. Eng., 25, 1, pp. 434-487, (2020)",Exclude,""
towards better fault localization: a crosstab-based statistical approach,"Wong W.E., Debroy V., Xu D., Towards better fault localization: A crosstab-based statistical approach, IEEE Trans, 42, 3, (2012)",Exclude,""
a learning-to-rank based fault localization approach using likely invariants,"Le T.B., Lo D., Le Goues C., Grunske L., A learning-to-rank based fault localization approach using likely invariants, ISSTA, pp. 177-188, (2016)",Exclude,""
"using mutants to locate ""unknown"" faults","Papadakis M., Le Traon Y., Using mutants to locate ""unknown"" faults, 2012 IEEE Fifth International Conference on Software Test-ing, Verification and Validation, pp. 691-700, (2012)",Exclude,""
software fault localization using dstar (d),"Wong W. E., Debroy V., Li Y., Gao R., Software fault localization using dstar (d), 2012 IEEE Sixth International Conference on Software Security and Reliability. IEEE, pp. 21-30, (2012)",Exclude,""
effective fault localization via mutation analysis: a selective mutation approach,"Papadakis M., Le Traon Y., Effective fault localization via mutation analysis: A selective mutation approach, Proceedings of the 29th annual ACM symposium on applied computing, pp. 1293-1300, (2014)",Exclude,""
metallaxis-fl: mutation-based fault localization,"Papadakis M., Le Traon Y., Metallaxis-fl: mutation-based fault localization, Software Testing, Verification and Reliability, 25, 5-7, pp. 605-628, (2015)",Exclude,""
evaluating the usefulness of ir-based fault localization techniques,"Wang Q., Parnin C., Orso A., Evaluating the usefulness of IR-based fault localization techniques, In Proceedings of International Symposium on Software Testing and Analysis (ISSTA)., (2015)",Exclude,""
faster mutation-based fault localization with a novel mutation execution strategy,"Gong P., Zhao R., Li Z., Faster mutation-based fault localization with a novel mutation execution strategy, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW). IEEE, pp. 1-10, (2015)",Exclude,""
a survey on software fault localization,"Wong W. E., Gao R., Li Y., Abreu R., Wotawa F., A survey on software fault localization, IEEE Transactions on Software Engineering, 42, 8, pp. 707-740, (2016)",Exclude,""
a grouping-based strategy to improve the effectiveness of fault localization techniques,"Debroy V., Wong W. E., Xu X., Choi B., A grouping-based strategy to improve the effectiveness of fault localization techniques, 2010 10th International Conference on Quality Software. IEEE, pp. 13-22, (2010)",Exclude,""
transforming programs and tests in tandem for fault localization,"Li X., Zhang L., Transforming programs and tests in tandem for fault localization, Proceedings of the ACM on Programming Languages, 1, pp. 1-30, (2017)",Exclude,""
vulnerability detection with deep learning. proceedings of the 3rd ieee international conference on computer and communications,"Wu F., Wang J., Liu J., Wang W., Vulnerability detection with deep learning. Proceedings of the 3rd IEEE International Conference on Computer and Communications",Include,Exclude
vulsniper: focus your attention to shoot fine-grained vulnerabilities. proceedings of the 28th international joint conference on artificial intelligence,"Duan X., Wu J., Ji S., Et al., VulSniper: focus your attention to shoot fine-grained vulnerabilities. Proceedings of the 28th International Joint Conference on Artificial Intelligence",Exclude,""
machine learning methods for improving vulnerability detection in low-level code. proceedings of the 2020 ieee international conference on big data,"Letychevskyi O., Hryniuk Y., Machine learning methods for improving vulnerability detection in low-level code. Proceedings of the 2020 IEEE International Conference on Big Data",Include,Exclude
gvd-net: graph embedding-based machine learning model for smart contract vulnerability detection. proceedings of the 2022 international conference on algorithms,"Wang Z., Zheng Q., Sun Y., GVD-net: graph embedding-based machine learning model for smart contract vulnerability detection. Proceedings of the 2022 International Conference on Algorithms, Data Mining, and Information Technology",Include,Include
collaboration challenges in building ml-enabled systems: communication,"Nahar N., Zhou S., Lewis G., Kastner C., Collaboration Challenges in Building ML-Enabled Systems: Communication, Documentation, Engineering, and Process, Organization, 1, 2, (2022)",Exclude,""
graph neural network-based vulnerability predication. proceedings of the 2020 ieee international conference on software maintenance and evolution,"Feng Q., Feng C., Hong W., Graph neural network-based vulnerability predication. Proceedings of the 2020 IEEE International Conference on Software Maintenance and Evolution",Include,Exclude (Duplicate)
joint prediction of multiple vulnerability characteristics through multi-task learning. proceedings of the 2019 24th international conference on engineering of complex computer systems,"Gong X., Xing Z., Li X., Feng Z., Han Z., Joint prediction of multiple vulnerability characteristics through multi-task learning. Proceedings of the 2019 24th International Conference on Engineering of Complex Computer Systems",Exclude,""
mvp: detecting vulnerabilities using patch-enhanced vulnerability signatures. proceedings of the 29th usenix security symposium,"Xiao Y., Chen B., Yu C., Et al., MVP: detecting vulnerabilities using patch-enhanced vulnerability signatures. Proceedings of the 29th USENIX Security Symposium",Exclude,""
movery: a precise approach for modified vulnerable code clone discovery from modified open-source software components. proceedings of the 31st usenix security symposium,"Woo S., Hong H., Choi E., Lee H., MOVERY: a precise approach for modified vulnerable code clone discovery from modified open-source software components. Proceedings of the 31st USENIX Security Symposium",Exclude,""
learning-based recursive aggregation of abstract syntax trees for code clone detection. proceedings of the 2019 ieee 26th international conference on software analysis,"Buch L., Andrzejak A., Learning-based recursive aggregation of abstract syntax trees for code clone detection. Proceedings of the 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering",Include,Include
toward large-scale vulnerability discovery using machine learning. proceedings of the sixth acm conference on data and application security and privacy,"Grieco G., Grinblat G.L., Uzal L., Rawat S., Feist J., Mounier L., Toward large-scale vulnerability discovery using machine learning. Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy",Include,Exclude
vuddy: a scalable approach for vulnerable code clone discovery. proceedings of the 2017 ieee symposium on security and privacy,"Kim S., Woo S., Lee H., Oh H., VUDDY: a scalable approach for vulnerable code clone discovery. Proceedings of the 2017 IEEE Symposium on Security and Privacy",Exclude,""
predicting common web application vulnerabilities from input validation and sanitization code patterns. proceedings of the 27th ieee/acm international conference on automated software engineering,"Shar L.K., Tan H.B.K., Predicting common web application vulnerabilities from input validation and sanitization code patterns. Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering",Exclude,""
automated vulnerability detection in source code using deep representation learning. proceedings of the 2018 17th ieee international conference on machine learning and applications,"Russell R., Kim L., Hamilton L., Et al., Automated vulnerability detection in source code using deep representation learning. Proceedings of the 2018 17th IEEE International Conference on Machine Learning and Applications",Include,Exclude
vgraph: a robust vulnerable code clone detection system using code property triplets. proceedings of the 2020 ieee european symposium on security and privacy,"Bowman B., Huang H.H., VGRAPH: a robust vulnerable code clone detection system using code property triplets. Proceedings of the 2020 IEEE European Symposium on Security and Privacy",Include,Include
national institute of standards and technology,"National Institute of Standards and Technology, (2021)",Exclude,""
static detection of control-flow-related vulnerabilities using graph embedding. proceedings of the 2019 24th international conference on engineering of complex computer systems (iceccs),"Cheng X., Wang H., Hua J., Et al., Static detection of control-flow-related vulnerabilities using graph embedding. Proceedings of the 2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)",Include,Include
path-sensitive code embedding via contrastive learning for software vulnerability detection. proceedings of the 31st acm sigsoft international symposium on software testing and analysis,"Cheng X., Zhang G., Wang H., Sui Y., Path-sensitive code embedding via contrastive learning for software vulnerability detection. Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis",Include,Exclude (Duplicate)
the fog of warnings: how non-essential notifications blur with security warnings fifteenth symposium on usable privacy and security (soups 2019),"Vance A., Eargle D., Jenkins J.L., Kirwan C.B., Anderson B.B., The Fog Of Warnings: How Non-Essential Notifications Blur With Security Warnings Fifteenth Symposium on Usable Privacy and Security (SOUPS 2019), pp. 407-420, (2019)",Exclude,""
2021. modular call graph construction for security scanning of node. js applications,"Barslev Nielsen B., Toldam Torp M., Muller A., 2021. Modular call graph construction for security scanning of Node. js applications, Proceedings of the 30th ACM SIGSOFT International Symposium on Software Testing and Analysis. 29-41",Include,Exclude
learning binary code with deep learning to detect software weakness. proceedings of the 9th international conference on internet (iconi) 2017 symposium,"Lee Y.J., Choi S.H., Kim C., Lim S., Park K., Learning binary code with deep learning to detect software weakness. Proceedings of the 9th International Conference on Internet (ICONI) 2017 Symposium",Exclude,""
end-to-end prediction of buffer overruns from raw source code via neural memory networks. proceedings of the twenty-sixth international joint conference on artificial intelligence (ijcai-17),"Choi M., Jeong S., Oh H., Choo J., End-to-end prediction of buffer overruns from raw source code via neural memory networks. Proceedings of the Twenty-Sixth International Joint Conference on Artificial Intelligence (IJCAI-17)",Include,Exclude
vulnerability detection with fine-grained interpretations. proceedings of the 29th acm joint meeting on european software engineering conference and symposium on the foundations of software engineering,"Li Y., Wang S., Nguyen T.N., Vulnerability detection with fine-grained interpretations. Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering",Exclude,""
recommending good first issues in github oss projects,"Xiao W., He H., Xu W., Tan X., Dong J., Zhou M., Recommending good first issues in GitHub OSS projects, ICSE, pp. 1830-1842, (2022)",Exclude,""
github repository for this paper's data and code,"Github Repository for This Paper's data and Code, (2021)",Exclude,""
a survey of git best practices,"Golden D., A Survey of Git Best Practices",Exclude,""
higitclass: keyword-driven hierarchical classification of github repositories,"Zhang Y., Xu F.F., Li S., Meng Y., Wang X., Li Q., Han J., Higitclass: Keyword-driven hierarchical classification of github repositories, ICDM, pp. 876-885, (2019)",Exclude,""
circle github repository,"Circle github repository, (2022)",Exclude,""
understanding the factors that impact the popularity of github repositories,"Borges H., Hora A., Tulio Valente M., Understanding the factors that impact the popularity of GitHub repositories, ICSME, pp. 334-344, (2016)",Exclude,""
an application of the pagerank algorithm to commit evaluation on git repository,"Suzuki S., Aman H., Amasaki S., Yokogawa T., Kawahara M., An application of the PageRank algorithm to commit evaluation on git repository, Proc. 43rd Euromicro Conf. Softw. Eng. Adv. Appl., pp. 380-383, (2017)",Include,Exclude
github introduction,"GitHub Introduction, (2022)",Include,""
github,"Github, (2021)",Include,""
detecting similar repositories on github,"Zhang Y., Lo D., Singh Kochhar P., Xia X., Li Q., Sun J., Detecting similar repositories on GitHub, SANER, (2017)",Exclude,""
patterns of folder use and project popularity: a case study of github repositories,"Zhu J., Zhou M., Mockus A., Patterns of folder use and project popularity: A case study of GitHub repositories, ESEM, pp. 1-4, (2014)",Exclude,""
reviewer recommendation for pull-requests in github: what can we learn from code review and bug assignment?,"Yu Y., Wang H., Yin G., Wang T., Reviewer recommendation for pull-requests in GitHub: What can we learn from code review and bug assignment?, Information and Software Technology, 74, pp. 204-218, (2016)",Exclude,""
paper2repo: github repository recommendation for academic papers,"Shao H., Sun D., Wu J., Zhang Z., Zhang A., Yao S., Liu S., Wang T., Zhang C., Abdelzaher T., paper2repo: GitHub repository recommendation for academic papers, WWW, pp. 629-639, (2020)",Exclude,""
personalized teammate recommendation for crowdsourced software developers,"Ye L., Sun H., Wang X., Wang J., Personalized teammate recommendation for crowdsourced software developers, Proceedings of the 33Rd ACM/IEEE International Conference on Automated Software Engineering, pp. 808-813, (2018)",Exclude,""
the github repository for this study,"The GitHub Repository for This Study, (2019)",Exclude,""
scalable relevant project recommendation on github,"Xu W., Sun X., Xia X., Chen X., Scalable relevant project recommendation on GitHub, Internetware, pp. 1-10, (2017)",Exclude,""
reviewer recommender of pull-requests in github,"Yu Y., Wang H., Yin G., Ling C.X., Reviewer recommender of pull-requests in github, IEEE International Conference on Software Maintenance and Evolution, pp. 609-612, (2014)",Exclude,""
sourcefinder finding malware source-code from publicly available repositories in github,"Faruk Rokon O., Islam R., Darki A., Papalexakis E.E., Faloutsos M., Sourcefinder Finding malware source-code from publicly available repositories in github, RAID, (2020)",Exclude,""
open source software recommendations using github,"Koskela M., Simola I., Stefanidis K., Open source software recommendations using github, TPDL, (2018)",Exclude,""
5 best git practices for git commit,5 Best Git Practices for Git Commit,Exclude,""
how bad can it git? characterizing secret leakage in public github repositories,"Meli M., McNiece M.R., Reaves B., How Bad Can It Git? Characterizing Secret Leakage in Public GitHub Repositories, NDSS, (2019)",Exclude,""
correct: code reviewer recommendation in github based on cross-project and technology experience,"Rahman M.M., Roy C.K., Collins J.A., Correct: code reviewer recommendation in github based on cross-project and technology experience, International Conference on Software Engineering Companion, pp. 222-231, (2016)",Exclude,""
github number of repositories,"Github Number of Repositories, (2022)",Exclude,""
2017. which log level should developers choose for a new logging statement? empirical software engineering,"Li H., Shang W., Hassan A.E., 2017. Which Log Level Should Developers Choose for A New Logging Statement? Empirical Software Engineering, pp. 1684-1716, (2017)",Exclude,""
log20: fully automated optimal placement of log printing statements under specified overhead threshold,"Zhao X., Rodrigues K., Luo Y., Stumm M., Yuan D., Zhou Y., Log20: Fully automated optimal placement of log printing statements under specified overhead threshold, Proceedings of the 26th Symposium on Operating Systems Principles (SOSP, (2017)",Exclude,""
where do developers log? an empirical study on logging practices in industry,"Fu Q., Zhu J., Hu W., Lou J., Ding R., Lin Q., Zhang D., Xie T., Where do developers log? an empirical study on logging practices in industry, Companion Proceedings of the 36th International Conference on Software Engineering (ICSE). 24-33, (2014)",Exclude,""
anomaly detection using program control flow graph mining from execution logs,"Nandi A., Mandal A., Atreja S., Dasgupta G.B., Bhattacharya S., Anomaly detection using program control flow graph mining from execution logs, Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD). 215-224, (2016)",Exclude,""
where shall we log? studying and suggesting logging locations in code blocks,"Li Z., Chen T., Shang W., Where shall we log? studying and suggesting logging locations in code blocks, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE). 361-372, (2020)",Exclude,""
interactive anomaly detection on attributed networks,"Ding K., Li J., Liu H., Interactive anomaly detection on attributed networks, pp. 357-365, (2019)",Exclude,""
2020. a qualitative study of the benefits and costs of logging from developers? perspectives,"Li H., Shang W., Adams B., Sayagh M., Hassan A.E., 2020. A qualitative study of the benefits and costs of logging from developers? perspectives, IEEE Transactions on Software Engineering, (2020)",Exclude,""
robust log-based anomaly detection on unstable log data,"Zhang X., Xu Y., Lin Q., Qiao B., Zhang H., Dang Y., Xie C., Yang X., Cheng Q., Li Z., Et al., Robust log-based anomaly detection on unstable log data, Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE). 807-817, (2019)",Exclude,""
efficiently extracting operational profiles from execution logs using suffix arrays,"Nagappan M., Wu K., Vouk M.A., Efficiently extracting operational profiles from execution logs using suffix arrays, 2009 20th International Symposium on Software Reliability Engineering (ISSRE). 41-50, (2009)",Exclude,""
sherlog: error diagnosis by connecting clues from run-time logs,"Yuan D., Mai H., Xiong W., Tan L., Zhou Y., Pasupathy S., Sherlog: Error diagnosis by connecting clues from run-Time logs, Proceedings of the Fifteenth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS). 143-154, (2010)",Exclude,""
an approach to recommendation of verbosity log levels based on logging intention,"Anu H., Chen J., Shi W., Hou J., Liang B., Qin B., An approach to recommendation of verbosity log levels based on logging intention, 2019 IEEE International Conference on Software Maintenance and Evolution (ICSME), pp. 125-134, (2019)",Exclude,""
an automated approach to estimating code coverage measures via execution logs,"Chen B., Song J., Xu P., Hu X., Ming Jiang Z., An automated approach to estimating code coverage measures via execution logs, Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering (ASE). 305-316, (2018)",Exclude,""
2021 deeplv: suggesting log levels using ordinal based neural networks,"Li Z., Li H., Peter Chen T., Shang W., 2021 DeepLV: Suggesting Log Levels Using Ordinal Based Neural Networks, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE). 1461-1472",Include,Include
identifying impactful service system problems via log analysis,"He S., Lin Q., Lou J., Zhang H., Lyu M.R., Zhang D., Identifying impactful service system problems via log analysis, Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE). 60-70, (2018)",Exclude,""
logtracker: learning log revision behaviors proactively from software evolution history,"Li S., Niu X., Jia Z., Wang J., He H., Wang T., Logtracker: Learning log revision behaviors proactively from software evolution history, Proceedings of the 26th Conference on Program Comprehension., pp. 178-188, (2018)",Exclude,""
learning to log: helping developers make informed logging decisions,"Zhu J., He P., Fu Q., Zhang H., Lyu M.R., Zhang D., Learning to log: Helping developers make informed logging decisions, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering (ICSE). 415-425, (2015)",Exclude,""
watson: abstracting behaviors from audit logs via aggregation of contextual semantics,"Zeng J., Chua Z.L., Chen Y., Ji K., Liang Z., Mao J., Watson: Abstracting behaviors from audit logs via aggregation of contextual semantics, NDSS, (2021)",Exclude,""
structured comparative analysis of systems logs to diagnose performance problems,"Nagaraj K., Killian C., Neville J., Structured comparative analysis of systems logs to diagnose performance problems, 9th {USENIX} Symposium on Networked Systems Design and Implementation (NSDI, (2012)",Exclude,""
effective api recommendation without historical software repositories,"Liu X., Huang L., Ng V., Effective API recommendation without historical software repositories, Proc. 33rd ACM/IEEE Int. Conf. Automated Softw. Eng., pp. 282-292, (2018)",Exclude,""
investigating next steps in static api-misuse detection,"Sven A., Nguyen H. A., Nadi S., Nguyen T. N., Mezini M., Investigating next steps in static api-misuse detection, Proceedings of the 2019 16th IEEE/ACM International Conference on Mining Software Repositories, pp. 265-275, (2019)",Exclude,""
parameter-free probabilistic api mining across github,"Fowkes J., Sutton C., Parameter-free probabilistic API mining across GitHub, . In: Proceedings of the 2016 24Th ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE 2016)., pp. 254-265, (2016)",Exclude,""
rack: automatic api recommendation using crowdsourced knowledge,"Rahman M. M., Roy C. K., Lo D., Rack: Automatic api recommendation using crowdsourced knowledge, Proceedings of the 2016 23rd IEEE International Conference on Software Analysis, Evolution, and Reengineering, 1, pp. 349-359, (2016)",Exclude,""
learning to recommend third-party library migration opportunities at the api level,"Alrubaye H., Mkaouer M. W., Khokhlov I., Reznik L., Ouni A., Mcgoff J., Learning to recommend third-party library migration opportunities at the api level, Applied Soft Computing, 90, pp. 1-12, (2020)",Exclude,""
mining api mapping for language migration,"Zhong H., Thummalapenta S., Xie T., Zhang L., Wang Q., Mining API mapping for language migration, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, 1, pp. 195-204, (2010)",Exclude,""
biker: a tool for bi-information source based api method recommendation,"Cai L., Wang H., Huang Q., Xia X., Xing Z., Lo D., Biker: a tool for bi-information source based api method recommendation, Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 1075-1079, (2019)",Exclude,""
mining succinct and high-coverage api usage patterns from source code,"Wang J., Dang Y., Zhang H., Chen K., Xie T., Zhang D., Mining succinct and high-coverage API usage patterns from source code, Proc. 10th Work. Conf. Mining Softw. Repositories, pp. 319-328, (2013)",Exclude,""
bayesian specification learning for finding api usage errors,"Murali V., Chaudhuri S., Jermaine C., Bayesian specification learning for finding api usage errors, ESEC/FSE, pp. 151-162, (2017)",Exclude,""
path-based function embedding and its application to error-handling specification mining,"DeFreez D., Thakur A.V., Rubio-Gonzalez C., Path-based function embedding and its application to error-handling specification mining, ESEC/FSE, pp. 423-433, (2018)",Include,Include
meditor: inference and application of api migration edits,"Xu S., Dong Z., Meng N., Meditor: inference and application of api migration edits, Proceedings of the 2019 27th IEEE/ACM International Conference on Program Comprehension, pp. 335-346, (2019)",Exclude,""
active learning of discriminative subgraph patterns for api misuse detection,"Kang H. J., Lo D., Active learning of discriminative subgraph patterns for api misuse detection, IEEE Transactions on Software Engineering, (2021)",Include,Include
exploring api embedding for api usages and applications,"Nguyen Trong Duc, Nguyen Anh Tuan, Phan Hung Dang, Nguyen Tien N., Exploring api embedding for api usages and applications, Proceedings of the 39th International Conference on Software Engineering, ICSE'17, pp. 438-449, (2017)",Exclude,""
bcc: enhancing code completion for better api usability,"Pletcher D.M., Hou D., BCC: Enhancing code completion for better API usability, Proc. IEEE Int. Conf. Softw. Maintenance, pp. 393-394, (2009)",Exclude,""
mining likely analogical apis across third-party libraries via large-scale unsupervised api semantics embedding,"Chen C., Xing Z., Liu Y., Ong K. L. X., Mining likely analogical apis across third-party libraries via large-scale unsupervised api semantics embedding, IEEE Transactions on Software Engineering, (2019)",Exclude,""
api method recommendation without worrying about the task-api knowledge gap,"Huang Q., Xia X., Xing Z., Lo D., Wang X., API method recommendation without worrying about the task-API knowledge gap, 2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 293-304, (2018)",Exclude,""
identifier-based context-dependent api method recommendation,"Heinemann L., Bauer V., Herrmannsdoerfer M., Hummel B., Identifier-based context-dependent API method recommendation, Proc. 16th Eur. Conf. Softw. Maintenance Reeng., pp. 31-40, (2012)",Exclude,""
generative api usage code recommendation with parameter concretization,"Chen C., Et al., Generative API usage code recommendation with parameter concretization, SCIENCE CHINA Inf. Sci., 62, 9, pp. 1921031-19210322, (2019)",Include,Include
mining temporal specifications from object usage,"Wasylkowski A., Zeller A., Mining temporal specifications from object usage, Automated Software Engineering, 18, 3, pp. 263-292, (2011)",Exclude,""
api code recommendation using statistical learning from fine-grained changes,"Nguyen A.T., Hilton M., Codoban M., Nguyen H.A., Mast L., Rademacher E., Nguyen T.N., Dig D., Api code recommendation using statistical learning from fine-grained changes, Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 511-522, (2016)",Exclude,""
graph neural network based collaborative filtering for api usage recommendation,"Ling C., Zou Y., Xie B., Graph neural network based collaborative filtering for api usage recommendation, Proceedings of the 2021 IEEE International Conference on Software Analysis, Evolution and Reengineering, pp. 36-47, (2021)",Include,Include
heuristic and neural network based prediction of project-specific api member access,"Jiang L., Liu H., Jiang H., Zhang L., Mei H., Heuristic and neural network based prediction of project-specific api member access, IEEE Trans. Softw. Eng., (2020)",Include,Exclude
apimisuse detection driven by fine-grained api-constraint knowledge graph,"Ren X., Ye X., Xing Z., Xia X., Xu X., Zhu L., Sun J., Apimisuse detection driven by fine-grained api-constraint knowledge graph, Proceedings of the 2020 35th IEEE/ACM International Conference on Automated Software Engineering, pp. 461-472, (2020)",Include,Exclude
graph-based mining of multiple object usage patterns,"Nguyen T.T., Nguyen H.A., Pham N.H., Al-Kofahi J.M., Nguyen T.N., Graph-based mining of multiple object usage patterns, ESEC/FSE, pp. 383-392, (2009)",Include,Exclude
portfolio: finding relevant functions and their usage,"McMillan C., Grechanik M., Poshyvanyk D., Xie Q., Fu C., Portfolio: finding relevant functions and their usage, Proceedings of the 33rd International Conference on Software Engineering, ICSE 2011, pp. 111-120, (2011)",Exclude,""
focus: a recommender system for mining api function calls and usage patterns,"Nguyen P. T., Di Rocco J., Di Ruscio D., Ochoa L., Degueule T., Di Penta M., Focus: A recommender system for mining api function calls and usage patterns, Proceedings of the 2019 41st IEEE/ACM International Conference on Software Engineering, pp. 1050-1060, (2019)",Exclude,""
an efficient procedure for mining egocentric temporal motifs,"Longa A., Cencetti G., Lepri B., Passerini A., An efficient procedure for mining egocentric temporal motifs, Data Min. Knowl. Disc., 36, 1, pp. 355-378, (2022)",Exclude,""
the promises and perils of mining github,"Kalliamvakou E., Gousios G., Blincoe K., Singer L., German D.M., Damian D., The Promises and Perils of Mining GitHub, Proceedings of the 11th Working Conference on Mining Software Repositories (Hyderabad, India), pp. 92-101, (2014)",Exclude,""
lightweight global and local contexts guided method name recommendation with prior knowledge,"Wang S., Wen M., Lin B., Mao X., Lightweight global and local contexts guided method name recommendation with prior knowledge, Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE). ACM, pp. 741-753, (2021)",Exclude,""
towards a better code completion system by api grouping,"Hou D., Pletcher D.M., Towards a better code completion system by API grouping, filtering, and popularity-based ranking, Proc. 2nd Int. Workshop Recommendation Syst. Softw. Eng., pp. 26-30, (2010)",Exclude,""
hirec: api recommendation using hierarchical context,"Xie R., Kong X., Wang L., Zhou Y., Li B., Hirec: Api recommendation using hierarchical context, Proceedings of the 2019 30th IEEE International Symposium on Software Reliability Engineering, pp. 369-379, (2019)",Exclude,""
detecting object usage anomalies,"Wasylkowski A., Zeller A., Lindig C., Detecting object usage anomalies, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, pp. 35-44, (2007)",Exclude,""
improving api usage through automatic detection of redundant code,"Kawrykow D., Robillard M.P., Improving api usage through automatic detection of redundant code, IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEE, (2009)",Exclude,""
mapo: mining and recommending api usage patterns,"Zhong H., Xie T., Zhang L., Pei J., Mei H., Mapo: Mining and recommending api usage patterns, ECOOP 2009-Object-Oriented Programming, pp. 318-343, (2009)",Exclude,""
parameter-free probabilistic api mining at github scale,"Fowkes J., Sutton C., Parameter-Free Probabilistic Api Mining at Github Scale, (2015)",Exclude,""
embedding code contexts for cryptographic api suggestion: new methodologies and comparisons,"Xiao Y., Ahmed S., Song W., Ge X., Viswanath B., Yao D., Embedding code contexts for cryptographic api suggestion: New methodologies and comparisons, (2021)",Exclude,""
openai gym. arxiv preprint arxiv,"Brockman G., Cheung V., Pettersson L., Schneider J., Schulman J., Tang J., Zaremba W., Openai Gym. Arxiv Preprint Arxiv, (2016)",Include,""
program classification using gated graph attention neural network for online programming service. arxiv preprint arxiv,"Lu M., Tan D., Xiong N., Chen Z., Li H., Program Classification Using Gated Graph Attention Neural Network for Online Programming Service. Arxiv Preprint Arxiv, 1903, (2019)",Include,Exclude (Pre-print)
adam: a method for stochastic optimization. arxiv preprint arxiv,"Kingma D.P., Ba J., Adam: A Method for Stochastic Optimization. Arxiv Preprint Arxiv, 1412, (2014)",Exclude,""
smartpaste: learning to adapt source code. arxiv preprint arxiv,"Allamanis M., Brockschmidt M., Smartpaste: Learning to Adapt Source Code. Arxiv Preprint Arxiv, 1705, (2017)",Exclude,""
variational graph auto-encoders. arxiv:1611.07308 [cs,"Kipf T.N., Welling M., Variational graph auto-encoders. arXiv:1611.07308 [cs, Stat, (2016)",Exclude,""
generative code modeling with graphs. arxiv preprint arxiv,"Brockschmidt M., Allamanis M., Gaunt A.L., Polozov O., Generative Code Modeling with Graphs. Arxiv Preprint Arxiv, 1805, (2018)",Include,Exclude (Duplicate)
code completion by modeling flattened abstract syntax trees as graphs. arxiv preprint arxiv,"Wang Y., Li H., Code Completion by Modeling Flattened Abstract Syntax Trees as Graphs. Arxiv Preprint Arxiv, 2103, (2021)",Include,Include
modeling functional similarity in source code with graph-based siamese networks. arxiv preprint arxiv,"Mehrotra N., Agarwal N., Gupta P., Anand S., Lo D., Purandare R., Modeling Functional Similarity in Source Code with Graph-Based Siamese Networks. Arxiv Preprint Arxiv, 2011, (2020)",Include,Include
learning to represent programs with graphs. arxiv preprint arxiv,"Learning to Represent Programs with Graphs. Arxiv Preprint Arxiv, 1711, (2017)",Include,Exclude (Duplicate)
semi-supervised classification with graph convolutional networks. arxiv preprint arxiv,"Kipf T.N., Welling M., Semi-Supervised Classification with Graph Convolutional Networks. Arxiv Preprint Arxiv, 1609, (2016)",Exclude,""
graph attention networks. arxiv preprint arxiv,"Velickovic P., Cucurull G., Casanova A., Romero A., Lio P., Bengio Y., Graph Attention Networks. Arxiv Preprint Arxiv, 1710, (2017)",Exclude,""
leveraging grammar and reinforcement learning for neural program synthesis. arxiv preprint arxiv,"Bunel R., Hausknecht M., Devlin J., Singh R., Kohli P., Leveraging Grammar and Reinforcement Learning for Neural Program Synthesis. Arxiv Preprint Arxiv, 1805, (2018)",Include,Exclude
programl: graph-based deep learning for program optimization and analysis. arxiv preprint arxiv,"Cummins C., Fisches Z.V., Ben-Nun T., Hoefler T., Leather H., Programl: Graph-Based Deep Learning for Program Optimization and Analysis. Arxiv Preprint Arxiv, (2020)",Include,Exclude (Duplicate)
unified pre-training for program understanding and generation. arxiv preprint arxiv,"Ahmad W.U., Chakraborty S., Ray B., Et al., Unified Pre-Training for Program Understanding and Generation. Arxiv Preprint Arxiv, 2103, (2021)",Include,Exclude
deepcoder: learning to write programs. arxiv preprint arxiv,"Balog M., Gaunt A.L., Brockschmidt M., Nowozin S., Tarlow D., Deepcoder: Learning to Write Programs. Arxiv Preprint Arxiv, (2016)",Include,Exclude
gated graph sequence neural networks. arxiv preprint arxiv 1511,"Li Y.J.F., Tarlow D.S., Brockschmidt M.T., Gated Graph Sequence Neural Networks. Arxiv Preprint Arxiv 1511, pp. 5493-5512, (2015)",Exclude,""
bpr: bayesian personalized ranking from implicit feedback. arxiv preprint arxiv,"Rendle S., Freudenthaler C., Gantner Z., Schmidt-Thieme L., BPR: Bayesian Personalized Ranking from Implicit Feedback. Arxiv Preprint Arxiv, 1205, (2012)",Exclude,""
structured neural summarization. arxiv preprint arxiv,"Fernandes P., Allamanis M., Brockschmidt M., Structured Neural Summarization. Arxiv Preprint Arxiv, 1811, (2018)",Exclude,""
fast graph representation learning with pytorch geometric. arxiv preprint arxiv,"Fey M., Lenssen J.E., Fast Graph Representation Learning with Pytorch Geometric. Arxiv Preprint Arxiv, (2019)",Exclude,""
code completion with neural attention and pointer networks. arxiv preprint arxiv,"Li J., Wang Y., Lyu M.R., King I., Code Completion with Neural Attention and Pointer Networks. Arxiv Preprint Arxiv, 1711, (2017)",Include,Exclude (Duplicate)
self-supervised heterogeneous graph neural network with co-contrastive learning. arxiv preprint arxiv,"Wang X., Liu N., Han H., Shi C., Self-Supervised Heterogeneous Graph Neural Network with Co-Contrastive Learning. Arxiv Preprint Arxiv, 2105, (2021)",Exclude,""
improved semantic representations from tree-structured long short-term memory networks. arxiv preprint arxiv,"Tai K.S., Socher R., Manning C.D., Improved Semantic Representations from Tree-Structured Long Short-Term Memory Networks. Arxiv Preprint Arxiv, 1503, (2015)",Exclude,""
comparing and experimenting machine learning techniques for code smell detection,"Fontana F.A., Mantyla M.V., Zanoni M., Et al., Comparing and experimenting machine learning techniques for code smell detection, Empirical Software Engineering, 21, pp. 1143-1191, (2016)",Exclude,""
towards a taxonomy of bad smells detection approaches,"Hadj-Kacem M., Bouassida N., Towards a taxonomy of bad smells detection approaches, Proceedings of the 13th International Conference on Software Technologies. SciTePress, pp. 164-175, (2018)",Exclude,""
aroma: code recommendation via structural code search,"Luan S., Yang D., Barnaby C., Sen K., Chandra S., Aroma: Code recommendation via structural code search, Proceedings of the ACM on Programming Languages, (2019)",Exclude,""
software smell detection techniques: a systematic literature review,"AbuHassan A., Alshayeb M., Ghouti L., Software smell detection techniques: A systematic literature review, Journal of Software: Evolution and Process, 33, (2021)",Exclude,""
toward a catalogue of architectural bad smells.,"Garcia J., Popescu D., Edwards G., Medvidovic N., Toward a catalogue of architectural bad smells., QoSA, LNCS, 5581, pp. 146-162, (2009)",Exclude,""
a cooperative parallel search-based software engineering approach for code-smells detection,"Kessentini W., Kessentini M., Sahraoui H., Bechikh S., Ouni A., A cooperative parallel search-based software engineering approach for code-smells detection, IEEE Transactions on Software Engineering, 40, 9, pp. 841-861, (2014)",Exclude,""
i know what you coded last summer: mining candidate expertise from github repositories,"Saxena R., Pedanekar N., I Know What You Coded Last Summer: Mining Candidate Expertise From Github Repositories, Companion of the 2017 ACM Conference on Computer Supported Cooperative Work and Social Computing, pp. 299-302, (2017)",Exclude,""
deep learning based code smell de-tection,"Liu H., Jin J., Xu Z., Et al., Deep Learning Based Code Smell De-tection, IEEE Trans. Software Engineering, 47, (2021)",Include,Include
detecting bad smells in source code using change history information,"Palomba F., Bavota G., Di Penta M., Oliveto R., De Lucia A., Poshyvanyk D., Detecting bad smells in source code using change history information, Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering. IEEE Press, pp. 268-278, (2013)",Exclude,""
automatic detection of instability architectural smells,"Fontana F.A., Pigazzini I., Roveda R., Zanoni M., Automatic detection of instability architectural smells, ICSME, pp. 433-437, (2016)",Exclude,""
mlcq: industry-relevant code smell data set,"Madeyskia L., Lewowski T., MLCQ: Industry-Relevant Code Smell Data Set, Proc. Evaluation and Assessment in Software Engi-neering, pp. 342-347, (2020)",Exclude,""
hotspot patterns: the formal definition and automatic detection of architecture smells,"Mo R., Cai Y., Kazman R., Xiao L., Hotspot patterns: The formal definition and automatic detection of architecture smells, Proceedings of the 2015 12th Working IEEE/IFIP Conference on Software Architecture, WICSA ’15, pp. 51-60, (2015)",Exclude,""
a hybrid approach to detect code smells using deep learning,"Hadj-Kacem M., Bouassida N., A hybrid approach to detect code smells using deep learning, Proceedings of the 13th International Conference on Eval- Uation of Novel Approaches to Software Engineering. SciTePress, pp. 137-146, (2018)",Include,Include
model level code smell detection using egapso based on similarity measures,"Saranya G., Nehemiah H.K., Kannan A., Nithya V., Model Level Code Smell Detection Using Egapso Based on Similarity Measures, 57, 3, pp. 1631-1642, (2018)",Exclude,""
when and why your code starts to smell bad,"Tufano M., Palomba F., Bavota G., Oliveto R., Di Penta M., De Lucia A., Poshyvanyk D., When and why your code starts to smell bad, Proceedings of the 37th International Conference on Software Engineering, 1, pp. 403-414, (2015)",Exclude,""
code bad smell detection through evolutionary data mining,"Fu S., Shen B., Code bad smell detection through evolutionary data mining, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), Oct 2015, pp. 1-9",Exclude,""
decor: a method for the specification and detection of code and design smells,"Moha N., Gueheneuc Y.G., Duchien L., Meur A.F.L., Decor: A method for the specification and detection of code and design smells, IEEE Transactions on Software Engineering, 36, 1, pp. 20-36, (2010)",Exclude,""
a textual-based technique for smell detection,"Palomba F., Panichella A., Lucia A.D., Oliveto R., Zaidman A., A textual-based technique for smell detection, IEEE 24th International Conference on Program Comprehension (ICPC). IEEE, pp. 1-10, (2016)",Exclude,""
landfill: an open dataset of code smells with public evaluation,"Palomba F., Nucci D.D., Tufano M., Bavota G., Oliveto R., Poshyvanyk D., De Lucia A., Landfill: An open dataset of code smells with public evaluation, Proceedings of the 12th Working Conference on Mining Software Repositories, pp. 482-485, (2015)",Exclude,""
mining version histories for detecting code smells,"Palomba F., Bavota G., Penta M.D., Oliveto R., Poshyvanyk D., Lucia A.D., Mining version histories for detecting code smells, IEEE Transactions on Software Engineering, 41, 5, pp. 462-489, (2015)",Exclude,""
code smell severity classification using machine learning techniques,"Fontana F.A., Zanoni M., Code smell severity classification using machine learning techniques, Knowledge-Based Systems, 128, pp. 43-58, (2017)",Include,Exclude
code smells detection and visualization: a systematic literature review,"Pereira dos Reis J., Brito e Abreu F., de Figueiredo Carneiro G., Et al., Code Smells Detection and Visualization: A Systematic Literature Review, Archives of Computational Methods in Engineering, 29, pp. 47-94, (2022)",Exclude,""
predicting patch correctness based on the similarity of failing test cases,"Tian H., Li Y., Pian W., Kabore A.K., Liu K., Habib A., Klein J., Bissyande T.F., Predicting patch correctness based on the similarity of failing test cases, ACM Transactions on Software Engineering and Methodology, 31, 4, pp. 1-30, (2022)",Exclude,""
spi: automated identi-cation of security patches via commits,"Zhou Y., Siow J.K., Wang C., Liu S., Liu Y., Spi: Automated identi-cation of security patches via commits, ACM Transactions on Software Engineering and Methodology (TOSEM), 31, 1, pp. 1-27, (2021)",Exclude,""
linux kernel,"Linux Kernel, (2022)",Include,""
spider: enabling fast patch propagation in related software repositories,"MacHiry A., Redini N., Camellini E., Kruegel C., Vigna G., SPIDER: Enabling fast patch propagation in related software repositories, 2020 Ieee Symposium on Security and Privacy (SP), pp. 1562-1579, (2020)",Exclude,""
katch: high-coverage testing of software patches,"Dan Marinescu P., Cadar C., KATCH: High-coverage testing of software patches, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, pp. 235-245, (2013)",Exclude,""
automating patching of vulnerable open-source software versions in application binaries,"Duan R., Bijlani A., Ji Y., Alrawi O., Xiong Y., Ike M., Saltaformaggio B., Lee W., Automating patching of vulnerable open-source software versions in application binaries, 26th Annual Network and Distributed System Security Symposium, Ndss 2019, (2019)",Exclude,""
patchdb: a large-scale security patch dataset,"Wang X., Wang S., Feng P., Sun K., Jajodia S., PatchDB: A large-scale security patch dataset, 2021 51st Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), pp. 149-160, (2021)",Exclude,""
precisely characterizing security impact in a flood of patches via symbolic rule comparison,"Wu Q., He Y., McCamant S., Lu K., Precisely characterizing security impact in a flood of patches via symbolic rule comparison, 27th Annual Network and Distributed System Security Symposium, Ndss 2020, (2020)",Exclude,""
patchnet: hierarchical deep learning-based stable patch identification for the linux kernel,"Hoang T., Lawall J., Tian Y., Oentaryo R.J., Lo D., PatchNet: Hierarchical deep learning-based stable patch identification for the linux kernel, IEEE Trans. Softw. Eng., 47, 11, pp. 2471-2486, (2021)",Include,Include
patch-related vulnerability detection based on symbolic execution[j],"Qiang W., Liao Y., Sun G., Et al., Patch-related vulnerability detection based on symbolic execution[J], IEEE Access, 5, pp. 20777-20784, (2017)",Exclude,""
patchscope: memory object centric patch diffing,"Zhao L., Zhu Y., Ming J., Zhang Y., Zhang H., Yin H., PatchScope: Memory object centric patch diffing, Proceedings of the 2020 Acm Sigsac Conference on Computer and Communications Security, Ccs '20, pp. 149-165, (2020)",Include,Exclude
hera: hotpatching of embedded real-time applications,"Niesler C., Surminski S., Davi L., HERA: Hotpatching of embedded real-time applications, Network and Distributed System Security Symposium, (2021)",Exclude,""
fast and precise on-the-fly patch validation for all,"Chen L., Ouyang Y., Zhang L., Fast and precise on-The-fly patch validation for all, Proceedings of the 43rd International Conference on Software Engineering, (2021)",Exclude,""
sspcatcher: learning to catch security patches,"Sawadogo A.D., Bissyande T.F., Moha N., Allix K., Klein J., Li L., Le Traon Y., Sspcatcher: Learning to catch security patches, Empirical Software Engineering, 27, 6, (2022)",Exclude,""
an investigation of the android kernel patch ecosystem,"Zhang Z., Zhang H., Qian Z., Lau B., An investigation of the android kernel patch ecosystem, 30th Usenix Security Symposium (USENIX Security 21), pp. 3649-3666, (2021)",Exclude,""
automatic patchbased exploit generation is possible: techniques and implications,"Brumley D., Poosankam P., Song D., Zheng J., Automatic patchbased exploit generation is possible: Techniques and implications, 2008 IEEE Symposium on Security and Privacy (S&P). IEEE, (2008)",Exclude,""
dissection of a bug dataset: anatomy of 395 patches from defects4j,"Sobreira V., Durieux T., Madeiral F., Monperrus M., De Almeida Maia M., Dissection of a bug dataset: Anatomy of 395 patches from Defects4J, Proceedings of the 25th International Conference on Software Analysis, Evolution and Reengineering, pp. 130-140, (2018)",Exclude,""
patchnet: a tool for deep patch classification,"Hoang T., Lawall J., Oentaryo R.J., Tian Y., Lo D., PatchNet: A tool for deep patch classification, 2019 IEEE/ACM 41st International Conference on Software Engineering: Companion Proceedings (ICSE-Companion), pp. 83-86, (2019)",Include,Exclude (Duplicate)
automatic patch generation learned from human-written patches,"Kim D., Nam J., Song J., Kim S., Automatic patch generation learned from human-written patches, International Conference on Software Engineering. IEEE, pp. 802-811, (2013)",Exclude,""
an analysis of the search spaces for generate and validate patch generation systems,"Long F., Rinard M., An analysis of the search spaces for generate and validate patch generation systems, Proceedings of the 38th International Conference on Software Engineering, pp. 702-713, (2016)",Exclude,""
patchrnn: a deep learning-based system for security patch identification,"Wang X., Wang S., Feng P., Sun K., Jajodia S., Benchaaboun S., Geck F., PatchRNN: A deep learning-based system for security patch identification, CoRR, (2021)",Include,Include
automatic hot patch generation for android kernels,"Xu Z., Zhang Y., Zheng L., Xia L., Bao C., Wang Z., Liu Y., Automatic hot patch generation for android kernels, 29th Usenix Security Symposium (USENIX Security 20), pp. 2397-2414, (2020)",Exclude,""
precise and accurate patch presence test for binaries,"Zhang H., Qian Z., Precise and accurate patch presence test for binaries, 27th Usenix Security Symposium (USENIX Security 18), pp. 887-902, (2018)",Exclude,""
identifying linux bug fixing patches,"Tian Y., Lawall J., Lo D., Identifying linux bug fixing patches, 2012 34th International Conference on Software Engineering (ICSE), pp. 386-396, (2012)",Exclude,""
pdiff: semanticbased patch presence testing for downstream kernels,"Jiang Z., Zhang Y., Xu J., Wen Q., Wang Z., Zhang X., Xing X., Yang M., Yang Z., PDiff: Semanticbased patch presence testing for downstream kernels, Proceedings of the 2020 Acm Sigsac Conference on Computer and Communications Security, Ccs '20, pp. 1149-1163, (2020)",Exclude,""
identifying test-suite-overfitted patches through test case generation,"Xin Q., Reiss S.P., Identifying test-suite-overfitted patches through test case generation, Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis. ACM, pp. 226-236, (2017)",Exclude,""
patch based vulnerability matching for binary programs,"Xu Y., Xu Z., Chen B., Song F., Liu Y., Liu T., Patch based vulnerability matching for binary programs, ISSTA ’20: 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, Virtual Event, USA, July 18-22, 2020, pp. 376-387, (2020)",Exclude,""
automatic patch generation by learning correct code,"Long F., Rinard M., Automatic patch generation by learning correct code, Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages., pp. 298-312, (2016)",Exclude,""
alleviating patch overfitting with automatic test generation: a study of feasibility and effectiveness for the nopol repair system,"Yu Z., Martinez M., Danglot B., Durieux T., Monperrus M., Alleviating patch overfitting with automatic test generation: A study of feasibility and effectiveness for the Nopol repair system, Empirical Software Engineering, 24, 1, pp. 33-67, (2019)",Exclude,""
spain: security patch analysis for binaries towards understanding the pain and pills,"Xu Z., Chen B., Chandramohan M., Liu Y., Song F., SPAIN: Security patch analysis for binaries towards understanding the pain and pills, 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE), pp. 462-472, (2017)",Exclude,""
on reliability of patch correctness assessment,"Xuan-Bach D.L., Bao L., Lo D., Xia X., Li S., Pasareanu C., On reliability of patch correctness assessment, Proceedings of the 41st International Conference on Software Engineering, pp. 524-535, (2019)",Exclude,""
a closer look at real-world patches,"Liu K., Kim D., Koyuncu A., Li L., Bissyande T.F., Le Traon Y., A closer look at real-world patches, Proceedings of the 34th International Conference on Software Maintenance and Evolution, pp. 275-286, (2018)",Exclude,""
exploring the differences between plausible and correct patches at fine-grained level,"Yang B., Yang J., Exploring the differences between plausible and correct patches at fine-grained level, Proceedings of the 2nd International Workshop on Intelligent Bug Fixing IEEE, pp. 1-8, (2020)",Exclude,""
do code clones matter?,"Juergens E., Deissenboeck F., Hummel B., Wagner S., Do code clones matter?, Proceedings of the 31st International Conference on Software Engineering, ICSE '09, pp. 485-495, (2009)",Exclude,""
bdtex: a gqm-based bayesian approach for the detection of antipatterns,"Khomh F., Vaucher S., Yann-Gael G., Sahraoui H., Bdtex: A gqm-based Bayesian approach for the detection of antipatterns, Journal of Systems and Software, 84, 4, pp. 559-572, (2011)",Exclude,""
can neural clone detection generalize to unseen functionalitiesf,"Liu C., Lin Z., Lou J.G., Wen L., Zhang D., Can neural clone detection generalize to unseen functionalitiesf, 36Th IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 617-629, (2021)",Include,Exclude
vuddy: a scalable approach for vulnerable code clone discovery [c],"Kim S., Woo S., Lee H., Et al., Vuddy: A scalable approach for vulnerable code clone discovery [C], 2017 IEEE Symposium on Security and Privacy (SP). IEEE, pp. 595-614, (2017)",Exclude,""
sourcerercc: scaling code clone detection to big-code,"Sajnani H., Saini V., Svajlenko J., Roy C.K., Lopes C.V., SourcererCC: Scaling code clone detection to big-code, 2016 IEEE/ACM 38th International Conference on Software Engineering, ICSE, pp. 1157-1168, (2016)",Exclude,""
comparison and evaluation of code clone detection techniques and tools: a qualitative approach,"Roy C.K., Cordy J.R., Koschke R., Comparison and evaluation of code clone detection techniques and tools: A qualitative approach, Sci. Comput. Program., 74, 7, pp. 470-495, (2009)",Exclude,""
detecting and measuring similarity in code clones,"Smith R., Horwitz S., Detecting and Measuring Similarity in Code Clones, (2009)",Exclude,""
a code comparison algorithm based on ast for plagiarism detection,"Feng J., Cui B., Xia K., A code comparison algorithm based on ast for plagiarism detection, Proc. 4th Int. Conf. Emerg. Intell. Data Web Technol., pp. 393-397, (2013)",Include,Exclude
a survey on software clone detection research,"Roy C.K., Cordy J.R., A survey on software clone detection research, Queen'S School of Computing 1R, 541, 115, pp. 64-68, (2007)",Exclude,""
neural machine translation inspired binary code similarity comparison beyond function pairs,"Zuo F., Li X., Young P., Luo L., Zeng Q., Zhang Z., Neural Machine Translation Inspired Binary Code Similarity Comparison beyond Function Pairs, representations, 48, (2019)",Include,Exclude
deckard: scalable and accurate treebased detection of code clones,"Jiang L., Misherghi G., Su Z., Glondu S., Deckard: Scalable and accurate treebased detection of code clones, Proceedings of the 29th International Conference on Software Engineering, pp. 96-105, (2007)",Exclude,""
improving syntactical clone detection methods through the use of an intermediate representation,"Caldeira P.M., Sakamoto K., Washizaki H., Fukazawa Y., Shimada T., Improving syntactical clone detection methods through the use of an intermediate representation, 2020 IEEE 14th International Workshop on Software Clones (IWSC). IEEE, (2020)",Include,Exclude
classification model for code clones based on machine learning,"Yang J., Hotta K., Higo Y., Igaki H., Kusumoto S., Classification model for code clones based on machine learning, Empir. Softw. Eng., 20, 4, pp. 1095-1125, (2015)",Include,Exclude
linear complexity object-oriented similarity for clone detection and software evolution analyses,"Merlo E., Antoniol G., Di Penta M., Rollo V., Linear complexity object-oriented similarity for clone detection and software evolution analyses, Proceedings of the 20Th IEEE International Conference on Software Maintenance, pp. 412-416, (2004)",Exclude,""
treecaps: tree-based capsule networks for source code processing,"Bui Q.N.D., Yu Y., Jiang L., TreeCaps: Tree-Based Capsule Networks for Source Code Processing, Thirty-Fifth AAAI Conference on Artificial Intelligence, AAAI 2021, Thirty-Third Conference on Innovative Applications of Artificial Intelligence, IAAI 2021, The Eleventh Symposium on Educational Advances in Artificial Intelligence, EAAI 2021, pp. 30-38, (2021)",Include,Include
fcca: hybrid code representation for functional clone detection using attention networks,"Hua W., Sui Y., Wan Y., Liu G., Xu G., FCCA: Hybrid code representation for functional clone detection using attention networks, IEEE Trans. Reliabil., 70, pp. 304-318, (2020)",Include,Include
ccfinder: a multilinguistic token-based code clone detection system for large scale source code,"Kamiya T., Kusumoto S., Inoue K., CCFinder: A multilinguistic token-based code clone detection system for large scale source code, IEEE Transactions on Software Engineering, 28, 7, pp. 654-670, (2002)",Exclude,""
compiling clones: what happens?,"Kononenko O., Zhang C., Godfrey M.W., Compiling clones: What happens?, 2014 IEEE International Conference on Software Maintenance and Evolution (ICSME). IEEE, (2014)",Exclude,""
ryder b (2017) cclearner: a deep learning-based clone detection approach,"Li L., Feng H., Zhuang W., Meng N., Ryder B (2017) CCLearner: A deep learning-based clone detection approach, Proceedings - 2017 IEEE International Conference on Software Maintenance and Evolution, ICSME, pp. 249-260, (2017)",Include,Exclude
context-based detection of clone-related bugs,"Jiang L., Su Z., Chiu E., Context-based detection of clone-related bugs, Proceedings of the the 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC-FSE ’07, pp. 55-64, (2007)",Exclude,""
vgraph: a robust vulnerable code clone detection system using code property triplets,"Bowman B., Howie Huang H., VGRAPH: A robust vulnerable code clone detection system using code property triplets, 2020 Ieee European Symposium on Security and Privacy (EuroS&P), pp. 53-69, (2020)",Include,Exclude (Duplicate)
deep learning code fragments for code clone detection,"White M., Tufano M., Vendome C., Poshyvanyk D., Deep learning code fragments for code clone detection, ASE, (2016)",Include,Include
syntax tree fingerprinting for source code similarity detection,"Chilowicz M., Duris E., Roussel G., Syntax tree fingerprinting for source code similarity detection, 2009 IEEE 17th International Conference on Program Comprehension, pp. 243-247, (2009)",Include,Exclude
on the effectiveness of clone detection by string matching,"Ducasse S., Nierstrasz O., Rieger M., On the effectiveness of clone detection by string matching, Research Articles. J. Softw. Maint. Evol., 18, 1, (2006)",Exclude,""
redebug: finding unpatched code clones in entire os distributions,"Jang J., Agrawal A., Brumley D., Redebug: Finding unpatched code clones in entire os distributions, 2012 Ieee Symposium on Security and Privacy, pp. 48-62, (2012)",Exclude,""
fast code clone detection based on weighted recursive autoencoders,"Zeng J., Ben K., Li X., Zhang X., Fast code clone detection based on weighted recursive autoencoders, IEEE Access, 7, pp. 125062-125078, (2019)",Include,Include
fast location of similar code fragments using semantic'juice,"Lakhotia A., Preda M.D., Giacobazzi R., Fast location of similar code fragments using semantic'juice, Proceedings of the 2nd ACM SIGPLAN Program Protection and Reverse Engineering Workshop, (2013)",Exclude,""
scalable detection of semantic clones,"Gabel M., Jiang L., Su Z., Scalable detection of semantic clones, Proceedings of the 30th International Conference on Software Engineering (ICSE’08), pp. 321-330, (2008)",Exclude,""
a mutation/injection-based automatic framework for evaluating code clone detection tools,"Roy C.K., Cordy J.R., A mutation/injection-based automatic framework for evaluating code clone detection tools, Proc. Int. Conf. Softw. Testing Verification Validation Workshops, pp. 157-166, (2009)",Exclude,""
feature-based detection of bugs in clones,"Steidl D., Goede N., Ieee R., Feature-based detection of bugs in clones, 2013 7th International Workshop on Software Clones, International Workshop on Software Clones, pp. 76-82, (2013)",Exclude,""
achieving accuracy and scalability simultaneously in detecting application clones on android markets,"Chen K., Liu P., Zhang Y., Achieving accuracy and scalability simultaneously in detecting application clones on android markets, Proceedings Ofthe 36th International Conference on Software Engineering (ICSE'14), pp. 175-186, (2014)",Exclude,""
an empirical study of code clone genealogies,"Kim M., Sazawal V., Notkin D., Murphy G.C., An empirical study of code clone genealogies, Proceedings of the 10th European Software Engineering Conference held jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 187-196, (2005)",Exclude,""
neural detection of semantic code clones via tree-based convolution,"Yu H., Lam W., Chen L., Li G., Xie T., Wang Q., Neural detection of semantic code clones via tree-based convolution, Proceedings of the 27th International Conference on Program Comprehension, pp. 70-80, (2019)",Include,Include
ccaligner: a token based large-gap clone detector,"Wang P., Svajlenko J., Wu Y., Xu Y., Roy C.K., CCAligner: A token based large-gap clone detector, Proceedings of the 40th International Conference on Software Engineering (ICSE'18), pp. 1066-1077, (2018)",Exclude,""
experiment on the automatic detection of function clones in a software system using metrics,"Mayrand J., Leblanc C., Merlo E.M., Experiment on the automatic detection of function clones in a software system using metrics, International Conference on Software Maintenance. IEEE., (1996)",Exclude,""
an exploratory study of cloning in industrial software product lines,"Dubinsky Y., Rubin J., Berger T., Duszynski S., Becker M., Czarnecki K., An exploratory study of cloning in industrial software product lines, Proceedings of the 17th European Conference on Software Maintenance and Reengineering, pp. 25-34, (2013)",Exclude,""
functional code clone detection with syntax and semantics fusion learning,"Fang C., Liu Z., Shi Y., Huang J., Shi Q., Functional code clone detection with syntax and semantics fusion learning, pp. 516-527, (2020)",Include,Include
supervised deep features for software functional clone detection by exploiting lexical and syntactical information in source code,"Wei H., Li M., Supervised deep features for software functional clone detection by exploiting lexical and syntactical information in source code, IJCAI, pp. 3034-3040, (2017)",Include,Include
empirical evaluation of clone detection using syntax suffix trees,"Falke R., Frenzel P., Koschke R., Empirical evaluation of clone detection using syntax suffix trees, Empirical Software Engineering, 13, 6, pp. 601-643, (2008)",Include,Exclude
an ast-based code plagiarism detection algorithm,"Zhao J., Xia K., Fu Y., Cui B., An AST-based code plagiarism detection algorithm, Proc. 10th Int. Conf. Broadband Wireless Comput., Commun. Appl. (BWCCA), pp. 178-182, (2015)",Include,Exclude
comparison and evaluation of clone detection tools,"Bellon S., Koschke R., Antoniol G., Krinke J., Merlo E., Comparison and evaluation of clone detection tools, IEEE Transactions on Software Engineering, 33, 9, pp. 577-591, (2007)",Exclude,""
oreo: detection of clones in the twilight zone,"Saini V., Farmahinifarahani F., Lu Y., Baldi P., Lopes C.V., Oreo: Detection of clones in the twilight zone, ESEC/FSE 2018 - Proceedings of the 2018 26Th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 354-365, (2018)",Exclude,""
semantic code clone detection using abstract memory states and program dependency graphs,"Nasirloo H., Azimzadeh F., Semantic code clone detection using abstract memory states and program dependency graphs, 2018 4th International Conference on Web Research (ICWR), pp. 19-27, (2018)",Include,Exclude
late propagation in software clones,"Barbour L., Khomh F., Zou Y., Late propagation in software clones, Proceedings of the IEEE 27th International Conference on Software Maintenance, pp. 273-282, (2011)",Exclude,""
clone detection using abstract syntax trees,"Baxter I.D., Yahin A., Moura L., Santanna M., Bier L., Clone detection using abstract syntax trees, Proceedings. International Conference on Software Maintenance (ICSM). 368-377, (1998)",Include,Exclude
substring matching for clone detection and change tracking,"Howard Johnson J., Substring matching for clone detection and change tracking, Proceedings 1994 International Conference on Software Maintenance, pp. 120-126, (1994)",Exclude,""
software clone detection: a systematic review,"Rattan D., Bhatia R., Singh M., Software clone detection: A systematic review[J], Information and Software Technology, 55, 7, pp. 1165-1199, (2013)",Exclude,""
accurate and scalable cross-architecture cross-os binary code search with emulation,"Xue Y., Xu Z., Chandramohan M., Liu Y., Accurate and scalable cross-architecture cross-os binary code search with emulation, IEEE Transactions on Software Engineering, (2018)",Exclude,""
a parallel and efficient approach to large scale clone detection,"Sajnani H., Lopes C., A parallel and efficient approach to large scale clone detection, 2013 7th International Workshop on Software Clones (IWSC’13), pp. 46-52, (2013)",Exclude,""
bingo: cross-architecture cross-os binary search,"Chandramohan M., Xue Y., Xu Z., Liu Y., Cho C. Y., Tan H. B. K., Bingo: Cross-architecture cross-os binary search, Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 678-689, (2016)",Exclude,""
siamese: scalable and incremental code clone search via multiple code representations,"Ragkhitwetsagul C., Krinke J., Siamese: scalable and incremental code clone search via multiple code representations, Empirical Software Engineering, 24, 4, pp. 2236-2284, (2019)",Exclude,""
incremental code clone detection: a pdg-based approach,"Higo Y., Yasushi U., Nishino M., Kusumoto S., Incremental code clone detection: A pdg-based approach, Proceedings of the 2011 18th Working Conference on Reverse Engineering, pp. 3-12, (2011)",Include,Include
towards robust instruction-level trace alignment of binary code,"Kargen U., Shahmehri N., Towards robust instruction-level trace alignment of binary code, 2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEE, (2017)",Exclude,""
towards a big data curated benchmark of inter-project code clones,"Svajlenko J., Islam J.F., Keivanloo I., Roy C.K., Mia M.M., Towards a big data curated benchmark of inter-project code clones, 2014 IEEE International Conference on Software Maintenance and Evolution. IEEE, pp. 476-480, (2014)",Exclude,""
nicad: accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization,"Roy C.K., Cordy J.R., NICAD: Accurate detection of near-miss intentional clones using flexible pretty-printing and code normalization, Proceedings of the 2008 International Conference on Program Comprehension (ICPC'08), pp. 172-181, (2008)",Exclude,""
hiddencpg: large-scale vulnerable clone detection using subgraph isomorphism of code property graphs. proc,"Wi S., Woo S., Whang J.J., Et al., HiddenCPG: Large-scale vulnerable clone detection using subgraph isomorphism of code property graphs. Proc, ACM Web Conf, 2022, pp. 755-766, (2022)",Include,Exclude
a novel vulnerable code clone detector based on context enhancement and patch validation [j],"Guo J., Li H., Wang Z., Et al., A Novel Vulnerable Code Clone Detector Based on Context Enhancement and Patch Validation [J], Wireless Communications and Mobile Computing, (2022)",Exclude,""
search-based synthesis of equivalent method sequences,"Goffi A., Gorla A., Mattavelli A., Pezze M., Tonella P., Search-Based Synthesis of Equivalent Method Sequences, (2014)",Exclude,""
learning-based recursive aggregation of abstract syntax trees for code clone detection,"Buch L., Andrzejak A., Learning-based recursive aggregation of abstract syntax trees for code clone detection, Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution and Reengineering, pp. 95-104, (2019)",Include,Exclude (Duplicate)
evaluating clone detection tools with bigclonebench,"Svajlenko J., Roy C.K., Evaluating clone detection tools with bigclonebench, Proceedings of the 2015 IEEE International Conference on Software Maintenance and Evolution (ICSME'15), pp. 131-140, (2015)",Exclude,""
nil: large-scale detection of large-variance clones,"Nakagawa T., Higo Y., Kusumoto S., Nil: large-scale detection of large-variance clones, Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), (2021)",Exclude,""
tracelet-based code search in executables,"David Y., Yahav E., Tracelet-based code search in executables, Acm Sigplan Notices, (2014)",Exclude,""
towards flexible code clone detection,"Zibran M.F., Roy C.K., Towards flexible code clone detection, management, and refactoring in ide, Proceedings of the 5th International Workshop on Software Clones (IWSC), (2011)",Exclude,""
cclearner: a deep learning-based clone detection approach,"Li L., Feng H., Zhuang W., Meng N., Ryder B., Cclearner: a deep learning-based clone detection approach, pp. 249-260, (2017)",Include,Exclude (Duplicate)
accurate and efficient structural characteristic feature extraction for clone detection,"Anh Nguyen H., Thanh Nguyen T., Pham N.H., Al-Kofahi J.M., Nguyen T.N., Accurate and efficient structural characteristic feature extraction for clone detection, Proceedings of the 12th International Conference on Fundamental Approaches to Software Engineering: Held As Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2009 (FASE'09), pp. 440-455, (2009)",Exclude,""
ccsharp: an efficient three-phase code clone detector using modified pdgs,"Wang M., Wang P., Xu Y., Ccsharp: An efficient three-phase code clone detector using modified pdgs, 2017 24th Asia-Pacific Software Engineering Conference (APSEC). IEEE, (2017)",Include,Exclude
cross language code clone detection using syntactical features and api documentation,"Nafi K.W., Kar T.S., Roy B., Roy C.K., Schneider K.A., Cross language code clone detection using syntactical features and API documentation, Proceedings - 2019 34Th IEEE/ACM International Conference on Automated Software Engineering, pp. 1026-1037, (2019)",Include,Include
scalable code clone detection and search based on adaptive prefix filtering,"Nishi M.A., Damevski K., Scalable code clone detection and search based on adaptive prefix filtering, Journal of Systems and Software, (2018)",Exclude,""
codex: source code plagiarism detection based on abstract syntax tree,"Zheng M., Pan X., Lillis D., CodEX: Source Code Plagiarism Detection Based on Abstract Syntax Tree, Proceedings for the 26th AIAI Irish Conference on Artificial Intelligence and Cognitive Science Trinity College Dublin, Dublin, Ireland, 2259, pp. 362-373, (2018)",Include,Exclude
the nicad clone detector,"Cordy J.R., Roy C.K., The nicad clone detector, 2011 IEEE 19th International Conference on Program Comprehension (ICPC). IEEE, (2011)",Exclude,""
clcd-i: cross-language clone detection by using deep learning with infercode,"Yahya M.A., Kim D.K., CLCD-I: Cross-language clone detection by using deep learning with infercode, Computers, 12, 1, (2023)",Include,Exclude
augmenting abstract syntax trees for program understanding,"Welty C.A., Augmenting abstract syntax trees for program understanding, Proc. 12th IEEE Int. Conf. Automated Softw. Eng., pp. 126-133, (1997)",Include,Exclude
simple fast algorithms for the editing distance between trees and related problems,"ZHANG K., SHASHA D., Simple fast algorithms for the editing distance between trees and related problems, SIAM Journal on Computing, 18, 6, pp. 1245-1262, (1989)",Exclude,""
an algorithm for generating abstract syntax trees,"Noonan R.E., An algorithm for generating abstract syntax trees, Comput. Lang., 10, 3-4, pp. 225-236, (1985)",Exclude,""
head-lexicalized bidirectional tree lstms,"Teng Z., Zhang Y., Head-lexicalized bidirectional tree lstms, Transactions of the Association for Computational Linguistics, 5, pp. 163-177, (2017)",Exclude,""
understanding source code evolution using abstract syntax tree matching,"Neamtiu I., Foster J.S., Hicks M., Understanding source code evolution using abstract syntax tree matching, Proceedings of the 2005 international workshop on Mining software repositories, pp. 1-5, (2005)",Include,Exclude
the zephyr abstract syntax description language,"Wang D.C., Appel A.W., Korn J.L., Serra C.S., The Zephyr Abstract Syntax Description Language, Proceedings of the Conference on Domain-Specific Languages, DSL'97, pp. 213-228, (1997)",Exclude,""
a dataset of simplified syntax trees for c,"Proksch S., Amann S., Nadi S., Mezini M., A dataset of simplified syntax trees for C, Proceedings of the 13th International Conference on Mining Software Repositories, pp. 476-479, (2016)",Exclude,""
programmers' de-anonymization using a hybrid approach of abstract syntax tree and deep learning,"Ullah F., Jabbar S., Al-Turjman F., Programmers' de-anonymization using a hybrid approach of abstract syntax tree and deep learning, Tech-nol. Forecasting Social Change, 159, (2020)",Include,Include
a novel neural source code representation based on abstract syntax tree,"Zhang J., Wang X., Zhang H., Sun H., Wang K., Liu X., A novel neural source code representation based on abstract syntax tree, Proceedings of the 41st International Conference on Software Engineering, ICSE 2019, pp. 783-794, (2019)",Include,Include
abstract syntax tree implementation idioms,"Jones J., Abstract syntax tree implementation idioms, Proceedings of the 2003 10th Conference on Pattern Languages of Programs, pp. 1-10, (2003)",Exclude,""
depth-first iterative-deepening: an optimal admissible tree search,"Korf R.E., Depth-first iterative-deepening: An optimal admissible tree search, Artificial Intelligence, 27, 1, pp. 97-109, (1985)",Exclude,""
generalized vulnerability extrapolation using abstract syntax trees,"Yamaguchi F., Lottmann M., Rieck K., Generalized vulnerability extrapolation using abstract syntax trees, Proceedings of the 28th Annual Computer Security Applications Conference ACM, pp. 359-368, (2012)",Include,Exclude
recursive tree grammar autoencoders,"PAASSEN B., KOPRINSKA I., YACEF K., Recursive tree grammar autoencoders, (2021)",Exclude,""
you only need attention to traverse trees,"Ahmed M., Samee M.R., Mercer R.E., You only need attention to traverse trees, Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pp. 316-322, (2019)",Exclude,""
rusty1s/pytorch geometric: geometric deep learning extension library for pytorch,Rusty1s/pytorch Geometric: Geometric Deep Learning Extension Library for PyTorch,Exclude,""
context2name: a deep learning-based approach to infer natural variable names from usage contexts,"Bavishi R., Pradel M., Sen K., Context2Name: A deep learning-based approach to infer natural variable names from usage contexts, (2018)",Exclude,""
nl2type: inferring javascript function types from natural language information,"Malik Rabee Sohail, Patra Jibesh, Pradel Michael, Nl2type: inferring javascript function types from natural language information, Proceedings of the 41st International Conference on Software Engineering, pp. 304-315, (2019)",Exclude,""
data-driven hint generation in vast solution spaces: a self-improving python programming tutor,"RIVERS K., KOEDINGER K. R., Data-driven hint generation in vast solution spaces: a self-improving python programming tutor, International Journal of Artificial Intelligence in Education, 27, 1, pp. 37-64, (2017)",Exclude,""
typilus: neural type hints,"Allamanis M., Barr E.T., Ducousso S., Gao Z., Typilus: Neural type hints, Proceedings of the 41st acm sigplan conference on programming language design and implementation, pp. 91-105, (2020)",Exclude,""
the continuous hint factory - providing hints in vast and sparsely populated edit distance spaces,"PAASSEN B., HAMMER B., PRICE T., BARNES T., GROSS S., PINKWART N., The continuous hint factory - providing hints in vast and sparsely populated edit distance spaces, Journal of Educational Data Mining, 10, 1, pp. 1-35, (2018)",Exclude,""
pyart: python api recommendation in real-time,"He X., Xu L., Zhang X., Hao R., Feng Y., Xu B., Pyart: Python api recommendation in real-time, ICSE, pp. 1634-1645, (2021)",Exclude,""
domain types: abstract-domain selection based on variable usage,"Apel S., Beyer D., Friedberger K., Raimondi F., von Rhein A., Domain types: Abstract-domain selection based on variable usage, HVC, LNCS, 8244, pp. 262-278, (2013)",Exclude,""
typewriter: neural type prediction with search-based validation,"Pradel M., Gousios G., Liu J., Chandra S., Typewriter: Neural type prediction with search-based validation, (2019)",Include,Exclude
manytypes4typescript: a comprehensive typescript dataset for sequence-based type inference,"Jesse K., Devanbu P.T., Manytypes4typescript: A comprehensive typescript dataset for sequence-based type inference, 2022 IEEE/ACM 19th International Conference on Mining Software Repositories (MSR), pp. 294-298, (2022)",Exclude,""
learning python code suggestion with a sparse pointer network,"Bhoopchand A., Rocktaschel T., Barr E., Riedel S., Learning Python Code Suggestion with A Sparse Pointer Network, (2016)",Include,Exclude
scikit-learn: machine learning in python,"Pedregosa F., Et al., Scikit-learn: Machine learning in Python, J. Mach. Learn. Res., 12, pp. 2825-2830, (2011)",Exclude,""
dltpy: deep learning type inference of python function signatures using natural language context,"Boone C., De Bruin N., Langerak A., Stelmach F., Dltpy: Deep Learning Type Inference of Python Function Signatures Using Natural Language Context, (2019)",Exclude,""
a systematic mapping study of source code representation for deep learning in software engineering,"Samoaa H.P., Bayram F., Salza P., Leitner P., A systematic mapping study of source code representation for deep learning in software engineering, IET Softw, (2022)",Exclude,""
deep learning similarities from different representations of source code,"Tufano M., Watson C., Bavota G., Di Penta M., White M., Poshyvanyk D., Deep learning similarities from different representations of source code, MSR, (2018)",Include,Include
code mapping in heterogeneous platforms using deep learning and llvm-ir,"Barchi F., Urgese G., Macii E., Acquaviva A., Code mapping in heterogeneous platforms using deep learning and llvm-ir, 2019 56th ACM/IEEE Design Automation Conference (DAC), pp. 1-6, (2019)",Exclude,""
codeql for research,"CodeQL for research, Semmle, (2019)",Exclude,""
source code analysis: a road map,"Binkley D., Source code analysis: A road map, Proc. Future Softw. Eng., pp. 104-119, (2007)",Exclude,""
codexglue: a machine learning benchmark dataset for code understanding and generation [j],"Lu S., Guo D., Ren S., Et al., Codexglue: A machine learning benchmark dataset for code understanding and generation [J], (2021)",Exclude,""
a survey on machine learning techniques for source code analysis,"Sharma T., Kechagia M., Georgiou S., Tiwari R., Sarro F., A Survey on Machine Learning Techniques for Source Code Analysis, (2021)",Exclude,""
deep learning for source code modeling and generation: models,"Le T.H.M., Chen H., Ali Babar M., Deep learning for source code modeling and generation: Models, applications, and challenges, ACM Computing Surveys (CSUR), 53, 3, pp. 1-38, (2020)",Exclude,""
project codenet: a large-scale ai for code dataset for learning a diversity of coding tasks.,"Puri R., Kung D.S., Janssen G., Zhang W., Domeniconi G., Zolotov V., Dolby J., Chen J., Choudhury M., Decker L., Et al., Project CodeNet: A Large-Scale AI for Code Dataset for Learning A Diversity of Coding Tasks., (2021)",Exclude,""
a survey on deep learning-based source code defect analysis,"Guan Z., Wang X., Xin W., Wang J., Zhang L., A survey on deep learning-based source code defect analysis, 2020 5th Int. Conf. Comput. Commun. Syst. Icccs 2020, pp. 167-171, (2020)",Exclude,""
retrieval on source code: a neural code search,"Sachdev S., Li H., Luan S., Kim S., Sen K., Chandra S., Retrieval on source code: A neural code search, Proceedings of the 2Nd ACM SIGPLAN International Workshop on Machine Learning and Programming Languages, pp. 31-41, (2018)",Include,Exclude
deep code search,"Gu X., Zhang H., Kim S., Deep code search, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE)., pp. 933-944, (2018)",Include,Exclude
codesearchnet challenge: evaluating the state of semantic code search,"Husain H., Wu H., Gazit T., Allamanis M., Brockschmidt M., Codesearchnet challenge: Evaluating the state of semantic code search, CoRR, (2019)",Exclude,""
cradle: deep code retrieval based on semantic dependency learning,"Gu W., Et al., CRaDLe: Deep code retrieval based on semantic dependency learning, Neural Netw, 141, pp. 385-394, (2021)",Include,Include
deepsim: deep learning code functional similarity,"Zhao G., Huang J., Deepsim: deep learning code functional similarity, pp. 141-151, (2018)",Include,Include
deepcode: feedback codes via deep learning,"Kim H., Jiang Y., Kannan S., Oh S., Viswanath P., Deepcode: Feedback codes via deep learning, CoRR, (2018)",Include,Exclude
neural code search evaluation dataset,"Li H., Kim S., Chandra S., Neural code search evaluation dataset, Arxiv: Cs.Se/1908.09804, (2019)",Exclude,""
on multi-modal learning of editing source code,"Chakraborty S., Ray B., On multi-modal learning of editing source code, ASE, pp. 443-455, (2021)",Include,Include
a language-independent analysis platform for source code,"Weiss K., Banse C., A Language-Independent Analysis Platform for Source Code, (2022)",Exclude,""
using structural context to recommend source code examples,"Holmes R., Murphy G.C., Using structural context to recommend source code examples, Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005, pp. 117-125, (2005)",Exclude,""
idbench: evaluating semantic representations of identifier names in source code,"Wainakh Y., Rauf M., Pradel M., IdBench: Evaluating semantic representations of identifier names in source code, International Conference on Software Engineering. IEEE, pp. 562-573, (2021)",Exclude,""
a framework for source code search using program patterns,"Paul S., Prakash A., A framework for source code search using program patterns, IEEE Transactions on Software Engineering, 20, 6, pp. 463-475, (1994)",Exclude,""
large-scale and languageoblivious code authorship identification,"Abuhamad M., AbuHmed T., Mohaisen A., Nyang D., Large-scale and languageoblivious code authorship identification, Proceedings of the ACM SIGSAC Conference on Computer and Communications Security, pp. 101-114, (2018)",Exclude,""
source code authorship attribution using long short-term memory based networks,"Alsulami B., Dauber E., Harang R., Mancoridis S., Greenstadt R., Source code authorship attribution using long short-term memory based networks, European Symposium on Research in Computer Security, pp. 65-82, (2017)",Exclude,""
learning and evaluating contextual embedding of source code,"Kanade A., Maniatis P., Balakrishnan G., Shi K., Learning and Evaluating Contextual Embedding of Source Code, pp. 5110-5121, (2020)",Include,Exclude
pretrained contextual embedding of source code,"Kanade A., Maniatis P., Balakrishnan G., Shi K., Pretrained Contextual Embedding of Source Code, (2020)",Include,Exclude
source code authorship attribution using file embeddings,"Bogdanova A., Source code authorship attribution using file embeddings, Proc. ACM SIGPLAN Int. Conf. Syst., Program., Lang., Appl., Softw. Hum., pp. 31-33, (2021)",Include,Include
on the use of domain terms in source code,"Haiduc S., Marcus A., On the use of domain terms in source code, 2008 16th IEEE International Conference on Program Comprehension, pp. 113-122, (2008)",Exclude,""
fine-grained and accurate source code differencing,"Falleri J., Morandat F., Blanc X., Martinez M., Monperrus M., Fine-grained and accurate source code differencing, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering., pp. 313-324, (2014)",Exclude,""
semantic source code models using identifier embeddings,"Efstathiou V., Spinellis D., Semantic source code models using identifier embeddings, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), pp. 29-33, (2019)",Exclude,""
generating performance bounds from source code,"Narayanan S.H.K., Norris B., Hovland P.D., Generating performance bounds from source code, 2010 39th International Conference on Parallel Processing Workshops, pp. 197-206, (2010)",Exclude,""
a metrics suite for object oriented design[j],"Chidamber S.R., Kemerer C.F., A metrics suite for object oriented design[J], Ieee Transactions on 425 Software Engineering, 20, 6, pp. 476-493, (1994)",Exclude,""
a complexity measure[j],"McCabe T.J., A complexity measure[J], Ieee Transactions on Software Engineering, SE-2, 4, pp. 308-320, (1976)",Exclude,""
measuring class importance in the context of design evolution,"Hammad M., Collard M.L., Maletic J.I., Measuring class importance in the context of design evolution, Proc. 18th IEEE Int. Conf. Prog. Comprehension, pp. 148-151, (2010)",Exclude,""
cyclomatic complexity,"Ebert C., Cain J., Antoniol G., Counsell S., Laplante P., Cyclomatic complexity, IEEE softw, 33, 6, pp. 27-29, (2016)",Exclude,""
oo design quality metrics-an analysis of dependencies,"Martin R., Oo design quality metrics-an analysis of dependencies, (1994)",Exclude,""
detecting missing method calls in object-oriented software,"Monperrus M., Bruch M., Mezini M., Detecting missing method calls in object-oriented software, ECOOP, pp. 2-25, (2010)",Exclude,""
a unified framework for coupling measurement in object-oriented systems,"Briand L.C., Daly J.W., Wust J.K., A unified framework for coupling measurement in object-oriented systems, IEEE Transactions on Software Engineering, 25, 1, pp. 91-121, (1999)",Exclude,""
a coupling-guided cluster analysis approach to reengineer the modularity of objectoriented systems,"Abreu F.B.E., Pereira G., Sousa P.M.A., A coupling-guided cluster analysis approach to reengineer the modularity of objectoriented systems, Proc. 4th Eur. Conf. Softw. Maintenance Reengineering, pp. 13-22, (2000)",Include,Exclude
measuring functional cohesion,"Bieman J.M., Ott L.M., Measuring functional cohesion, IEEE transactions on Software Engineering, 20, 8, pp. 644-657, (1994)",Exclude,""
empirical studies of quality models in objectoriented systems,"Briand L.C., Wust J., Empirical studies of quality models in objectoriented systems, Adv. Comput., 56, pp. 97-166, (2002)",Exclude,""
evaluating complexity,"Shin Y., Meneely A., Wtlliams L., Osborne J.A., Evaluating complexity, code chum, and developer activity metrics as indicators of software vulnerabilities, IEEE Transactions on Software Engineering, 37, 6, pp. 772-787, (2010)",Include,""
identifying key classes in object-oriented software using generalized k-core decomposition,"Pan W., Song B., Li K., Zhang K., Identifying key classes in object-oriented software using generalized k-core decomposition, Future Gener. Comput. Syst., 81, pp. 188-202, (2018)",Include,Exclude
oo design quality metrics,"Martin R., Oo design quality metrics-an analysis of dependencies, (1994)",Exclude,""
evaluating and comparing complexity,"Moshtari S., Sami A., Evaluating and comparing complexity, coupling and a new proposed set of coupling metrics in cross-project vulnerability prediction, Proceedings of the SAC, Pisa, Italy, pp. 1415-1421, (2016)",Exclude,""
object-oriented metrics: measures complexity,"Henderson-Sellers B., Object-Oriented Metrics: Measures Complexity, (1995)",Exclude,""
using the conceptual cohesion of classes for fault prediction in object-oriented systems,"Marcus A., Poshyvanyk D., Ferenc R., Using the conceptual cohesion of classes for fault prediction in object-oriented systems, IEEE Trans. Softw. Eng., 34, 2, pp. 287-300, (2008)",Exclude,""
a complexity measure for ontology based on uml,"Kang D., Xu B., Lu J., Chu W.C., A complexity measure for ontology based on UML, Proc. 10th IEEE Int. Workshop Future Trends Distrib. Comput. Syst. FTDCS, pp. 222-228, (2004)",Exclude,""
a validation of object-oriented design metrics as quality indicators,"Basili V.R., Briand L.C., Melo W.L., A validation of object-oriented design metrics as quality indicators, Ieee Trans. Softw. Eng, 22, 10, pp. 751-761, (1996)",Exclude,""
using complexity,"Chowdhury I., Zulkernine M., Using complexity, coupling, and cohesion metrics as early indicators of vulnerabilities, Journal of Systems Architecture, 57, 3, pp. 294-313, (2011)",Include,""
the mood metrics set,"Abreu F.B.E., The mood metrics set, Proc. Eur. Conf. Object-Oriented Program. Workshop Metrics, (1995)",Exclude,""
design patterns: elements of reusable object-oriented software,"Gamma E., Helm R., Johnson R., Vlissides J., Design patterns: elements of reusable object-oriented software, (1995)",Exclude,""
a hybrid set of complexity metrics for large-scale object-oriented software systems,"Ma Y., He K., Li B., Liu J., Zhou X., A hybrid set of complexity metrics for large-scale object-oriented software systems, J. Comput. Sci. Technol., 25, 6, pp. 1184-1201, (2010)",Exclude,""
identifying key classes using h-index and its variants,"Wang M.S., Lu H.M., Zhou Y.M., Xu B.W., Identifying key classes using H-index and its variants, J. Front. Comput. Sci. Technol., 5, 10, pp. 891-903, (2011)",Exclude,""
an evaluation of the mood set of object-oriented software metrics,"Harrison R., Counsell S.J., An evaluation of the mood set of object-oriented software metrics[J], Ieee Transactions on Software Engineering, 24, 6, (1998)",Exclude,""
optimization of object- oriented programs using static class hierarchy analysis,"Dean J., Grove D., Chambers C., Optimization of Object- Oriented Programs Using Static Class Hierarchy Analysis, Proceedings of the 9th European Conference on Object-Oriented Programming (ECOOP '95), pp. 77-101, (1995)",Include,Exclude
cognitive complexity,"Campbell G.A., SonarSource S., Cognitive complexity, (2020)",Include,""
design-level cohesion measures: derivation,"Kang B., Bieman J.M., Design-level cohesion measures: Derivation, comparison, and applications, Proceedings of 20th International Computer Software and Applications Conference: COMPSAC'96. IEEE, pp. 92-97, (1996)",Exclude,""
structured testing: a testing methodology using the cyclomatic complexity metric,"Watson A.H., Wallace D.R., McCabe T.J., Structured testing: A testing methodology using the cyclomatic complexity metric, Special Publication (NIST SP), (1996)",Exclude,""
on the definition of speedup,"Ertel W., On the definition of speedup, Proceedings of the International Conference on Parallel Architectures and Languages Europe, pp. 289-300, (1994)",Exclude,""
a hierarchical model for object-oriented design quality assessment,"Bansiya J., Davis C.G., A hierarchical model for object-oriented design quality assessment, IEEE Trans Soft Engin, 28, 1, pp. 4-17, (2002)",Exclude,""
finding key classes in object-oriented software systems by techniques based on static analysis,"Sora I., Chirila C., Finding key classes in object-oriented software systems by techniques based on static analysis, Inf. Softw. Technol., 116, (2019)",Exclude,""
predicting the probability of change in object-oriented systems,"Tsantalis N., Chatzigeorgiou A., Stephanides G., Predicting the probability of change in object-oriented systems, IEEE Trans. Softw. Eng., 31, 7, pp. 601-614, (2005)",Exclude,""
sparse r-cnn: end-to-end object detection with learnable proposals,"Sun P., Zhang R., Jiang Y., Kong T., Xu C., Zhan W., Tomizuka M., Li L., Yuan Z., Wang C., Luo P., Sparse R-CNN: End-to-end object detection with learnable proposals, pp. 14454-14463, (2021)",Exclude,""
measuring design-level cohesion,"Bieman J.M., Kang B., Measuring design-level cohesion, IEEE Transactions on software engineering, 24, 2, pp. 111-124, (1998)",Exclude,""
identifying important classes of large software systems through k-core decomposition,"Meyer P., Siy H.P., Bhowmick S., Identifying important classes of large software systems through k-core decomposition, Adv. Complex Syst., 17, 7-8, (2014)",Include,Exclude
evaluation: from precision,"Powers D.M.W., Evaluation: From precision, recall and F-measure to ROC, informedness, markedness & correlation, Journal of Machine Learning Technologies, 2, 1, pp. 37-63, (2011)",Include,""
abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints,"Cousot P., Cousot R., Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints, Conference Record of the Fourth Annual Acm SIGPLAN-SIGACT Symposium on Principles of Programming Languages, (1977)",Exclude,""
on deep unsupervised active learning,"Li C., Ma H., Kang Z., Yuan Y., Zhang X., Wang G., On Deep Unsupervised Active Learning, Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence, IJCAI-20, Christian Bessiere (Ed.). International Joint Conferences on Artificial Intelligence Organization, pp. 2626-2632, (2020)",Exclude,""
image classification with deep learning in the presence of noisy labels: a survey,"Algan G., Ulusoy I., Image classification with deep learning in the presence of noisy labels: A survey, Knowl.-Based Syst., 215, (2021)",Exclude,""
federated learning of a mixture of global and local models,"Hanzely F., Richtarik P., Federated learning of a mixture of global and local models, (2020)",Exclude,""
2021 self-supervised contrastive learning for code retrieval and summarization via semantic-preserving transformations,"Bui N.D.Q., Yu Y., Jiang L., 2021 Self-Supervised Contrastive Learning for Code Retrieval and Summarization via Semantic-Preserving Transformations, Proceedings of the 44th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR ?21). ACM, pp. 511-521",Include,Include
deep learning & software engineering: state of research and future directions,"Devanbu P., Dwyer M., Elbaum S., Lowry M., Moran K., Poshyvanyk D., Ray B., Singh R., Zhang X., Deep Learning & Software Engineering: State of Research and Future Directions, (2020)",Exclude,""
transfer learning,"",Include,""
learning task-dependent distributed representations by backpropagation through structure,"Goller C., Kuchler A., Learning task-dependent distributed representations by backpropagation through structure, Proceedings of ICNN, 1, pp. 347-352, (1996)",Exclude,""
minimizing the cost of iterative compilation with active learning,"Ogilvie W.F., Petoumenos P., Wang Z., Leather H., Minimizing the cost of iterative compilation with active learning, 2017 IEEE/ACM International Symposium on Code Generation and Optimization (CGO), pp. 245-256, (2017)",Exclude,""
deep transfer learning with joint adaptation networks,"Long M., Zhu H., Wang J., Jordan M.I., Deep transfer learning with joint adaptation networks, Proc. 34th Int. Conf. Mach. Learn, pp. 2208-2217, (2017)",Exclude,""
deeplearning4j,Deeplearning4j,Exclude,""
2020. a survey on contrastive self-supervised learning,"Jaiswal A., Ramesh Babu A., Zaki Zadeh M., Banerjee D., Makedon F., 2020. A Survey on Contrastive Self-supervised Learning",Exclude,""
cil: contrastive instance learning framework for distantly supervised relation extraction,"Chen T., Shi H., Tang S., Chen Z., Wu F., Zhuang Y., Cil: contrastive instance learning framework for distantly supervised relation extraction, (2021)",Exclude,""
simcls: a simple framework for contrastive learning of abstractive summarization,"Liu Y., Liu P., Simcls: a simple framework for contrastive learning of abstractive summarization, (2021)",Exclude,""
deep residual learning for image recognition,"He K., Zhang X., Ren S., Sun J., Deep residual learning for image recognition, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 770-778, (2016)",Exclude,""
deep learning,"",Include,""
endto-end deep learning of optimization heuristics,"Cummins C., Petoumenos P., Wang Z., Leather H., Endto-end deep learning of optimization heuristics, 26th International Conference on Parallel Architectures and Compilation Techniques (PACT), (2017)",Exclude,""
early methods for detecting adversarial images,"Hendrycks D., Gimpel K., Early Methods for Detecting Adversarial Images, (2016)",Exclude,""
a survey on the state-of-the-art machine learning models in the context of nlp,"Khan W., Daud A., Abdul Nasir J., Amjad T., A survey on the state-of-the-art machine learning models in the context of nlp, Kuwait Journal of Science, 43, (2016)",Exclude,""
improvements to context based self-supervised learning,"Nathan Mundhenk T., Ho D., Chen B.Y., Improvements to context based self-supervised learning, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition., pp. 9339-9348, (2018)",Exclude,""
unsupervised representation learning by predicting image rotations,"Gidaris S., Singh P., Komodakis N., Unsupervised Representation Learning by Predicting Image Rotations, CoRR abs/1803 07728 2018, (2018)",Exclude,""
a simple framework for contrastive learning of visual representations,"Chen T., Kornblith S., Norouzi M., Hinton G., A simple framework for contrastive learning of visual representations, Interna-tional conference on machine learning. PMLR, (2020)",Exclude,""
improving multi-instance multi-label learning by extreme learning machine,"Yin Y., Zhao Y., Li C., Zhang B., Improving multi-instance multi-label learning by extreme learning machine, Appl Sci, 6, 6, (2016)",Exclude,""
a unified framework for metric transfer learning,"Xu Y., Pan S.J., Xiong H., Et al., A unified framework for metric transfer learning, IEEE Trans. Knowl. Data Eng., 29, 6, pp. 1158-1171, (2017)",Exclude,""
federated learning with personalization layers,"Arivazhagan M.G., Aggarwal V., Singh A.K., Choudhary S., Federated learning with personalization layers, (2019)",Exclude,""
image segmentation using deep learning: a survey,"Minaee S., Boykov Y.Y., Porikli F., Et al., Image segmentation using deep learning: A survey[J], IEEE Transactions on Pattern Analysis and Machine Intelligence, (2021)",Exclude,""
neurovectorizer: end-to-end vectorization with deep reinforcement learning,"Haj-Ali A., Ahmed N.K., Willke T., Sophia Shao Y., Asanovic K., Stoica I., Neurovectorizer: End-to-end vectorization with deep reinforcement learning, Proceedings of the 18th ACM/IEEE International Symposium on Code Generation and Optimization, pp. 242-255, (2020)",Exclude,""
geometric deep learning: going beyond euclidean data,"Bronstein M.M., Bruna J., LeCun Y., Szlam A., Vandergheynst P., Geometric deep learning: Going beyond Euclidean data, Ieee Signal Process. Mag., 34, 4, pp. 18-42, (2017)",Exclude,""
a survey on federated learning,"Zhang C., Xie Y., Bai H., Yu B., Li W., Gao Y., A survey on federated learning, Knowl.-Based Syst., 216, (2021)",Exclude,""
2019. a theoretical analysis of contrastive unsupervised representation learning,"Arora S., Khandeparkar H., Khodak M., Plevrakis O., Saunshi N., 2019. A Theoretical Analysis of Contrastive Unsupervised Representation Learning",Exclude,""
deepinf: social influence prediction with deep learning,"Qiu J., Tang J., Ma H., Dong Y., Wang K., Tang J., Deepinf: Social influence prediction with deep learning, Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 2110-2119, (2018)",Exclude,""
a survey on transfer learning,"Pan S.J., Yang Q., A survey on transfer learning, IEEE Transactions on Knowledge and Data Engineering, 22, 10, pp. 1345-1359, (2009)",Exclude,""
deep sets,"Zaheer M., Kottur S., Ravanbakhsh S., Poczos B., Salakhutdinov R., Smola A.J., Deep Sets, (2017)",Include,""
using transfer learning for code-related tasks,"Mastropaolo A., Cooper N., Palacio D., Scalabrino S., Poshyvanyk D., Oliveto R., Bavota G., Using transfer learning for code-related tasks, Transactions on Software Engineering, 1, pp. 1-20, (2022)",Include,Exclude
2020. contrastive self-supervised learning for commonsense reasoning,"Klein T., Nabi M., 2020. Contrastive Self-Supervised Learning for Commonsense Reasoning",Exclude,""
2020 a simple and effective self-supervised contrastive learning framework for aspect detection,"Shi T., Li L., Wang P., Reddy C.K., 2020 A Simple and Effective Self-Supervised Contrastive Learning Framework for Aspect Detection, CoRR abs/2009 09107, (2020)",Exclude,""
toward deep learning software repositories,"White M., Vendome C., Linares-Vasquez M., Poshyvanyk D., Toward deep learning software repositories, Proceedings of the 2015 IEEE/ACM 12th Working Conference on Mining Software Repositories, pp. 334-345, (2015)",Exclude,""
self-supervised video representation learning using inter-intra contrastive framework,"Tao Xuetingwang L., Yamasaki T., Self-supervised video representation learning using inter-intra contrastive framework, Proceedings of the 28th ACM International Conference on Multimedia (MM ?20). ACM, pp. 2193-2201, (2020)",Exclude,""
deep api learning,"Gu X., Zhang H., Zhang D., Kim S., Deep API Learning, Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering 2016, (2016)",Include,Exclude
2020 cert: contrastive self-supervised learning for language understanding,"Fang H., Xie P., 2020 CERT: Contrastive Self-supervised Learning for Language Understanding",Exclude,""
cooperative learning of audio and video models from self-supervised synchronization,"Korbar B., Tran D., Torresani L., Cooperative Learning of Audio and Video Models from Self-Supervised Synchronization, Proceedings of the 32nd International Conference on Neural Information Processing Systems (NIPS ?18) ACM, pp. 7774-7785, (2018)",Exclude,""
2021. simcse: simple contrastive learning of sentence embeddings,"Gao T., Yao X., Chen D., 2021. SimCSE: Simple Contrastive Learning of Sentence Embeddings, Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing. Association for Computational Linguistics, Online and Punta Cana, Dominican Republic, pp. 6894-6910",Exclude,""
representation learning: a review and new perspectives,"Bengio Y., Courville A., Vincent P., Representation learning: A review and new perspectives, Pattern Analysis and Machine Intelligence, IEEE Transactions On, 35, 8, pp. 1798-1828, (2013)",Exclude,""
a survey on federated learning: the journey from centralized to distributed on-site learning and beyond,"AbdulRahman S., Tout H., Ould-Slimane H., Mourad A., Talhi C., Guizani M., A survey on federated learning: The journey from centralized to distributed on-site learning and beyond, IEEE Internet Things J., 8, 7, pp. 5476-5497, (2020)",Exclude,""
the state of educational data mining in 2009: a review and future visions,"BAKER R. S., YACEF K., The state of educational data mining in 2009: A review and future visions, Journal of Educational Data Mining, 1, 1, pp. 3-17, (2009)",Exclude,""
deep learning type inference,"Hellendoorn V. J., Bird C., Barr E. T., Allamanis M., Deep learning type inference, Proceedings of the 2018 26th acm joint meeting on european software engineering conference and symposium on the foundations of software engineering, pp. 152-162, (2018)",Include,Exclude
attention-based deep multiple instance learning,"Ilse M., Tomczak J., Welling M., Attention-based deep multiple instance learning, ICML, pp. 2127-2136, (2018)",Exclude,""
why does unsupervised pre-training help deep learning?,"Erhan D., Bengio Y., Courville A., Manzagol P.-A., Vincent P., Bengio S., Why does unsupervised pre-training help deep learning?, Journal of MachineLearning Research, (2010)",Exclude,""
dive into deep learning,"Zhang A., Lipton Z.C., Li M., Smola A.J., Dive into deep learning, (2021)",Exclude,""
learning blended,"Wang K., Su Z., Learning blended, precise semantic program embeddings, (2019)",Include,Exclude
self-supervised learning.,"Zisserman A., Self-Supervised Learning., (2018)",Include,""
self-supervised video representation learning with odd-one-out networks,"Fernando B., Bilen H., Gavves E., Gould S., Self-Supervised Video Representation Learning with Odd-One-Out Networks, (2016)",Exclude,""
learning from 6,"Gruska N., Wasylkowski A., Zeller A., Learning from 6, 000 projects: Lightweight cross-project anomaly detection, Proceedings of the 19th International Symposium on Software Testing and Analysis (ISSTA '10), pp. 119-130, (2010)",Include,""
improving federated learning personalization via model agnostic meta learning,"Jiang Y., Konecny J., Rush K., Kannan S., Improving federated learning personalization via model agnostic meta learning, (2019)",Exclude,""
deep learning applied to nlp,"Lopez M.M., Kalita J., Deep learning applied to nlp, arXiv preprint arXiv:1703.03091, (2017)",Exclude,""
a new model for learning in graph domains [c],"Gori M., Monfardini G., Scarselli F., A new model for learning in graph domains [C], Proceedings. 2005 IEEE international joint conference on neural networks., 2, pp. 729-734, (2005)",Exclude,""
fault localization analysis based on deep neural network,"Zheng W., Hu D., Wang J., Fault localization analysis based on deep neural network, Mathematical Problems in Engineering, 2016, (2016)",Include,Exclude
dynamic edge-conditioned filters in convolutional neural networks on graphs,"Simonovsky M., Komodakis N., Dynamic edge-conditioned filters in convolutional neural networks on graphs, Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 3693-3702, (2017)",Exclude,""
effective use of word order for text categorization with convolutional neural networks,"Johnson R., Zhang T., Effective use of word order for text categorization with convolutional neural networks, Proceedings of the Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pp. 103-112, (2015)",Exclude,""
graphgan: graph representation learning with generative adversarial nets,"Wang H., Wang J., Wang J., Zhao M., Zhang W., Zhang F., Xie X., Guo M., GraphGAN: Graph Representation Learning With Generative Adversarial Nets, Proceedings of the Thirty-Second AAAI Conference on Artificial Intelligence, (AAAI), the 30th innovative Applications of Artificial Intelligence (IAAI), and the 8th AAAI Symposium on Educational Advances in Artificial Intelligence (EAAI), pp. 2508-2515, (2018)",Exclude,""
ordered neurons: integrating tree structures into recurrent neural networks,"Shen Yikang, Tan Shawn, Sordoni Alessandro, Courville Aaron, Ordered neurons: Integrating tree structures into recurrent neural networks, International Conference on Learning Representations, (2019)",Exclude,""
understanding the difficulty of training deep feedforward neural networks,"Glorot X., Bengio Y., Understanding the difficulty of training deep feedforward neural networks, Proceedings of the thirteenth international conference on artificial intelligence and statistics (AISTATS). JMLR Workshop and Conference Proceedings, (2010)",Exclude,""
improving graph collaborative filtering with neighborhood-enriched contrastive learning,"Lin Z., Tian C., Hou Y., Xin Zhao W., Improving Graph Collaborative Filtering with Neighborhood-enriched Contrastive Learning, WWW, pp. 2320-2329, (2022)",Exclude,""
residual gated graph convnets,"Bresson X., Laurent T., Residual gated graph convnets, (2017)",Exclude,""
hyperbolic attention networks,"Gulcehre C., Denil M., Malinowski M., Razavi A., Pascanu R., Hermann K.M., Battaglia P., Bapst V., Raposo D., Santoro A., Et al., Hyperbolic Attention Networks, (2010)",Exclude,""
structured citation trend prediction using graph neural networks,"Cummings D., Nassar M., Structured citation trend prediction using graph neural networks, ICASSP 2020-2020 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pp. 3897-3901, (2020)",Exclude,""
fast graph representation learning with pytorch geometric,"Fey M., Lenssen J.E., Fast graph representation learning with PyTorch Geometric, ICLR Workshop on Representation Learning on Graphs and Manifolds, (2019)",Exclude,""
unignn: a unified framework for graph and hypergraph neural networks,"Huang J., Yang J., Unignn: a unified framework for graph and hypergraph neural networks, IJCAI, (2021)",Exclude,""
sentiment classification with word localization based on weakly supervised learning with a convolutional neural network,"Lee G., Jeong J., Seo S., Kim C., Kang P., Sentiment classification with word localization based on weakly supervised learning with a convolutional neural network, Knowl.-Based Syst., 152, pp. 70-82, (2018)",Exclude,""
convolutional networks on graphs for learning molecular fingerprints,"Duvenaud D., Maclaurin D., Aguilera-Iparraguirre J., Gomez-Bombarelli R., Hirzel T., Aspuru-Guzik A., Adams R.P., Convolutional Networks on Graphs for Learning Molecular Fingerprints, Advances in Neural Information Processing Systems 28: Annual Conference on Neural Information Processing Systems 2015, pp. 2224-2232, (2015)",Exclude,""
continuous-time dynamic network embeddings companion,"Nguyen G.H., Lee J.B., Rossi R.A., Ahmed N.K., Koh E., Kim S., Continuous-Time Dynamic Network Embeddings Companion, Proceedings of the The Web Conference 2018, pp. 969-976, (2018)",Exclude,""
graph contrastive learning with adaptive augmentation,"Zhu Y., Xu Y., Yu F., Liu Q., Wu S., Wang L., Graph contrastive learning with adaptive augmentation, Proceedings of the Web Conference, 2021, (2021)",Exclude,""
minimum dominating set of multiplex networks: definition,"Zhao D., Xiao G., Wang Z., Et al., Minimum dominating set of multiplex networks: definition, application, and identification, IEEE Trans. Syst. Man Cybern. Syst., 51, pp. 7823-7837, (2020)",Exclude,""
reducing the dimensionality of data with neural networks,"Hinton G.E., Salakhutdinov R.R., Reducing the dimensionality of data with neural networks, Science, 313, 5786, (2006)",Exclude,""
link prediction based on graph neural networks,"Zhang M., Chen Y., Link prediction based on graph neural networks, Proceedings of the Advances in Neural Information Processing Systems, pp. 5165-5175, (2018)",Exclude,""
deepergcn: all you need to train deeper gcns,"Li G., Xiong C., Thabet A., Ghanem B., Deepergcn: All you need to train deeper gcns, (2020)",Exclude,""
the graph neural network model [j],"Scarselli F., Gori M., Tsoi A.C., Et al., The graph neural network model [J], IEEE transactions on neural networks, 20, 1, pp. 61-80, (2008)",Exclude,""
revisiting graph neural networks: all we have is low-pass filters,"Nt H., Maehara T., Revisiting Graph Neural Networks: All We have is Low-Pass Filters, (2019)",Exclude,""
graph representation learning,"Hamilton W.L., Graph representation learning, Synth. Lect. Artif. Intell. Mach. Learn., 14, 3, pp. 1-159, (2020)",Exclude,""
automated data augmentations for graph classification,"Luo Y., McThrow M., Au W.Y., Komikado T., Uchino K., Maruhashi K., Ji S., Automated Data Augmentations for Graph Classification, (2022)",Exclude,""
on the importance of building high-quality training datasets for neural code search,"Sun Z., Li L., Liu Y., Du X., Li L., On the importance of building high-quality training datasets for neural code search, The 44th International Conference on Software Engineering (ICSE 2022), (2022)",Exclude,""
a tutorial on network embeddings,"Chen H., Perozzi B., Al-Rfou R., Skiena S., A tutorial on network embeddings, (2018)",Exclude,""
knowledge transfer for out-of-knowledge-base entities: a graph neural network approach,"Hamaguchi T., Oiwa H., Shimbo M., Matsumoto Y., Knowledge transfer for out-of-knowledge-base entities: A graph neural network approach, (2017)",Exclude,""
bag of graphs=definition,"Silva F.B., Et al., Bag of Graphs=definition, Implementation, and Validation in Classification Tasks, (2014)",Exclude,""
long short-term memory over recursive structures,"Zhu X., Sobihani P., Guo H., Long short-term memory over recursive structures, International Conference on Machine Learning, pp. 1604-1612, (2015)",Exclude,""
self-attention graph pooling,"Lee J., Lee I., Kang J., Self-attention graph pooling, International conference on machine learning. PMLR, pp. 3734-3743, (2019)",Exclude,""
introduction to multi-layer feed-forward neural networks,"Svozil D., Kvasnicka V., Pospichal J., Introduction to multi-layer feed-forward neural networks, Chemometrics and Intelligent Laboratory Systems, (1997)",Exclude,""
cope: modeling continuous propagation and evolution on interaction graph,"Zhang Y., Xiong Y., Li D., Shan C., Ren K., Zhu Y., CoPE: Modeling Continuous Propagation and Evolution on Interaction Graph, Proceedings of the 30th ACM International Conference on Information & Knowledge Management, 2021, pp. 2627-2636",Exclude,""
pathsim: meta path-based top-k similarity search in heterogeneous information networks,"Sun Y., Han J., Yan X., Yu P.S., Wu T., Pathsim: Meta path-based top-k similarity search in heterogeneous information networks, VLDB, (2011)",Exclude,""
a practical tutorial on graph neural networks,"Ronald Ward I., Joyner J., Lickfold C., Guo Y., Bennamoun M., A Practical Tutorial on Graph Neural Networks, (2020)",Exclude,""
gnnexplainer: generating explanations for graph neural networks,"Ying Z., Bourgeois D., You J., Zitnik M., Leskovec J., GNNExplainer: Generating Explanations for Graph Neural Networks, Advances in Neural Information Processing Systems, H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alche-Buc, E. Fox, and R. Garnett (Eds.). Curran Associates, Inc, (2019)",Exclude,""
multi-level recommendation reasoning over knowledge graphs with reinforcement learning,"Wang X., Liu K., Wang D., Wu L., Fu Y., Xie X., Multi-level recommendation reasoning over knowledge graphs with reinforcement learning, WWW, pp. 2098-2108, (2022)",Exclude,""
graph2vec: learning distributed representations of graphs,"Narayanan A., Chandramohan M., Venkatesan R., Et al., graph2vec: learning distributed representations of graphs, Proceedings of the MLG, Halifax, Nova Scotia, CAN, (2017)",Exclude,""
towards sparse hierarchical graph classifiers,"Cangea C., Velickovic P., Jovanovic N., Kipf T., Lió, ‘P.: Towards Sparse Hierarchical Graph Classifiers. Arxiv Preprint Arxiv, 1811, (2018)",Exclude,""
modeling global and local node contexts for text generation from knowledge graphs,"Ribeiro L.F., Zhang Y., Gardent C., Gurevych I., Modeling global and local node contexts for text generation from knowledge graphs, Trans. Assoc. Comput. Ling., 8, pp. 589-604, (2020)",Exclude,""
effective and efficient dropout for deep convolutional neural networks,"Cai S., Shu Y., Chen G., Chin Ooi B., Wang W., Zhang M., Effective and efficient dropout for deep convolutional neural networks, (2019)",Exclude,""
networks: an introduction,"Newman M., Networks: An Introduction, (2010)",Include,""
learning linear dynamical systems via spectral filtering,"HAZAN E., SINGH K., ZHANG C., Learning linear dynamical systems via spectral filtering, Proceedings of the 30th Conference on Advances Neural Information Processing Systems, pp. 6702-6712, (2017)",Exclude,""
attention-based bidirectional long short-term memory networks for relation classification,"Zhou P., Shi W., Tian J., Qi Z., Li B., Hao H., Xu B., Attention-based bidirectional long short-term memory networks for relation classification, Proceedings of the 54th annual meeting of the association for computational linguistics (volume 2: Short papers), pp. 207-212, (2016)",Exclude,""
call graph construction in object-oriented languages,"Grove D., DeFouw G., Dean J., Chambers C., Call graph construction in object-oriented languages, Proceedings of the 1997 12th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications, pp. 108-124, (1997)",Exclude,""
graphsmote: imbalanced node classification on graphs with graph neural networks,"Zhao T., Zhang X., Wang S., GraphSMOTE: Imbalanced node classification on graphs with graph neural networks, In Proceedings of the Fourteenth ACM International Conference on Web Search and Data Mining (WSDM ’21)., (2021)",Exclude,""
u-net: convolutional networks for biomedical image segmentation,"Ronneberger O., Fischer P., Brox T., U-net: Convolutional networks for biomedical image segmentation, International Conference on Medical image computing and computer-assisted intervention, pp. 234-241, (2015)",Exclude,""
empirical evaluation of gated recurrent neural networks on sequence modeling,"Chung J., Gulcehre C., Cho K., Bengio Y., Empirical evaluation of gated recurrent neural networks on sequence modeling, NIPS 2014 Workshop on Deep Learning, (2014)",Exclude,""
positive and unlabeled multi-graph learning,"Wu J., Pan S., Zhu X., Zhang C., Wu X., Positive and unlabeled multi-graph learning, IEEE Trans Cybern, 47, 4, pp. 818-829, (2016)",Exclude,""
graph attention networks.,"Velickovic P., Cucurull G., Casanova A., Romero A., Lio P., Bengio Y., Graph Attention Networks., (2017)",Exclude,""
spectral clustering with graph neural networks for graph pooling,"Bianchi F.M., Grattarola D., Alippi C., Spectral clustering with graph neural networks for graph pooling, Proc. Int. Conf. Mach. Learn., pp. 874-883, (2020)",Exclude,""
pre-training graph neural networks,"Hu W., Liu B., Gomes J., Zitnik M., Liang P., Pande V., Leskovec J., Pre-training graph neural networks, ICLR, (2020)",Exclude,""
a learning algorithm for continually running fully recurrent neural networks,"Williams R.J., Zipser D., A learning algorithm for continually running fully recurrent neural networks, Neural Comput, 1, 2, pp. 270-280, (1989)",Exclude,""
indigo: gnn-based inductive knowledge graph completion using pair-wise encoding,"Liu S., Grau B., Horrocks I., Kostylev E., Indigo: Gnn-based inductive knowledge graph completion using pair-wise encoding, Advances in Neural Information Processing Systems, 34, pp. 2034-2045, (2021)",Exclude,""
representation learning on graphs: methods and applications,"Hamilton W.L., Ying R., Leskovec J., Representation learning on graphs: Methods and applications, IEEE Data Eng. Bull., 40, 3, pp. 52-74, (2017)",Exclude,""
a pipeline for measuring brand loyalty through social media mining,"Samoaa H., Catania B., A pipeline for measuring brand loyalty through social media mining, SOFSEM 2021. LNCS, Vol. 12607, pp. 489-504, (2021)",Exclude,""
dynamic network embedding by modeling triadic closure process,"Zhou L., Yang Y., Ren X., Wu F., Zhuang Y., Dynamic Network Embedding By Modeling Triadic Closure Process, Proceedings of the AAAI Conference on Artificial Intelligence, 32, (2018)",Exclude,""
graph convolutional policy network for goal-directed molecular graph generation,"You J., Liu B., Ying Z., Pande V., Leskovec J., Graph Convolutional Policy Network for Goal-Directed Molecular Graph Generation, Advances in Neural Information Processing Systems, 31, (2018)",Exclude,""
structure-aware transformer for graph representation learning,"Chen D., Bray L.O., Borgwardt K., Structure-Aware Transformer for Graph Representation Learning, Proceedings of the 39th International Conference on Machine Learning, Proceedings of Machine Learning Research, 2022[C]. PMLR",Exclude,""
flow graph representation,"Orailoglu A., Gajski D.D., Flow graph representation, Proc. 23rd ACM/IEEE Design Autom. Conf., pp. 503-509, (1986)",Include,""
extractive summarization considering discourse and coreference relations based on heterogeneous graph,"Huang Y.J., Kurohashi S., Extractive summarization considering discourse and coreference relations based on heterogeneous graph, Proceedings of the 16th Conference of the European Chapter of the Association for Computational Linguistics, pp. 3046-3052, (2021)",Exclude,""
latent space approaches to social network analysis,"Hoff P.D., Raftery A.E., Handcock M.S., Latent space approaches to social network analysis, Journal of the american Statistical association, 97, pp. 1090-1098, (2002)",Exclude,""
graph-based pattern-oriented,"Nguyen A.T., Nguyen T.T., Nguyen H.A., Graph-based pattern-oriented, context-sensitive source code completion, 34th international conference on software engineering, ICSE 2012, June 2-9, 2012, Zurich, Switzerland, pp. 69-79, (2012)",Exclude,""
session-based recommendation with graph neural networks,"Wu S., Tang Y., Zhu Y., Wang L., Xie X., Tan T., Session-based recommendation with graph neural networks, AAAI, 33, pp. 346-353, (2019)",Exclude,""
graphterm,"GraphTerm, (2022)",Include,""
adaptive recursive neural network for target-dependent twitter sentiment classification,"Dong L., Wei F., Tan C., Tang D., Zhou M., Xu K., Adaptive recursive neural network for target-dependent twitter sentiment classification, Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)., pp. 49-54, (2014)",Exclude,""
convolutional neural networks for sentence classification,"Yoon K., Convolutional neural networks for sentence classification, Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, pp. 1746-1751, (2014)",Exclude,""
graph neural networks with convolutional arma flters,"Bianchi F.M., Grattarola D., Livi L., Alippi C., Graph neural networks with convolutional arma flters, IEEE transactions on pattern analysis and machine intelligence, (2021)",Exclude,""
heterogeneous graph neural network,"Zhang C., Song D., Huang C., Swami A., Chawla N.V., Heterogeneous graph neural network, Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 793-803, (2019)",Exclude,""
gatedgraph sequenceneuralnetworks,"Li Y., Tarlow D., Brockschmidt M., Zemel R., GatedGraph SequenceNeuralNetworks",Exclude,""
semi-supervised classification with graph convolutional networks[j],"Kipf T.N., Welling M., Semi-supervised classification with graph convolutional networks[J], (2016)",Exclude,""
a discourse-aware graph neural network for emotion recognition in multi-party conversation,"Sun Y., Yu N., Fu G., A discourse-aware graph neural network for emotion recognition in multi-party conversation, Findings of the Association for Computational Linguistics: EMNLP 2021, pp. 2949-2958, (2021)",Exclude,""
dropedge: towards deep graph convolutional networks on node classification,"Rong Y., Huang W., Xu T., Huang J., DropEdge: Towards deep graph convolutional networks on node classification, Proceedings of the 8th International Conference on Learning Representations, (2020)",Exclude,""
glmnet: graph learning-matching convolutional networks for feature matching,"Jiang B., Sun P., Luo B., GLMNet: Graph learning-matching convolutional networks for feature matching, Pattern Recognit., 121, (2022)",Exclude,""
representation learning for graph-structured data,"Quoc Nguyen D., Representation Learning for Graph-Structured Data, (2021)",Exclude,""
network embedding and change modeling in dynamic heterogeneous networks,"Bian R., Sing Koh Y., Dobbie G., Divoli A., Network embedding and change modeling in dynamic heterogeneous networks, Proceedings of the 42nd International ACM SIGIR Conference on Research and Development in Information Retrieval., pp. 861-864, (2019)",Exclude,""
inductive and unsupervised representation learning on graph structured objects,"Wang L., Et al., Inductive and unsupervised representation learning on graph structured objects, International Conference on Learning Representations, (2020)",Exclude,""
recognizing functions in binaries with neural networks,"Shin E.C.R., Song D., Moazzezi R., Recognizing functions in binaries with neural networks, In: 24Th USENIX Security Symposium (USENIX Security, 15, pp. 611-626, (2015)",Exclude,""
robust network traffic classification,"Zhang J., Chen X., Xiang Y., Zhou W., Wu J., Robust network traffic classification, IEEE/ACM Trans. Netw., 23, 4, pp. 1257-1270, (2015)",Exclude,""
network traffic classification using correlation information,"Zhang J., Xiang Y., Wang Y., Zhou W., Xiang Y., Guan Y., Network traffic classification using correlation information, Ieee Trans. Parallel Distrib. Syst., 24, 1, pp. 104-117, (2013)",Exclude,""
dyrep: learning representations over dynamic graphs,"Trivedi R., Farajtabar M., Biswal P., Zha H., Dyrep: Learning Representations over Dynamic Graphs, International Conference on Learning Representations, (2019)",Exclude,""
multi-graph multi-label learning with dual-granularity labeling,"Zhao Y., Wang Y., Wang Z., Zhang C., Multi-graph multi-label learning with dual-granularity labeling, KDD, pp. 2327-2337, (2021)",Exclude,""
dynamic social network analysis using latent space models,"Sarkar P., Moore A., Dynamic Social Network Analysis Using Latent Space Models, Advances in Neural Information Processing Systems, 18, (2005)",Exclude,""
empirical evaluation of rectified activations in convolutional network,"Xu B., Wang N., Chen T., Li M., Empirical Evaluation of Rectified Activations in Convolutional Network, (2015)",Exclude,""
tensor graph convolutional networks for text classification,"Liu X., You X., Zhang X., Wu J., Lv P., Tensor graph convolutional networks for text classification, Proceedings of the AAAI Conference on Artificial Intelligence, 34, pp. 8409-8416, (2020)",Exclude,""
kgat: knowledge graph attention network for recommendation,"Wang X., He X., Cao Y., Liu M., Chua T.S., KGAT: Knowledge graph attention network for recommendation, Proceedings of the 25Th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 950-958, (2019)",Exclude,""
a deep-learning-based bug priority prediction using rnn-lstm neural networks,"Bani-Salameh H., Sallam M., A deep-learning-based bug priority prediction using RNN-LSTM neural networks, e-Informatica Softw. Eng. J., 15, 1, (2021)",Exclude,""
adapting distilled knowledge for few-shot relation reasoning over knowledge graphs,"Zhang Y., Qian Y., Ye Y., Zhang C., Adapting Distilled Knowledge for Few-shot Relation Reasoning over Knowledge Graphs, SDM, (2022)",Exclude,""
a generalization of transformer networks to graphs,"Dwivedi V.P., Bresson X., A Generalization of Transformer Networks to Graphs, (2020)",Exclude,""
simgnn: a neural network approach to fast graph similarity computation,"Bai Y., Ding H., Bian S., Chen T., Sun Y., Wang W., SimGNN: A Neural Network Approach to Fast Graph Similarity Computation, Proceedings of the Twelfth Acm International Conference OnWeb Search and Data Mining (WSDM '19)., pp. 384-392, (2019)",Exclude,""
strategies for pre-training graph neural networks,"Hu W., Et al., Strategies for Pre-Training Graph Neural Networks, (2020)",Exclude,""
modeling relational data with graph convolutional networks,"Schlichtkrull M.S., Kipf T.N., Bloem P., Van Den Berg R., Titov I., Welling M., Modeling relational data with graph convolutional networks, The Semantic Web-15th International Conference, ESWC 2018 volume 10843 of Lecture Notes in Computer Science, pp. 593-607, (2018)",Exclude,""
adaptive test selection for deep neural networks,"Gao X., Feng Y., Yin Y., Liu Z., Chen Z., Baowen X., Adaptive test selection for deep neural networks, ICSE, pp. 73-85, (2022)",Exclude,""
how attentive are graph attention networks?,"Brody S., Alon U., Yahav E., How attentive are graph attention networks?, (2021)",Exclude,""
highway networks,"Kumar Srivastava R., Greff K., Schmidhuber J., Highway Networks, (2015)",Exclude,""
know more say less: image captioning based on scene graphs,"Li X., Jiang S., Know more say less: Image captioning based on scene graphs, IEEE Transactions on Multimedia, 21, 8, pp. 2117-2130, (2019)",Exclude,""
reducing the state space of programming problems through data-driven feature detection,"ZHI R., PRICE T. W., LYTLE N., DONG Y., BARNES T., Reducing the state space of programming problems through data-driven feature detection, Proceedings of the second Educational Data Mining in Computer Science Education Workshop, (2018)",Exclude,""
dynamic routing between capsules,"Sabour S., Frosst N., Hinton G.E., Dynamic routing between capsules, Proceedings of the 31st International Conference on Neural Information Processing Systems, pp. 3859-3869, (2017)",Exclude,""
directed hypergraphs and applications,"Gallo G., Longo G., Pallottino S., Directed hypergraphs and applications, Discret. Appl. Math, 42, pp. 177-201, (1993)",Exclude,""
semi-supervised user geolocation via graph convolutional networks,"Rahimi A., Cohn T., Baldwin T., Semi-supervised user geolocation via graph convolutional networks, Proc. Acl, pp. 2009-2019, (2018)",Exclude,""
the link-prediction problem for social networks,"Liben-Nowell D., Kleinberg J., The link-prediction problem for social networks, J. Am. Soc. Inf. Sci. Technol., 58, 7, pp. 1019-1031, (2007)",Exclude,""
an end-to-end trainable neural network for image-based sequence recognition and its application to scene text recognition,"Shi B., Bai X., Yao C., An end-to-end trainable neural network for image-based sequence recognition and its application to scene text recognition, IEEE transactions on pattern analysis and machine intelligence, 39, 11, pp. 2298-2304, (2016)",Exclude,""
long short-term memory recurrent neural network architectures for large scale acoustic modeling,"Sak H., Senior A., Beaufays F., Long short-term memory recurrent neural network architectures for large scale acoustic modeling, Fifteenth Annual Conference of the International Speech Communication Association, (2014)",Exclude,""
semisupervised graph classification: a hierarchical graph perspective,"Li J., Rong Y., Cheng H., Meng H., Huang W., Huang J., Semisupervised graph classification: A hierarchical graph perspective, The World Wide Web Conference (WWW), (2019)",Exclude,""
graphs and hypergraphs,"Berge C., Graphs and hypergraphs, (1973)",Exclude,""
convolutional set matching for graph similarity,"Bai Y., Ding H., Sun Y., Wang W., Convolutional Set Matching for Graph Similarity, (2018)",Exclude,""
inductive graph representation learning with recurrent graph neural networks.,"Huang B., Carley K.M., Inductive Graph Representation Learning with Recurrent Graph Neural Networks., (2019)",Exclude,""
on the difficulty of training recurrent neural networks,"Pascanu R., Mikolov T., Bengio Y., On the difficulty of training recurrent neural networks, International Conference on Machine Learning, pp. 1310-1318, (2013)",Exclude,""
graph-based,"Yasunaga M., Liang P., Graph-based, self-supervised program repair from diagnostic feedback, ICML 2020 volume 119 of Proceedings of Machine Learning Research, pp. 10799-10808, (2020)",Include,Exclude (Duplicate)
are deep neural networks the best choice for modeling source code?,"Hellendoorn V.J., Devanbu P., Are deep neural networks the best choice for modeling source code?, Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering, pp. 763-773, (2017)",Exclude,""
lightgcn: simplifying and powering graph convolution network for recommendation,"He X., Deng K., Wang X., Li Y., Zhang Y., Wang M., LightGCN: Simplifying and powering graph convolution network for recommendation, Proceedings of the 43Rd International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 639-648, (2020)",Exclude,""
cross-lingual knowledge graph alignment via graph matching neural network,"Xu K., Wang L., Yu M., Feng Y., Song Y., Wang Z., Yu D., Cross-lingual Knowledge Graph Alignment Via Graph Matching Neural Network, (2019)",Exclude,""
position-aware graph neural networks,"You Jiaxuan, Ying Rex, Leskovec Jure, Position-aware graph neural networks, Proceedings of the 36th International Conference on Machine Learning, volume 97 of Proceedings of Machine Learning Research, pp. 7134-7143, (2019)",Exclude,""
multimodal representation for neural code search,"Gu J., Chen Z., Monperrus M., Multimodal representation for neural code search, International Conference on Software Maintenance and Evolution. IEEE, pp. 483-494, (2021)",Exclude,""
fully convolutional networks for semantic segmentation,"Long J., Shelhamer E., Darrell T., Fully convolutional networks for semantic segmentation, Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 3431-3440, (2015)",Exclude,""
bilateral dependency neural networks for cross-language algorithm classification,"Bui N.D.Q., Yu Y., Jiang L., Bilateral dependency neural networks for cross-language algorithm classification, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). IEEE, pp. 422-433, (2019)",Include,Include
kcrec: knowledge-aware representation graph convolutional network for recommendation,"Zhang L., Kang Z., Sun X., Sun H., Zhang B., Pu D., KCRec: Knowledge-aware representation graph convolutional network for recommendation, Knowl.-Based Syst., 230, (2021)",Exclude,""
dropout: a simple way to prevent neural networks fromoverfitting,"Srivastava N., Hinton G., Krizhevsky A., Sutskever I., Salakhutdinov R., Dropout: A Simple Way to Prevent Neural Networks fromOverfitting, J. Mach. Learn. Res, 15, pp. 1929-1958, (2014)",Exclude,""
cnn-fl: an effective approach for localizing faults using convolutional neural networks,"Zhang Z., Lei Y., Mao X., Li P., CNN-FL: An effective approach for localizing faults using convolutional neural networks, IEEE 26Th International Conference on Software Analysis, Evolution and Reengineering (SANER), pp. 445-455, (2019)",Exclude,""
graph-to-sequence learning using gated graph neural networks[j],"Beck D., Haffari G., Cohn T., Graph-to-sequence learning using gated graph neural networks[J], (2018)",Exclude,""
fractalnet: ultra-deep neural networks without residuals.,"Larsson G., Maire M., Shakhnarovich G., Fractalnet: Ultra-deep Neural Networks Without Residuals., (2016)",Exclude,""
deconvolutional networks on graph data,"Li J., Li J., Liu Y., Yu J., Li Y., Cheng H., Deconvolutional networks on graph data, Advances in Neural Information Processing Systems, (2021)",Exclude,""
a unified framework to learn program semantics with graph neural networks,"Liu S., A Unified Framework to Learn Program Semantics with Graph Neural Networks, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE, (2020)",Include,Include
effective prediction of bug-fixing priority via weighted graph convolutional networks[j],"Fang S., Tan Y., Zhang T., Et al., Effective prediction of bug-fixing priority via weighted graph convolutional networks[J], IEEE Trans. Reliab., 70, 2, pp. 563-574, (2021)",Include,Include
on the bottleneck of graph neural networks and its practical implications,"Alon U., Yahav E., On the bottleneck of graph neural networks and its practical implications, 9th International Conference on Learning Representations, ICLR 2021, (2021)",Exclude,""
euclidean versus hyperbolic congestion in idealized versus experimental networks,"Jonckheere E., Lou M., Bonahon F., Baryshnikov Y., Euclidean versus Hyperbolic Congestion in Idealized versus Experimental Networks, Internet Math, 7, pp. 1-27, (2011)",Exclude,""
abcnn: attention-based convolutional neural network for modeling sentence pairs,"Yin W., Schutze H., Xiang B., Zhou B., Abcnn: Attention-based convolutional neural network for modeling sentence pairs, Transactions of the Association for Computational Linguistics, 4, pp. 259-272, (2016)",Exclude,""
graph neural networks for social recommendation,"Fan W., Ma Y., Li Q., He Y., Zhao E., Tang J., Yin D., Graph Neural Networks for Social Recommendation, Proceedings of the 2019 World Wide Web Conference, pp. 417-426",Exclude,""
graph transformer for graph-to-sequence learning,"Graph Transformer for Graph-To-Sequence Learning, (2020)",Exclude,""
mining latent structures for multimedia recommendation,"Zhang J., Zhu Y., Liu Q., Wu S., Wang S., Wang L., Mining Latent Structures for Multimedia Recommendation, ACM MM, pp. 3872-3880, (2021)",Exclude,""
encoding sentences with graph convolutional networks for semantic role labeling,"Marcheggiani D., Titov I., Encoding sentences with graph convolutional networks for semantic role labeling, Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pp. 1506-1515, (2017)",Exclude,""
graph autoencoder-based unsupervised feature selection with broad and local data structure preservation,"Feng S., Duarte M.F., Graph autoencoder-based unsupervised feature selection with broad and local data structure preservation, Neurocomputing, (2018)",Exclude,""
universal graph transformer self-attention networks,"Quoc Nguyen D., Dinh Nguyen T., Phung D., Universal Graph Transformer Self-Attention Networks, (2019)",Exclude,""
jkt: a joint graph convolutional network based deep knowledge tracing,"Song X., Li J., Tang Y., Zhao T., Chen Y., Guan Z., Jkt: A joint graph convolutional network based deep knowledge tracing, Inform. Sci., 580, pp. 510-523, (2021)",Exclude,""
overfitting in neural nets: backpropagation,"Caruana R., Lawrence S., Lee Giles C., Overfitting in Neural Nets: Backpropagation, Conjugate Gradient, and Early Stopping, NIPS, pp. 402-408, (2000)",Exclude,""
convolutional neural network for classification of source codes,"Ohashi H., Watanobe Y., Convolutional neural network for classification of source codes, 2019 IEEE 13th International Symposium on Embedded Multicore/Many-core Systems-on-Chip (MCSoC)., pp. 194-200, (2019)",Include,Exclude
what graph neural networks cannot learn: depth vs width,"Loukas A., What Graph Neural Networks Cannot Learn: Depth Vs Width, (2019)",Exclude,""
neural subgraph matching,"Ying R., Lou Z., You J., Wen C., Canedo A., Leskovec J., Neural Subgraph Matching, (2020)",Exclude,""
graph matching networks for learning the similarity of graph structured objects,"Li Y., Gu C., Dullien T., Vinyals O., Kohli P., Graph Matching Networks for Learning the Similarity of Graph Structured Objects, Proceedings of the 36th International Conference on Machine Learning (Proceedings of Machine Learning Research, 97, pp. 3835-3845, (2019)",Exclude,""
recurrent neural networks for prediction: learning algorithms architectures and stability,"Mandic D.P., Chambers J., Recurrent neural networks for prediction: learning algorithms architectures and stability, (2001)",Exclude,""
cnn for text-based multiple choice question answering,"Chaturvedi A., Arun Pandit O., Garain U., CNN for text-based multiple choice question answering, Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics, 2, pp. 272-277, (2018)",Exclude,""
how powerful are graph neural networks,"Xu K., Jegelka S., Hu W., Leskovec J., How powerful are graph neural networks, 7th International Conference on Learning Representations, ICLR, 2019, pp. 1-17, (2019)",Exclude,""
dire: a neural approach to decompiled identifier naming,"Lacomis J., Yin P., Schwartz E., Allamanis M., Le Goues C., Neubig G., Vasilescu B., Dire: A Neural Approach to Decompiled Identifier Naming, pp. 628-639, (2019)",Include,Include
how could neural networks understand programs?,"Peng D., Zheng S., Li Y., Ke G., He D., Liu T., How Could Neural Networks Understand Programs?, (2021)",Include,Exclude
syntactic clustering of the web,"BRODER A. Z., GLASSMAN S. C., MANASSE M. S., ZWEIG G., Syntactic clustering of the web, Computer Networks and ISDN Systems, 29, 8, pp. 1157-1166, (1997)",Exclude,""
framewise phoneme classification with bidirectional lstm and other neural network architectures,"Graves A., Schmidhuber J., Framewise phoneme classification with bidirectional lstm and other neural network architectures, Neural Networks, 18, 5-6, pp. 602-610, (2005)",Exclude,""
a survey of heterogeneous information network analysis,"Shi C., Li Y., Zhang J., Sun Y., Philip S.Y., A survey of heterogeneous information network analysis, IEEE Trans. Knowl. Data Eng., 29, 1, pp. 17-37, (2016)",Exclude,""
rethinking graph transformers with spectral attention,"Kreuzer D., Beaini D., Hamilton W., Letourneau V., Tossou P., Rethinking Graph Transformers with Spectral Attention, Advances in Neural Information Processing Systems, 34, pp. 21618-21629, (2021)",Exclude,""
large kernel matters-improve semantic segmentation by global convolutional network,"Peng C., Zhang X., Yu G., Luo G., Sun J., Large kernel matters-improve semantic segmentation by global convolutional network, Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 4353-4361, (2017)",Exclude,""
long short-term memory [j],"Hochreiter S., Schmidhuber J., Et al., Long short-Term memory [J], Neural computation, 9, 8, pp. 1735-1780, (1997)",Exclude,""
generalization of back-propagation to recurrent neural networks,"Pineda F.J., Generalization of back-propagation to recurrent neural networks, Phys. Rev. Lett., 59, 19, pp. 2229-2232, (1987)",Exclude,""
graphnorm: a principled approach to accelerating graph neural network training,"Cai T., Luo S., Xu K., GraphNorm: A principled approach to accelerating graph neural network training, 38th International Conference on Machine Learning, pp. 1204-1215, (2021)",Exclude,""
microsoft gated graph neural networks,"Microsoft Gated Graph Neural Networks, (2019)",Exclude,""
mutually reinforced network embedding: an integrated approach to research paper recommendation,"Mei X., Cai X., Xu S., Li W., Pan S., Yang L., Mutually reinforced network embedding: An integrated approach to research paper recommendation, Expert Systems with Applications, (2022)",Exclude,""
hoppity: learning graph transformations to detect and fix bugs in programs,"Dinella E., Dai H., Li Z., Naik M., Song L., Wang K., Hoppity: Learning Graph Transformations to Detect and Fix Bugs in Programs, International Conference on Learning Representations, (2020)",Include,Include
the application of two-level attention models in deep convolutional neural network for fine-grained image classification,"Xiao T., Xu Y., Yang K., Zhang J., Peng Y., Zhang Z., The application of two-level attention models in deep convolutional neural network for fine-grained image classification, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pp. 842-850, (2015)",Exclude,""
towards robust graph contrastive learning,"Jovanovi N., Meng Z., Faber L., Wattenhofer R., Towards robust graph contrastive learning, (2021)",Exclude,""
rough deep neural architecture for short-term wind speed forecasting,"Khodayar M., Kaynak O., Khodayar M.E., Rough deep neural architecture for short-term wind speed forecasting, Ieee Trans. Ind. Informat., 13, 6, pp. 2770-2779, (2017)",Exclude,""
mining heterogeneous information networks: principles and methodologies,"Sun Y., Han J., Mining heterogeneous information networks: Principles and methodologies, Mining Heterogeneous Information Networks: Principles and Methodologies, (2012)",Exclude,""
imagenet classification with deep convolutional neural networks,"Krizhevsky A., Sutskever I., Hinton G.E., Imagenet classification with deep convolutional neural networks, Advances in Neural Information Processing Systems 25: 26th Annual Conference on Neural Information Processing Systems 2012, Proceedings of a meeting held December 3-6, pp. 1106-1114, (2012)",Exclude,""
convolutional graph neural networks,"Gama F., Marques A.G., Leus G., Ribeiro A., Convolutional Graph Neural Networks, 2019 53rd Asilomar Conference on Signals, Systems, and Computers., pp. 452-456, (2019)",Exclude,""
dgcn: diversified recommendation with graph convolutional networks,"Zheng Y., Gao C., Chen L., Jin D., Li Y., DGCN: Diversified Recommendation with Graph Convolutional Networks, WWW, pp. 401-412, (2021)",Exclude,""
gnnguard: defending graph neural networks against adversarial attacks,"Zhang X., Zitnik M., Gnnguard: Defending graph neural networks against adversarial attacks, NeurIPS, (2020)",Exclude,""
bi-clkt: bi-graph contrastive learning based knowledge tracing,"Song X., Li J., Lei Q., Zhao W., Chen Y., Mian A., Bi-CLKT: Bi-graph contrastive learning based knowledge tracing, Knowl.-Based Syst., 241, (2022)",Exclude,""
poincaré embeddings for learning hierarchical representations,"Nickel M., Kiela D., Poincaré Embeddings for Learning Hierarchical Representations, Proceedings of the Advances in Neural Information Processing Systems, (2017)",Exclude,""
gcc: graph contrastive coding for graph neural network pre-training,"Qiu J., Chen Q., Dong Y., Zhang J., Yang H., Ding M., Wang K., Tang J., GCC: Graph contrastive coding for graph neural network pre-training, KDD, (2020)",Include,Exclude
node2vec: scalable feature learning for networks[c],"Grover A., Leskovec J., node2vec: scalable feature learning for networks[C], Proc. of ACM SIGKDD Inte. Conf. on Know. Dis.& Data Min, (2016)",Exclude,""
graph convolutional neural networks with node transition probability-based message passing and dropnode regularization,"Do T.H., Nguyen D.M., Bekoulis G., Munteanu A., Deligiannis N., Graph convolutional neural networks with node transition probability-based message passing and DropNode regularization, Expert Syst. Appl., 174, (2021)",Exclude,""
neural network intelligence,Neural Network Intelligence,Exclude,""
auto-tuning streamed applications on intel xeon phi,"Zhang P., Fang J., Tang T., Yang C., Wang Z., Auto-tuning streamed applications on intel xeon phi, 2018 IEEE International Parallel and Distributed Processing Symposium (IPDPS), pp. 515-525, (2018)",Exclude,""
quaternion graph neural networks,"Quoc Nguyen D., Dinh Nguyen T., Phung D., Quaternion Graph Neural Networks, Asian Conference on Machine Learning, (2021)",Exclude,""
improved semantic representations from tree-structured long short-term memory networks,"Tai K.S., Socher R., Manning C.D., Improved semantic representations from tree-structured long short-term memory networks, Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing (Volume 1: Long Papers), pp. 1556-1566, (2015)",Exclude,""
grarep: learning graph representations with global structural information,"Cao S., Lu W., Xu Q., Grarep: Learning graph representations with global structural information, Proceedings of the 24th ACM International On Conference On Information and Knowledge Management, Ser. CIKM '15, pp. 891-900, (2015)",Exclude,""
multi-view self-supervised heterogeneous graph embedding,"Zhao J., Wen Q., Sun S., Ye Y., Zhang C., Multi-view Self-supervised Heterogeneous Graph Embedding, ECML/PKDD, (2021)",Exclude,""
2018. representation learning on graphs with jumping knowledge networks. corr abs/1806 03536,"Xu K., Li C., Tian Y., Sonobe T., Kawarabayashi K., Jegelka S., 2018. Representation Learning on Graphs with Jumping Knowledge Networks. CoRR abs/1806 03536, (2018)",Exclude,""
predicting dynamic embedding trajectory in temporal interaction networks,"Kumar S., Zhang X., Leskovec J., Predicting Dynamic Embedding Trajectory In Temporal Interaction Networks, Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 1269-1278, (2019)",Exclude,""
graph convolutional networks with eigenpooling,"Ma Y., Wang S., Aggarwal C.C., Et al., Graph convolutional networks with eigenpooling, In: Proceedings of the 25Th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining., pp. 723-731, (2019)",Exclude,""
learning convolutional neural networks for graphs,"Niepert M., Ahmed M., Kutzkov K., Learning convolutional neural networks for graphs, Proceedings of the 33Rd International Conference on Machine Learning, Volume 48 of Proceedings of Machine Learning Research, pp. 2014-2023, (2016)",Exclude,""
representation learning on graphs with jumping knowledge networks,"Xu K., Li C., Tian Y., Sonobe T., Kawarabayashi K., Jegelka S., Representation learning on graphs with jumping knowledge networks, International Conference on Machine Learning (ICML). 5453-5462, (2018)",Exclude,""
every document owns its structure: inductive text classification via graph neural networks,"Zhang Y., Yu X., Cui Z., Wu S., Wen Z., Wang L., Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks, ACL, pp. 334-339, (2020)",Exclude,""
dgcnn: a convolutional neural network over large-scale labeled graphs,"Phan A., Nguyen L., Nguyen Y., Bui L., DGCNN: A convolutional neural network over large-scale labeled graphs, Neural Netw., 108, (2018)",Exclude,""
recurrent neural network regularization,"Zaremba W., Sutskever I., Vinyals O., Recurrent neural network regularization, (2014)",Exclude,""
data augmentation for graph neural networks,"Zhao T., Liu Y., Neves L., Woodford O.J., Jiang M., Shah N., Data augmentation for graph neural networks, AAAI, (2021)",Exclude,""
symmetric graph convolutional autoencoder for unsupervised graph representation learning,"Park J., Lee M., Chang H., Lee K., Choi J., Symmetric graph convolutional autoencoder for unsupervised graph representation learning, 2019 IEEE/CVF International Conference on Computer Vision (ICCV), (2019)",Exclude,""
graph networks as learnable physics engines for inference and control,"Sanchez-Gonzalez A., Heess N., Tobias Springenberg J., Merel J., Riedmiller M.A., Hadsell R., Battaglia P.W., Graph Networks as Learnable Physics Engines for Inference and Control, Proceedings of the 35th International Conference on Machine Learning, ICML 2018, 80, pp. 4467-4476, (2018)",Exclude,""
why do deep neural networks with skip connections and concatenated hidden representations work?,"Oyedotun O.K., Aouada D., Why do Deep Neural Networks with Skip Connections and Concatenated Hidden Representations Work?, International Conference on Neural Information Processing., pp. 380-392, (2020)",Exclude,""
dstyle-gan: generative adversarial network based on writing and photography styles for drug identification in darknet markets,"Zhang Y., Qian Y., Fan Y., Ye Y., Li X., Xiong Q., Shao F., dstyle-gan: Generative adversarial network based on writing and photography styles for drug identification in darknet markets, ACSAC, (2020)",Exclude,""
graph convolutional networks with markov random field reasoning for social spammer detection,"Wu Y., Lian D., Xu Y., Wu L., Chen E., Graph Convolutional Networks with Markov Random Field Reasoning for Social Spammer Detection, The Thirty-Fourth AAAI Conference on Artificial Intelligence, AAAI 2020, pp. 1054-1061, (2020)",Exclude,""
spectral networks and locally connected networks on graphs,"Bruna J., Zaremba W., Szlam A., LeCun Y., Spectral networks and locally connected networks on graphs, 2nd International Conference on Learning Representations, ICLR 2014, Banff, AB, Canada, April 14–16, 2014, Conference Track Proceedings, (2014)",Exclude,""
grid-sphere,"Grid-sphere, (2021)",Include,""
dag-gnn: dag structure learning with graph neural networks,"Yu Y., Chen J., Gao T., Yu M., Dag-gnn: Dag structure learning with graph neural networks, Proceedings of the 36th International Conference on Machine Learning, (2019)",Exclude,""
relational graph attention networks,"Busbridge D., Sherburn D., Cavallo P., Hammerla N. Y., Relational graph attention networks, (2019)",Exclude,""
advances in neural information processing systems 1,"Le Cun Y., Galland C.C., Hinton G.E., Advances in Neural Information Processing Systems 1, (1989)",Exclude,""
jointly learning entity and relation representations for entity alignment,"Wu Y., Liu X., Feng Y., Wang Z., Zhao D., Jointly Learning Entity and Relation Representations for Entity Alignment, (2019)",Exclude,""
fundamentals of recurrent neural network (rnn) and long short-term memory (lstm) network,"Sherstinsky A., Fundamentals of Recurrent Neural Network (RNN) and Long Short-Term Memory (LSTM) Network, (2018)",Exclude,""
jointly learning aspect-focused and inter-aspect relations with graph convolutional networks for aspect sentiment analysis,"Liang B., Yin R., Gui L., Du J., Xu R., Jointly learning aspect-focused and inter-aspect relations with graph convolutional networks for aspect sentiment analysis, pp. 150-161, (2020)",Exclude,""
structural deep network embedding,"Wang D., Cui P., Zhu W., Structural deep network embedding, pp. 1225-1234, (2016)",Exclude,""
dynamic compositional neural networks over tree structure,"Liu P., Qiu X., Huang X., Dynamic compositional neural networks over tree structure, Proceedings of the 26th International Joint Conference on Artificial Intelligence (IJCAI'17)., pp. 4054-4060, (2017)",Exclude,""
understanding and resolving performance degradation in deep graph convolutional networks,"Zhou K., Dong Y., Wang K., Sun Lee W., Hooi B., Xu H., Feng J., Understanding and resolving performance degradation in deep graph convolutional networks, Proceedings of the 30th ACM International Conference on Information & Knowledge Management, pp. 2728-2737, (2021)",Exclude,""
dynamic network embedding survey,"Xue G., Zhong M., Li J., Chen J., Zhai C., Kong R., Dynamic network embedding survey, Neurocomputing, 472, pp. 212-223, (2022)",Exclude,""
method name suggestion with hierarchical attention networks,"Xu S., Zhang S., Wang W., Cao X., Guo C., Xu J., Method name suggestion with hierarchical attention networks, Proceedings of the 2019 Acm Sigplan Workshop on Partial Evaluation and Program Manipulation, Acm, pp. 10-21, (2019)",Include,Include
gated recurrent neural tensor network,"Tjandra A., Sakti S., Manurung R., Gated recurrent neural tensor network, International Joint Conference on Neural Networks, pp. 448-455, (2016)",Exclude,""
semantic segmentation using adversarial networks,"Luc P., Couprie C., Chintala S., Verbeek J., Semantic segmentation using adversarial networks, (2016)",Exclude,""
gated graph recurrent neural networks,"Ruiz L., Gama F., Ribeiro A., Gated graph recurrent neural networks, IEEE Trans Signal Process, 68, pp. 6303-6318, (2020)",Exclude,""
learning graph representations with embedding propagation,"Garcia-Duran A., Niepert M., Learning graph representations with embedding propagation, Adv Neural Inform Proces Sys, 30, (2017)",Exclude,""
how transferable are features in deep neural networks?,"Yosinski J., Clune J., Bengio Y., Lipson H., How transferable are features in deep neural networks?, Advances in Neural Information Processing Systems, pp. 3320-3328, (2014)",Exclude,""
representation learning on networks,"Hamilton W.L., Ying R., Leskovec J., Sosic R., Representation Learning on Networks, (2018)",Exclude,""
g-mixup: graph data augmentation for graph classification,"Han X., Jiang Z., Liu N., Hu X., G-mixup: Graph data augmentation for graph classification, Chaudhuri, K., Jegelka, S., Song, L., Szepesvari, C., Niu, G., Sabato, S. (Eds.) Proceedings of the 39Th International Conference on Machine Learning, Proceedings of Machine Learning Research, Vol. 162, Pp. 8230–8248, PMLR (17–23, (2022)",Exclude,""
rethinking knowledge graph propagation for zero-shot learning,"Kampffmeyer M., Chen Y., Liang X., Wang H., Zhang Y., Xing E.P., Rethinking knowledge graph propagation for zero-shot learning, pp. 11487-11496, (2019)",Exclude,""
graph structured network for image-text matching,"Liu C., Mao Z., Zhang T., Xie H., Wang B., Zhang Y., Graph structured network for image-text matching, Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pp. 10921-10930, (2020)",Exclude,""
exploring network structure,"Hagberg A., Swart P., S Chult D., Exploring network structure, dynamics, and function using networkx. Technical report, Los Alamos National Lab.(Lanl), (2008)",Exclude,""
flexible and robust multi-network clustering,"Ni J., Tong H., Fan W., Zhang X., Flexible and robust multi-network clustering, pp. 835-844, (2015)",Exclude,""
multi-modal bayesian embeddings for learning social knowledge graphs,"Yang Z., Tang J., Cohen W., Multi-modal Bayesian embeddings for learning social knowledge graphs, pp. 2287-2293, (2016)",Exclude,""
heterogeneous graph structure learning for graph neural networks,"Zhao J., Wang X., Shi C., Hu B., Song G., Ye Y., Heterogeneous graph structure learning for graph neural networks, AAAI, 35, pp. 4697-4705, (2021)",Exclude,""
neutaint: efficient dynamic taint analysis with neural networks,"She D., Chen Y., Shah A., Ray B., Jana S., Neutaint: Efficient dynamic taint analysis with neural networks, In Proc. IEEE Symposium on Security and Privacy, (2020)",Exclude,""
provably powerful graph networks,"Maron H., Ben-Hamu H., Serviansky H., Lipman Y., Provably Powerful Graph Networks, Advances in Neural Information Processing Systems, 32, (2019)",Exclude,""
graph neural networks with learnable structural and positional representations,"Dwivedi V.P., Luu A.T., Laurent T., Et al., Graph neural networks with learnable structural and positional representations, International Conference on Learning Representations, (2022)",Exclude,""
large-scale learnable graph convolutional networks,"Gao H., Wang Z., Ji S., Large-scale learnable graph convolutional networks, Proc. 24th Acm Sigkdd Int. Conf. Knowl. Discovery Data Mining, pp. 1416-1424, (2018)",Exclude,""
graph transformer networks: learning meta-path graphs to improve gnns [j],"Yun S., Jeong M., Yoo S., Et al., Graph Transformer Networks: Learning Meta-path Graphs to Improve GNNs [J], (2021)",Exclude,""
a sword with two edges: propagation studies on both positive and negative information in online social networks,"Wen S., Sayad Haghighi M., Chen C., Yang X., Zhou W., Jia W., A sword with two edges: Propagation studies on both positive and negative information in online social networks, IEEE Transactions on Computers, 64, 3, pp. 640-653, (2014)",Exclude,""
deep modular co-attention networks for visual question answering,"Yu Z., Yu J., Cui Y., Tao D., Tian Q., Deep modular co-attention networks for visual question answering, CVPR, pp. 6281-6290, (2019)",Exclude,""
distilling meta knowledge on heterogeneous graph for illicit drug trafficker detection on social media,"Qian Y., Zhang Y., Ye Y., Zhang C., Distilling Meta Knowledge on Heterogeneous Graph for Illicit Drug Trafficker Detection on Social Media, NeurIPS, (2021)",Exclude,""
adversarial contrastive learning for evidence-aware fake news detection with graph neural networks,"Wu J., Xu W., Liu Q., Wu S., Wang L., Adversarial Contrastive Learning for Evidence-aware Fake News Detection with Graph Neural Networks, (2022)",Exclude,""
adversarially regularized graph autoencoder for graph embedding,"Pan S., Hu R., Long G., Jiang J., Yao L., Zhang C., Adversarially regularized graph autoencoder for graph embedding, Proceedings of the 27Th International Joint Conference on Artificial Intelligence, IJCAI 2018. AAAI Press, (2018)",Exclude,""
dynamic embedding projection-gated convolutional neural networks for text classification,"Tan Z., Chen J., Kang Q., Zhou M., Abusorrah A., Sedraoui K., Dynamic embedding projection-gated convolutional neural networks for text classification, IEEE Trans. Neural Netw. Learn. Syst., (2021)",Exclude,""
comparison of regularization methods for imagenet classification with deep convolutional neural networks,"Smirnov E.A., Timoshenko D.M., Andrianov S.N., Comparison of regularization methods for imagenet classification with deep convolutional neural networks, Aasri Procedia, 6, pp. 89-94, (2014)",Exclude,""
adversarial attacks on neural networks for graph data,"Zugner D., Akbarnejad A., Gunnemann S., Adversarial attacks on neural networks for graph data, KDD, (2018)",Exclude,""
convolutional neural networks on graphs with fast localized spectral filtering,"Defferrard M., Bresson X., Vandergheynst P., Convolutional neural networks on graphs with fast localized spectral filtering, Neural Information Processing Systems (NIPS), pp. 3844-3852, (2016)",Exclude,""
graph clustering with graph neural networks,"Tsitsulin A., Palowitch J., Perozzi B., Graph clustering with graph neural networks, Arxiv Preprint Arxiv, 2006, (2020)",Exclude,""
training robust graph neural networks with topology adaptive edge dropping,"Gao Z., Bhattacharya S., Zhang L., Blum R.S., Ribeiro A., Sadler B.M., Training Robust Graph Neural Networks with Topology Adaptive Edge Dropping, (2021)",Exclude,""
a survey on the expressive power of graph neural networks,"Sato R., A Survey on the Expressive Power of Graph Neural Networks, (2020)",Exclude,""
heterogeneous graph attention network,"Wang X., Ji H., Shi C., Wang B., Ye Y., Cui P., Yu P.S., Heterogeneous graph attention network, The World WideWeb Conference, pp. 2022-2032, (2019)",Exclude,""
inside the atoms: ranking on a network of networks,"Ni J., Tong H., Fan W., Zhang X., Inside the atoms: Ranking on a network of networks, pp. 1356-1365, (2014)",Exclude,""
end-to-end structure-aware convolutional networks for knowledge base completion,"Shang C., Tang Y., Huang J., Bi J., He X., Zhou B., End-to-end structure-aware convolutional networks for knowledge base completion, Proceedings of the AAAI Conference on Artificial Intelligence, 33, pp. 3060-3067",Exclude,""
deep biaffine attention for neural dependency parsing,"Dozat T., Manning C.D., Deep biaffine attention for neural dependency parsing, pp. 1-8, (2017)",Exclude,""
very deep convolutional networks for large-scale image recognition,"Simonyan K., Zisserman A., Very deep convolutional networks for large-scale image recognition, (2014)",Exclude,""
learning to execute programs with instruction pointer attention graph neural networks,"Bieber D., Sutton C., Larochelle H., Tarlow D., Learning to execute programs with instruction pointer attention graph neural networks, Advances in Neural Information Processing Systems, 33, pp. 8626-8637, (2020)",Exclude,""
document modeling with gated recurrent neural network for sentiment classification,"Tang D., Qin B., Liu T., Document modeling with gated recurrent neural network for sentiment classification, Proceedings Afthe 2015 Conference on Empirical Methods in Natural Language Processing (CMNLP'15), pp. 1422-1432, (2015)",Exclude,""
fastgcn: fast learning with graph convolutional networks via importance sampling,"Chen J., Ma T., Xiao C., Fastgcn: fast learning with graph convolutional networks via importance sampling, (2018)",Exclude,""
semantic documents relatedness using concept graph representation,"Ni Y., Xu Q.K., Cao F., Mass Y., Sheinwald D., Zhu H.J., Cao S.S., Semantic documents relatedness using concept graph representation, Proceedings of the Ninth ACM International Conference On Web Search and Data Mining, pp. 635-644, (2016)",Exclude,""
weisfeiler and leman go neural: higher-order graph neural networks,"Morris C., Ritzert M., Fey M., Hamilton W.L., Lenssen J.E., Rattan G., Grohe M., Weisfeiler and Leman Go Neural: Higher-Order Graph Neural Networks, Proceedings of the AAAI Conference on Artificial Intelligence, 33, 1, pp. 4602-4609, (2019)",Exclude,""
segnet: a deep convolutional encoder-decoder architecture for image segmentation,"Badrinarayanan V., Kendall A., Cipolla R., Segnet: A deep convolutional encoder-decoder architecture for image segmentation, IEEE transactions on pattern analysis and machine intelligence, 39, 12, pp. 2481-2495, (2017)",Exclude,""
metric embedding,"Verbeek K., Suri S., Metric Embedding, Hyperbolic Space, and Social Networks, (2016)",Include,""
a reduction of a graph to a canonical form and an algebra arising during this reduction,"Weisfeiler B., Lehman A., A reduction of a graph to a canonical form and an algebra arising during this reduction, Nauchno Technicheskaya Informatsia, 2, 9, pp. 12-19, (1968)",Exclude,""
learning graphical state transitions,"Johnson D.D., Learning graphical state transitions, ICLR, (2017)",Exclude,""
variational graph auto-encoders,"Kipf T.N., Welling M., Variational graph auto-encoders, NIPS Workshop on Bayesian Deep Learning, (2016)",Exclude,""
bidirectional recurrent neural networks,"Schuster M., Paliwal K.K., Bidirectional recurrent neural networks, IEEE transactions on Signal Processing, 45, 11, pp. 2673-2681, (1997)",Exclude,""
feastnet: feature-steered graph convolutions for 3d shape analysis,"Verma N., Boyer E., Verbeek J., Feastnet: Feature-steered graph convolutions for 3d shape analysis, Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 2598-2606, (2018)",Exclude,""
multi-graph-view learning for complicated object classification,"Jia W., Pan S., Zhu X., Cai Z., Zhang C., Multi-graph-view learning for complicated object classification, Int Conf Artif Intell IJCAI, pp. 3953-3959, (2015)",Exclude,""
asymmetric transitivity preserving graph embedding,"Ou M., Cui P., Pei J., Zhang Z., Zhu W., Asymmetric transitivity preserving graph embedding, pp. 1105-1114, (2016)",Exclude,""
principal neighbourhood aggregation for graph nets[j],"Corso G., Cavalleri L., Beaini D., Et al., Principal Neighbourhood Aggregation for Graph Nets[J], (2020)",Exclude,""
neural network design,"Hagan M.T., Demuth H.B., Beale M., Neural Network Design, (1997)",Exclude,""
reinforcement subgraph reasoning for fake news detection,"Yang R., Wang X., Jin Y., Li C., Lian J., Xie X., Reinforcement Subgraph Reasoning for Fake News Detection, KDD, pp. 2253-2262, (2022)",Exclude,""
graph u-nets,"Gao H., Ji S., Graph u-nets, international conference on machine learning. PMLR, pp. 2083-2092, (2019)",Include,""
gman: a graph multi-attention network for traffic prediction,"Zheng C., Fan X., Wang C., Qi J., Gman: A graph multi-attention network for traffic prediction, Proceedings of the AAAI Conference on Artificial Intelligence, 34, pp. 1234-1241",Exclude,""
a convolutional neural network for modelling sentences,"Nal K., Grefenstette E., Blunsom P., A convolutional neural network for modelling sentences, Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pp. 655-665, (2014)",Exclude,""
hecht-nielsen theory of the backpropagation neural network,"Hecht-Nielsen Theory of the backpropagation neural network, International 1989 Joint Conference on Neural Networks, 1, pp. 593-605, (1989)",Exclude,""
gated residual recurrent graph neural networks for traffic prediction,"Chen C., Li K., Teo S.G., Zou X., Wang K., Wang J., Zeng Z., Gated residual recurrent graph neural networks for traffic prediction, Proceedings of the AAAI Conference on Artificial Intelligence, 33, pp. 485-492, (2019)",Exclude,""
source free unsupervised graph domain adaptation,"Mao H., Du L., Zheng Y., Fu Q., Li Z., Chen X., Shi H., Zhang D., Source free unsupervised graph domain adaptation, (2021)",Exclude,""
sail: self-augmented graph contrastive learning,"Yu L., Pei S., Ding L., Zhou J., Li L., Zhang C., Zhang X., SAIL: Self-Augmented Graph Contrastive Learning, AAAI, (2022)",Exclude,""
pointer networks,"Vinyals O., Fortunato M., Jaitly N., Pointer networks, Advances in Neural Information Processing Systems 28: Annual Conference on Neural Information Processing Systems 2015, pp. 2692-2700, (2015)",Include,""
inductive representation learning on large graphs,"Hamilton W.L., Ying R., Leskovec J., Inductive representation learning on large graphs, Proceedings of the 31st international conference on neural information processing systems, pp. 1025-1035, (2017)",Exclude,""
mining finegrained semantics via graph neural networks for evidence-based fake news detection,"Xu W., Wu J., Liu Q., Wu S., Wang L., Mining Finegrained Semantics via Graph Neural Networks for Evidence-based Fake News Detection, (2022)",Exclude,""
source code classification using neural networks,"Gilda S., Source code classification using neural networks, 2017 14th International Joint Conference on Computer Science and Software Engineering (JCSSE), pp. 1-6, (2017)",Include,Exclude
going deeper with convolutions,"Szegedy C., Liu W., Jia Y., Sermanet P., Reed S., Anguelov D., Erhan D., Vanhoucke V., Rabinovich A., Going deeper with convolutions, 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)., pp. 1-9, (2015)",Exclude,""
self-supervised heterogeneous graph neural network with co-contrastive learning,"Wang X., Liu N., Han H., Shi C., Self-Supervised Heterogeneous Graph Neural Network with Co-Contrastive Learning. Arxiv Preprint Arxiv, 2105, (2021)",Exclude,""
keygraph: automatic indexing by co-occurrence graph based on building construction metaphor[c],"Ohsawa Y., Benson N.E., Yachida M., KeyGraph: Automatic indexing by co-occurrence graph based on building construction metaphor[C], Proceedings IEEE International Forum on Research and Technology Advances in Digital Libraries-ADL'98. IEEE, pp. 12-18, (1998)",Exclude,""
simplifying graph convolutional networks,"Wu F., Zhang T., De Souza A.H., Fifty C., Yu T., Weinberger K.Q., Simplifying graph convolutional networks, 36th Int. Conf. Mach. Learn. Icml 2019, pp. 11884-11894, (2019)",Exclude,""
generalized cross entropy loss for training deep neural networks with noisy labels,"Zhang Z., Sabuncu M., Generalized cross entropy loss for training deep neural networks with noisy labels, Proceedings of the Advances in Neural Information Processing Systems, pp. 8778-8788, (2018)",Exclude,""
diffusion-convolutional neural networks,"Atwood J., Towsley D., Diffusion-convolutional neural networks, Advances in neural information processing systems, 29, (2016)",Exclude,""
towards fine-grained reasoning for fake news detection,"Jin Y., Wang X., Yang R., Sun Y., Wang W., Liao H., Xie X., Towards fine-grained reasoning for fake news detection, AAAI, 36, pp. 5746-5754, (2022)",Exclude,""
gated graph neural attention networks for abstractive summarization,"Liang Z., Du J., Shao Y., Ji H., Gated graph neural attention networks for abstractive summarization, Neurocomputing, 431, pp. 128-136, (2021)",Exclude,""
2015b) gated graph sequence neural networks,"Li Y., Tarlow D., Brockschmidt M., Zemel R., 2015b) Gated graph sequence neural networks, Arxiv, 1511",Exclude,""
hyperbolic geometry of complex networks,"Krioukov D., Papadopoulos F., Kitsak M., Vahdat A., Boguna M., Hyperbolic Geometry of Complex Networks, Phys. Rev. E Stat. Nonlinear Soft Matter Phys, 82, (2010)",Exclude,""
generalization and representational limits of graph neural networks,"Garg V.K., Jegelka S., Jaakkola T.S., Generalization and representational limits of graph neural networks, ICML, Proceedings of Machine Learning Research, PMLR, 119, pp. 3419-3430, (2020)",Exclude,""
graph neural networks for mapping variables between programs-extended version,"Orvalho P., Piepenbrock J., Janota M., Manquinho V., Graph Neural Networks For Mapping Variables between Programs-Extended Version, (2023)",Include,Exclude (Duplicate)
measuring and relieving the over-smoothing problem for graph neural networks from the topological view,"Chen D., Lin Y., Li W., Li P., Zhou J., Sun X., Measuring and relieving the over-smoothing problem for graph neural networks from the topological view, Proceedings of the 34th AAAI Conference on Artificial Intelligence, the 32nd Innovative Applications of Artificial Intelligence Conference, the 10th AAAI Symposium on Educational Advances in Artificial Intelligence, pp. 3438-3445, (2020)",Exclude,""
matching node embeddings for graph similarity,"Nikolentzos G., Meladianos P., Vazirgiannis M., Matching node embeddings for graph similarity, (2017)",Exclude,""
revisiting small batch training for deep neural networks,"Masters D., Luschi C., Revisiting small batch training for deep neural networks, (2018)",Exclude,""
graphcrop: subgraph cropping for graph classification,"Wang Y., Wang W., Liang Y., Cai Y., Hooi B., Graphcrop: Subgraph cropping for graph classification, Corr Abs/2009, (2020)",Exclude,""
convolutional networks for images,"Le Cun Y., Bengio Y., Convolutional Networks for Images, Speech, and Time Series, pp. 255-258, (1998)",Exclude,""
biased edge dropout for enhancing fairness in graph representation learning,"Spinelli I., Scardapane S., Hussain A., Uncini A., Biased Edge Dropout for Enhancing Fairness in Graph Representation Learning, (2021)",Exclude,""
long short-termmemory,"Hochreiter S., Schmidhuber J., Long short-termmemory, Neural Computation, 9, 8, pp. 1735-1780, (1997)",Exclude,""
contrastive multi-view representation learning on graphs,"Hassani K., Khasahmadi A.H., Contrastive multi-view representation learning on graphs, International Conference on Machine Learning, pp. 4116-4126, (2020)",Exclude,""
metapath2vec: scalable representation learning for heterogeneous networks,"Dong Y., Chawla N.V., Swami A., metapath2vec: Scalable representation learning for heterogeneous networks, the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 135-144, (2017)",Exclude,""
augmentation-free graph contrastive learning,"Wang H., Zhang J., Zhu Q., Huang W., Augmentation-free graph contrastive learning, (2022)",Exclude,""
relation-aware entity alignment for heterogeneous knowledge graphs,"Wu Y., Liu X., Feng Y., Wang Z., Yan R., Zhao D., Relation-aware entity alignment for heterogeneous knowledge graphs, Proceedings of the 28th International Joint Conference on Artificial Intelligence, pp. 5278-5284, (2019)",Exclude,""
siamese neural networks for one-shot image recognition,"Koch G., Zemel R., Salakhutdinov R., Siamese neural networks for one-shot image recognition, ICML Deep Learning Workshop, 2, (2015)",Exclude,""
dynamic network embedding: an extended approach for skip-gram based network embedding,"Du L., Wang Y., Song G., Lu Z., Wang J., Dynamic Network Embedding: An Extended Approach for Skip-gram based Network Embedding, IJCAI, pp. 2086-2092, (2018)",Exclude,""
shne: representation learning for semantic-associated heterogeneous networks,"Zhang C., Swami A., Chawla N.V., Shne: Representation learning for semantic-associated heterogeneous networks, WSDM, (2019)",Exclude,""
graph embedding techniques,"Goyal P., Ferrara E., Graph embedding techniques, applications, and performance: a survey, Know Based Sys, 151, pp. 78-94, (2018)",Include,""
hyte: hyperplane-based temporally aware knowledge graph embedding,"Dasgupta S.S., Ray S.N., Talukdar P., Hyte: Hyperplane-based temporally aware knowledge graph embedding, Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pp. 2001-2011, (2018)",Exclude,""
ra-gcn: relational aggregation graph convolutional network for knowledge graph completion,"Tian A., Zhang C., Rang M., Yang X., Zhan Z., RA-GCN: Relational aggregation graph convolutional network for knowledge graph completion, International Conference on Machine Learning and Computing. ACM, pp. 580-586, (2020)",Exclude,""
using recurrent neural networks for decompilation,"Katz D.S., Ruchti J., Schulte E., Using recurrent neural networks for decompilation, In: 2018 IEEE 25Th International Conference on Software Analysis, Evolution and Reengineering (SANER), pp. 346-356, (2018)",Exclude,""
graph convolutional neural networks for web-scale recommender systems,"Ying R., He R., Chen K., Eksombatchai P., Hamilton W.L., Leskovec J., Graph convolutional neural networks for web-scale recommender systems, KDD, pp. 974-983, (2018)",Exclude,""
tbcnn: a tree-based convolutional neural network for programming language processing,"Mou L., Li G., Jin Z., Zhang L., Wang T., TBCNN: A tree-based convolutional neural network for programming language processing, (2014)",Include,Exclude (Pre-print)
graph autoencoder with constant dimensional latent space,"Malkowski A., Grzechocinski J., Wawrzynski P., Graph autoencoder with constant dimensional latent space, Arxiv Preprint Arxiv, 2201, (2022)",Exclude,""
function-level obfuscation detection method based on graph convolutional networks,"Jiang S., Hong Y., Fu C., Qian Y., Han L., Function-level obfuscation detection method based on graph convolutional networks, J. Inf. Secur. Appl., 61, (2021)",Include,Exclude
hyperbolic groups,"Gromov M., Hyperbolic groups, Essays in Group Theory, (1987)",Exclude,""
an empirical exploration of recurrent network architectures,"Jozefowicz R., Zaremba W., Sutskever I., An empirical exploration of recurrent network architectures, . In: Proceedings of the 32Nd International Conference on International Conference on Machine learning—volume 37 (ICML’15)., pp. 2342-2350, (2015)",Exclude,""
inferring javascript types using graph neural networks,"Schrouff J.V., Wohlfahrt K., Marnette B., Atkinson L., Inferring Javascript types using Graph Neural Networks, (2019)",Include,Exclude (Pre-print)
hierarchical graph representation learning with differentiable pooling,"Ying Zhitao, You Jiaxuan, Morris Christopher, Ren Xiang, Hamilton Will, Leskovec Jure, Hierarchical graph representation learning with differentiable pooling, Advances in neural information processing systems, pp. 4800-4810, (2018)",Exclude,""
certifying robustness of convolutional neural networks with tight linear approximation,"Xiao Y., Bai T., Mingzheng G., Fang C., Chen Z., Certifying robustness of convolutional neural networks with tight linear approximation, CoRR, (2022)",Exclude,""
hypergraph neural networks,"Feng Y., You H., Zhang Z., Ji R., Gao Y., Hypergraph neural networks, AAAI Conference on Artificial Intelligence, (2018)",Exclude,""
graph neural networks in program analysis,"Allamanis M., Graph Neural Networks in Program Analysis, pp. 483-497, (2022)",Include,Exclude
a neural influence diffusion model for social recommendation,"Wu L., Sun P., Fu Y., Hong R., Wang X., Wang M., A neural influence diffusion model for social recommendation, SIGIR, pp. 235-244, (2019)",Exclude,""
auto-encoding scene graphs for image captioning,"Yang X., Tang K., Zhang H., Cai J., Auto-encoding scene graphs for image captioning, Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pp. 10685-10694, (2019)",Exclude,""
densely connected convolutional networks,"Huang G., Liu Z., Van Der Maaten L., Weinberger K.Q., Densely connected convolutional networks, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition., pp. 4700-4708, (2017)",Exclude,""
generalization capability of artificial neural network incorporated with pruning method,"Urolagin S., Prema K.V., Subba Reddy N.V., Generalization capability of artificial neural network incorporated with pruning method, International Conference on Advanced Computing, Networking and Security., pp. 171-178, (2011)",Exclude,""
progressive neural architecture search,"Liu C., Et al., Progressive neural architecture search, Proc. Eur. Conf. Comput. Vis. (ECCV), pp. 19-34, (2018)",Exclude,""
graph neural networks: a review of methods and applications,"Zhou J., Et al., Graph neural networks: a review of methods and applications, AI Open, 1, pp. 57-81, (2020)",Exclude,""
text level graph neural network for text classification,"Huang L., Ma D., Li S., Zhang X., Wang H., Text Level Graph Neural Network for Text Classification, EMNLP-IJCNLP, (2019)",Exclude,""
deep neural networks for learning graph representations,"Cao S., Lu W., Xu Q., Deep Neural Networks for Learning Graph Representations, (2016)",Exclude,""
counterfactual graph learning for link prediction,"Zhao T., Liu G., Wang D., Yu W., Jiang M., Counterfactual graph learning for link prediction, Corr Abs/2106, (2021)",Exclude,""
universal readout for graph convolutional neural networks,"Navarin N., Van T.D., Sperduti A., Universal readout for graph convolutional neural networks, 2019 International Joint Conference on Neural Networks (IJCNN), pp. 1-7, (2019)",Exclude,""
identity-aware graph neural networks,"You J., Gomes-Selman J., Ying R., Leskovec J., Identity-Aware Graph Neural Networks, (2021)",Exclude,""
graph2seq: graph to sequence learning with attention-based neural networks,"Xu K., Wu L., Wang Z., Feng Y., Witbrock M., Sheinin V., Graph2Seq: Graph to Sequence Learning with Attention-based Neural Networks, (2018)",Exclude,""
shape robust text detection with progressive scale expansion network,"Wang W., Xie E., Li X., Hou W., Lu T., Yu G., Shao S., Shape robust text detection with progressive scale expansion network, Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 9336-9345, (2019)",Exclude,""
a novel privacy-preserving speech recognition framework using bidirectional lstm,"Wang Q., Feng C., Xu Y., Zhong H., Sheng V.S., A novel privacy-preserving speech recognition framework using bidirectional LSTM, J. Cloud Comput., 9, 1, pp. 1-13, (2020)",Exclude,""
graphs in molecular biology,"Huber W., Carey V.J., Long L., Falcon S., Gentleman R., Graphs in molecular biology, BMC Bioinform, 8, 6, pp. 1-14, (2007)",Exclude,""
choice overload reduces neural signatures of choice set value in dorsal striatum and anterior cingulate cortex,"Reutskaja E., Lindner A., Nagel R., Andersen R.A., Camerer C.F., Choice overload reduces neural signatures of choice set value in dorsal striatum and anterior cingulate cortex, Nat. Hum. Behav., 2, 12, pp. 925-935, (2018)",Exclude,""
how many of all bugs do we find? a study of static bug detectors,"Habib A., Pradel M., How many of all bugs do we find? a study of static bug detectors, ASE, pp. 317-328, (2018)",Exclude,""
where should we fix this bug? a two-phase recommendation model,"Kim D., Tao Y., Kim S., Zeller A., Where should we fix this bug? A two-phase recommendation model, IEEE Transactions on Software Engineering, 39, 11, (2013)",Exclude,""
an empirical study on real bug fixes.,"Zhong H., Su Z., An Empirical Study on Real Bug Fixes., (2015)",Exclude,""
common bugfix patterns: a large-scale observational study,"Cunha Campos E., De Almeida Maia M., Common bugfix patterns: A large-scale observational study, 2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). IEEE, pp. 404-413, (2017)",Exclude,""
a large-scale empirical study of security patches,"Li F., Paxson V., A large-scale empirical study of security patches, Proceedings of the 2017 Acm Sigsac Conference on Computer and Communications Security, Ccs '17, pp. 2201-2215, (2017)",Exclude,""
severity assessment of a reported bug by considering its uncertainty and irregular state[j],"Kumari M., Sharma M., Singh V.B., Severity assessment of a reported bug by considering its uncertainty and irregular state[J], International J. Open Source Softw. Process., 9, 4, pp. 20-46, (2018)",Exclude,""
how often do single-statement bugs occur the manysstubs4j dataset,"Karampatsis R., Sutton C.A., How often do single-statement bugs occur the ManySStuBs4J dataset, Proceedings of the 17th Mining Software Repositories IEEE, (2020)",Exclude,""
an empirical investigation into learning bug-fixing patches in sequence association rales,"Thummalapenta S., Xie T., An empirical investigation into learning bug-fixing patches in sequence association rales, ICSE, pp. 496-506, (2009)",Exclude,""
an exploratory study of bug prediction at the method level,"Mo R., Wei S., Feng Q., Li Z., An exploratory study of bug prediction at the method level, Inf. Softw. Technol., 144, (2022)",Exclude,""
an empirical study on learning bug-fixing patches in the wild via neural machine translation,"Tufano M., Watson C., Bavota G., Penta M.D., White M., Poshyvanyk D., An empirical study on learning bug-fixing patches in the wild via neural machine translation, Trans. Softw. Eng. Methodol., (2019)",Include,Exclude
a large-scale empirical study of just-in-time quality assurance,"Kamei Y., Shihab E., Adams B., Hassan A., Mockus A., Sinha A., Ubayashi N., A large-scale empirical study of just-in-time quality assurance, IEEE Trans. Softw. Eng., 39, 6, pp. 757-773, (2013)",Exclude,""
neural bug finding: a study of opportunities and challenges,"Habib A., Pradel M., Neural bug finding: A study of opportunities and challenges, (2019)",Include,Exclude (Pre-print)
how security bugs are fixed and what can be improved: an empirical study with mozilla,"Sun X., Peng X., Zhang K., Liu Y., Cai Y., How security bugs are fixed and what can be improved: an empirical study with mozilla, Sci. China Inf. Sci., 62, 1, pp. 191021-191023, (2019)",Exclude,""
cloudraid: hunting concurrency bugs in the cloud via log-mining,"Lu J., Li F., Li L., Feng X., Cloudraid: Hunting concurrency bugs in the cloud via log-mining, Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE). 3-14, (2018)",Exclude,""
binsim: trace-based semantic binary diffing via system call sliced segment equivalence checking,"Ming J., Xu D., Jiang Y., Wu D., BinSim: Trace-based semantic binary diffing via system call sliced segment equivalence checking, 26th Usenix Security Symposium (USENIX Security 17), pp. 253-270, (2017)",Exclude,""
antminer: mining more bugs by reducing noise interference,"Liang B., Bian P., Zhang Y., Shi W., You W., Cai Y., Antminer: Mining more bugs by reducing noise interference, 2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE), pp. 333-344, (2016)",Exclude,""
samplefix: learning to correct programs by sampling diverse fixes,"Hajipour H., Bhattacharya A., Fritz M., Samplefix: Learning to correct programs by sampling diverse fixes, (2019)",Exclude,""
finding bugs is easy,"Hovemeyer D., Pugh W., Finding bugs is easy, OOPSLA, pp. 92-106, (2004)",Exclude,""
cnn-based automatic prioritization of bug reports[j],"Umer Q., Liu H., Illahi I., CNN-based automatic prioritization of bug reports[J], IEEE Trans. Reliab., 69, 4, pp. 1341-1354, (2019)",Exclude,""
understanding and detecting real-world performance bugs,"Jin G., Song L., Shi X., Scherpelz J., Lu S., Understanding and detecting real-world performance bugs, SIGPLAN Not., 47, 6, pp. 77-88, (2012)",Exclude,""
"mining behavior graphs for ""backtrace"" of noncrashing bugs","Liu C., Yan X., Yu H., Han J., Yu P. S., Mining behavior graphs for ""backtrace"" of noncrashing bugs, Proceedings of the 2005 SIAM international conference on data mining. SIAM, pp. 286-297, (2005)",Exclude,""
towards standardizing and improving classification of bug-fix commits,"Zafar S., Zubair Malik M., Singh Walia G., Towards standardizing and improving classification of bug-fix commits, 2019 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). IEEE, pp. 1-6, (2019)",Exclude,""
identification of security related bug reports via text mining using supervised and unsupervised classification,"Goseva-Popstojanova K., Tyo J., Identification of security related bug reports via text mining using supervised and unsupervised classification, 2018 Ieee International Conference on Software Quality, Reliability and Security (QRS), pp. 344-355, (2018)",Exclude,""
findbugs,"Findbugs, (2019)",Include,""
static detection of leaks in polymorphic containers,"Heine D.L., Lam M.S., Static detection of leaks in polymorphic containers, Proceedings of the 28th International Conference on Software Engineering (ICSE’06), pp. 252-261, (2006)",Exclude,""
automated classification of overfitting patches with statically extracted code features,"Ye H., Gu J., Martinez M., Durieux T., Monperrus M., Automated classification of overfitting patches with statically extracted code features, IEEE Transactions on Software Engineering, (2021)",Exclude,""
uqbtng: a tool capable of automatically nding integer overows in win32 binaries,"Wojtczuk R., UQBTng: a tool capable of automatically nding integer overows in Win32 binaries, Proceedings of Chaos Communication Congress, (2005)",Exclude,""
pr-miner: automatically extracting implicit programming rules and detecting violations in large software code,"Li Z., Zhou Y., Pr-miner: automatically extracting implicit programming rules and detecting violations in large software code, ACM SIGSOFT Softw. Eng. Notes, 30, 5, pp. 306-315, (2005)",Exclude,""
discovre: efficient cross-architecture identification of bugs in binary code,"Eschweiler S., Yakdan K., Gerhards-Padilla E., discovre: Efficient cross-architecture identification of bugs in binary code, Network and Distributed System Security Symposium (NDSS), (2016)",Exclude,""
detecting bugs by discovering expectations and their violations,"Bian P., Liang B., Zhang Y., Yang C., Shi W., Cai Y., Detecting bugs by discovering expectations and their violations, IEEE Transactions on Software Engineering, 45, 10, pp. 984-1001, (2018)",Exclude,""
spotting working code examples,"Keivanloo I., Rilling J., Zou Y., Spotting working code examples, Proceedings of the 36th International Conference on Software Engineering, pp. 664-675, (2014)",Exclude,""
hermes: using commit-issue linking to detect vulnerability-fixing commits,"Nguyen-Truong G., Kang H.J., Lo D., Sharma A., Santosa A.E., Sharma A., Ang M.Y., Hermes: Using commit-issue linking to detect vulnerability-fixing commits, SANER, pp. 51-62, (2022)",Exclude,""
unsupervised deep bug report summarization,"Li X., Jiang H., Liu D., Ren Z., Li G., Unsupervised deep bug report summarization, pp. 144-155, (2018)",Include,Exclude
bugfix: a learning-based tool to assist developers in fixing bugs,"Jeffrey D., Feng M., Gupta R., BugFix: A learning-based tool to assist developers in fixing bugs, 2009 IEEE 17th International Conference on Program Comprehension, pp. 70-79, (2009)",Exclude,""
narminer: discovering negative association rules from code for bug detection,"Bian P., Liang B., Shi W., Huang J., Cai Y., NARminer: discovering negative association rules from code for bug detection, Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 411-422, (2018)",Exclude,""
tracking down software bugs using automatic anomaly detection,"Hangal S., Lam M.S., Tracking down software bugs using automatic anomaly detection, Proceedings of the 24th International Conference on Software Engineering. ICSE 2002. IEEE, pp. 291-301, (2002)",Exclude,""
casms: combining clustering with attention semantic model for identifying security bug reports,"Ma X., Keung J., Yang Z., Yu X., Li Y., Zhang H., CASMS: Combining clustering with attention semantic model for identifying security bug reports, Inf. Softw. Technol., 147, (2022)",Include,Exclude
bugs.jar: a large-scale,"Saha R., Lyu Y., Lam W., Yoshida H., Prasad M., Bugs.jar: A large-scale, diverse dataset of real-world Java bugs, Proceedings of the 15th IEEE/ACM International Conference on Mining Software Repositories. ACM, pp. 10-13, (2018)",Exclude,""
avatar: fixing semantic bugs with fix patterns of static analysis violations,"Liu K., Koyuncu A., Kim D., Bissyande T.F., AVATAR: Fixing semantic bugs with fix patterns of static analysis violations, Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution and Reengineering. IEEE, pp. 456-467, (2019)",Exclude,""
utilizing source code embeddings to identify correct patches,"Csuvik V., Horvath D., Horvath F., Vidacs L., Utilizing source code embeddings to identify correct patches, Proceedings of the 2nd International Workshop on Intelligent Bug Fixing, pp. 18-25, (2020)",Exclude,""
dual analysis for recommending developers to resolve bugs,"Xia X., Lo D., Wang X., Zhou B., Dual analysis for recommending developers to resolve bugs, J. Softw. Evol. Process, 27, 3, pp. 195-220, (2015)",Exclude,""
bugram: bug detection with n-gram language models,"Wang S., Chollak D., Movshovitz-Attias D., Tan L., Bugram: Bug detection with n-gram language models, Proc. IEEE/ACM 31st Int. Conf. Automated Softw. Eng, pp. 708-719, (2016)",Exclude,""
static detection of asymptotic performance bugs in collection traversals,"Olivo O., Dillig I., Lin C., Static detection of asymptotic performance bugs in collection traversals, SIGPLAN Not., 50, 6, pp. 369-378, (2015)",Exclude,""
cp-miner: finding copy-paste and related bugs in large-scale software code,"Li Z., Lu S., Myagmar S., Zhou Y., Cp-miner: Finding copy-paste and related bugs in large-scale software code, IEEE Transactions on software Engineering, 32, 3, pp. 176-192, (2006)",Exclude,""
analyzing bug fix for automatic bug cause classification,"Ni Z., Li B., Sun X., Chen T., Tang B., Shi X., Analyzing bug fix for automatic bug cause classification, Journal of Systems and Software, 163, (2020)",Exclude,""
self-supervised bug detection and repair,"Allamanis M., Jackson-Flux H., Brockschmidt M., Self-Supervised Bug Detection and Repair, Advances in Neural Information Processing Systems 34: Annual Conference on Neural Information Processing Systems 2021, pp. 27865-27876, (2021)",Exclude,""
automated identification of security issues from commit messages and bug reports[c],"Zhou Y., Sharma A., Automated identification of security issues from commit messages and bug reports[C], Proceedings of the 2017 11th joint meeting on foundations of software engineering., pp. 914-919, (2017)",Exclude,""
finding more null pointer bugs,"Hovemeyer D., Pugh W., Finding more null pointer bugs, but not too many, Proceedings of the 7th ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering (PASTE '07), pp. 9-14, (2007)",Exclude,""
learning unified features from natural and programming languages for locating buggy source code,"Huo X., Li M., Zhou Z.H., Et al., Learning Unified Features from Natural and Programming Languages for Locating Buggy Source Code, 16, pp. 1606-1612, (2016)",Include,Include
deepbugs: a learning approach to name-based bug detection,"Pradel M., Sen K., DeepBugs: A learning approach to name-based bug detection, Proc. ACM Program. Lang., 2, OOPSLA, pp. 1471-147:25, (2018)",Include,Include
a topic-based approach for narrowing the search space of buggy files from a bug report,"Nguyen A.T., Nguyen T.T., Al-Kofahi J., Nguyen H.V., Nguyen T.N., A topic-based approach for narrowing the search space of buggy files from a bug report, pp. 263-272, (2011)",Exclude,""
project proposal: learning variable mappings to repair programs,"Orvalho P., Piepenbrock J., Janota M., Manquinho V., Project Proposal: Learning Variable Mappings to Repair Programs, 7th Conference on Artificial Intelligence and Theorem Proving, AITP, (2022)",Exclude,""
automatic identifier inconsistency detection using code dictionary,"Kim S., Kim D., Automatic identifier inconsistency detection using code dictionary, Empir. Softw. Eng., 21, 2, pp. 565-604, (2016)",Exclude,""
understand by scitools,"Understand by scitools, (2021)",Exclude,""
finding bugs using your own code: detecting functionally-similar yet inconsistent code,"Ahmadi M., Farkhani R.M., Williams R., Lu L., Finding bugs using your own code: detecting functionally-similar yet inconsistent code, 30th USENIX Security Symposium (USENIX Security), (2021)",Exclude,""
the automatic classification of fault trigger based bug report,"Du X., Zheng Z., Xiao G., Yin B., The automatic classification of fault trigger based bug report, 2017 IEEE International Symposium on Software Reliability Engineering Workshops, pp. 259-265, (2017)",Exclude,""
how bugs are fixed: exposing bug-fix patterns with edits and nesting levels,"Rakibul Islam M., Zibran M.F., How bugs are fixed: Exposing bug-fix patterns with edits and nesting levels, Proceedings of the 35th Annual ACM Symposium on Applied Computing., pp. 1523-1531, (2020)",Exclude,""
mining fix patterns for findbugs violations,"Liu K., Kim D., Bissyande T.F., Yoo S., Le Traon Y., Mining fix patterns for FindBugs violations, IEEE Trans Softw Eng, 47, 1, pp. 165-188, (2018)",Exclude,""
getafix: learning to fix bugs automatically,"Bader J., Scott A., Pradel M., Chandra S., Getafix: Learning to fix bugs automatically, Proceedings of the ACM on Programming Languages, 3, pp. 1591-15927, (2019)",Exclude,""
classifying bug reports into bugs and non-bugs using lstm,"Qin H., Sun X., Classifying bug reports into bugs and non-bugs using lstm, Proceedings of the Tenth Asia-Pacific Symposium on Internetware, Internetware '18, (2018)",Exclude,""
chaff from the wheat: characterizing and determining valid bug reports,"Fan Y., Xia X., Lo D., Hassan A.E., Chaff from the wheat: Characterizing and determining valid bug reports, IEEE Transactions on Software Engineering, 46, 5, pp. 495-525, (2018)",Exclude,""
@tcomment: testing javadoc comments to detect comment-code inconsistencies,"Tan S.H., Marinov D., Tan L., Leavens G.T., @tcomment: Testing javadoc comments to detect comment-code inconsistencies, Proc. 5th IEEE Int. Conf. Softw. Testing, Verification Validation, pp. 260-269, (2012)",Exclude,""
learning to reduce false positives in analytic bug detectors,"Kharkar A., Moghaddam R.Z., Jin M., Liu X., Shi X., Clement C., Sundaresan N., Learning to reduce false positives in analytic bug detectors, Proceedings of the 44Th International Conference on Software Engineering, (2022)",Exclude,""
detecting duplicate bug report using character n-gram-based features,"Sureka A., Jalote P., Detecting duplicate bug report using character N-Gram-Based features, In: 2010 Asia Pacific Software Engineering Conference, pp. 366-374, (2010)",Exclude,""
characterizing and detecting antipatterns in the logging code,"Chen B., Ming Jiang Z., Characterizing and detecting antipatterns in the logging code, 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE). 71-81, (2017)",Exclude,""
2022. path-sensitive and alias-aware typestate analysis for detecting os bugs,"Li T., Bai J., Sui Y., Hu S., 2022. Path-Sensitive and Alias-Aware Typestate Analysis for Detecting OS Bugs, Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (Lausanne, Switzerland) (ASPLOS 2022). Association for Computing Machinery, New York, NY, USA, pp. 859-872",Include,Exclude
automatically detecting and describing high level actions within methods,"Sridhara G., Pollock L., Vijay-Shanker K., Automatically detecting and describing high level actions within methods, 2011 33rd International Conference on Software Engineering (ICSE), pp. 101-110, (2011)",Exclude,""
detecting missing-check bugs via semantic-and context-aware criticalness and constraints inferences,"Lu K., Pakki A., Wu Q., Detecting missing-check bugs via semantic-and context-aware criticalness and constraints inferences, 28th USENIX Security Symposium, USENIX Security 2019, pp. 1769-1786, (2019)",Exclude,""
a deeper look into bug fixes: patterns,"Soto M., Thung F., Wong C., Le Goues C., Lo D., A deeper look into bug fixes: Patterns, replacements, deletions, and additions, Proceedings of the 13th International Conference on Mining Software Repositories, Msr '16, pp. 512-515, (2016)",Exclude,""
combating insider threats by user profiling from activity logging data,"Dahmane M., Foucher S., Combating Insider Threats By User Profiling From Activity Logging Data, 2018 1st International Conference on Data Intelligence and Security (ICDIS), pp. 194-199, (2018)",Exclude,""
intscope: automatically detecting integer overfow vulnerability in x86 binary using symbolic execution,"Wang T., Wei T., Lin Z., Zou W., IntScope: Automatically Detecting Integer Overfow Vulnerability In X86 Binary Using Symbolic Execution, Network & Distributed System Security Symposium (NDSS2009), (2009)",Exclude,""
practical memory checking with dr. memory,"Bruening D., Zhao Q., Practical memory checking with dr. memory, Proceedings of the CGO 2011, the 9th International Symposium on Code Generation and Optimization, pp. 213-223, (2011)",Exclude,""
practical memory leak detection using guarded value-flow analysis,"Cherem S., Princehouse L., Rugina R., Practical memory leak detection using guarded value-flow analysis, Proceedings of the ACM SIGPLAN 2007 Conference on Programming Language Design and Implementation, pp. 480-491, (2007)",Include,Exclude
evaluating and comparing memory error vulnerability detectors,"Nong Y., Cai H., Ye P., Li L., Chen F., Evaluating and comparing memory error vulnerability detectors, Inf. Softw. Technol., 137, (2021)",Exclude,""
automatic discovery and quantification of information leaks,"Backes M., Kopf B., Rybalchenko A., Automatic Discovery and Quantification of Information Leaks, 2009 30th IEEE Symposium on Security and Privacy. IEEE, pp. 141-153, (2009)",Exclude,""
smoke: scalable path-sensitive memory leak detection for millions of lines of code,"Fan G., Wu R., Shi Q., Xiao X., Zhou J., Zhang C., Smoke: Scalable path-sensitive memory leak detection for millions of lines of code, Proceedings of the 41st International Conference on Software Engineering, ICSE 2019, pp. 72-82, (2019)",Include,Exclude
memory error detection in security testing,"Imtiaz N., Williams L.A., Memory error detection in security testing, (2021)",Exclude,""
static memory leak detection using full-sparse value-flow analysis,"Sui Y., Ye D., Xue J., Static memory leak detection using full-sparse value-flow analysis, International Symposium on Software Testing and Analysis, ISSTA 2012, pp. 254-264, (2012)",Include,Exclude
memory leak analysis by contradiction,"Orlovich M., Rugina R., Memory leak analysis by contradiction, Static Analysis, 13th International Symposium, SAS 2006, 4134, pp. 405-424, (2006)",Exclude,""
runtime detection of memory errors with smart status,"Chen Z., Wang C., Yan J., Sui Y., Xue J., Runtime detection of memory errors with smart status, Proceedings of the 30th ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA’21), pp. 296-308, (2021)",Exclude,""
automated memory leak detection for production use,"Jung C., Lee S., Raman E., Pande S., Automated memory leak detection for production use, Proceedings of the 36th International Conference on Software Engineering (ICSE’14), pp. 825-836, (2014)",Exclude,""
detecting memory leaks statically with full-sparse value-flow analysis,"Sui Y., Ye D., Xue J., Detecting memory leaks statically with full-sparse value-flow analysis, IEEE Trans. Software Eng., 40, 2, pp. 107-122, (2014)",Include,Exclude
pca: memory leak detection using partial call-path analysis,"Li W., Cai H., Sui Y., Manz D., PCA: Memory leak detection using partial call-path analysis, ESEC/FSE '20: 28th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 1621-1625, (2020)",Include,Exclude
leakpoint: pinpointing the causes of memory leaks,"Clause J.A., Orso A., Leakpoint: Pinpointing the causes of memory leaks, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE 2010, pp. 515-524, (2010)",Exclude,""
robust prediction of faultproneness by random forests,"Guo L., Ma Y., Cukic B., Singh H., Robust prediction of faultproneness by random forests, Proc. 15th Int. Symp. Softw. Rel. Eng., pp. 417-428, (2004)",Exclude,""
predicting failures with developer networks and social network analysis,"Meneely A., Williams L., Snipes W., Osborne J., Predicting failures with developer networks and social network analysis, Proceedings of the 16th ACM SIGSOFT International Symposium On Foundations of Software Engineering, pp. 13-23, (2008)",Include,Include
application of random forest in predicting faultprone classes,"Kaur A., Malhotra R., Application of random forest in predicting faultprone classes, Proc. Int. Conf. Adv. Comput. Theory Eng., pp. 37-43, (2008)",Exclude,""
random forests,"Breiman L., Random forests, Mach. Learn., 45, 1, pp. 5-32, (2001)",Include,""
putting it all together: using socio-technical networks to predict failures,"Bird C., Nagappan N., Gall H., Murphy B., Devanbu P., Putting it all together: Using socio-technical networks to predict failures, 2009 20th International Symposium On Software Reliability Engineering, pp. 109-119, (2009)",Include,Include
auc: a statistically consistent and more discriminating measure than accuracy,"Ling C., Huang J., Zhang H., Auc: A statistically consistent and more discriminating measure than accuracy, In: Proc 18Th Int’l Joint Conf Artificial Intelligence (IJCAI), (2003)",Exclude,""
applying social network analysis to software fault-proneness prediction,"Li Y., Applying Social Network Analysis to Software Fault-Proneness Prediction, (2017)",Include,Exclude
effective prediction of three common diseases by combining smote with tomek links technique for imbalanced medical data,"Zeng M., Zou B., Wei F., Liu X., Wang L., Effective prediction of three common diseases by combining SMOTE with tomek links technique for imbalanced medical data, 2016 IEEE International Conference of Online Analysis and Computing Science, ICOACS, pp. 225-228, (2016)",Exclude,""
a novel time series link prediction method: learning automata approach,"Moradabadi B., Meybodi M.R., A novel time series link prediction method: Learning automata approach, Physica A, 482, pp. 422-432, (2017)",Exclude,""
variability-aware performance prediction: a statistical learning approach,"Guo J., Czarnecki K., Apel S., Siegmund N., Wasowski A., Variability-Aware Performance Prediction: A Statistical Learning Approach, pp. 301-311, (2013)",Exclude,""
empirical analysis of network measures for predicting high severity software faults,"Chen L., Ma W., Zhou Y., Xu L., Wang Z., Chen Z., Xu B., Empirical analysis of network measures for predicting high severity software faults, Sci. China Inf. Sci., 59, 12, pp. 1-18, (2016)",Include,Include
supervised representation learning approach for cross-project aging-related bug prediction,"Wan X., Zheng Z., Qin F., Qiao Y., Trivedi K.S., Supervised representation learning approach for cross-project aging-related bug prediction, Proceedings of the 30th International Symposium on Software Reliability Engineering, pp. 163-172, (2019)",Include,Exclude
empirical analysis of network measures for effort-aware fault-proneness prediction,"Ma W., Chen L., Yang Y., Zhou Y., Xu B., Empirical analysis of network measures for effort-aware fault-proneness prediction, Inf. Softw. Technol., 69, pp. 50-70, (2016)",Include,Include
balancing misclassification rates in classification-tree models of software quality,"Khoshgoftaar T.M., Yuan X., Allen E.B., Balancing misclassification rates in classification-tree models of software quality, Empir. Softw. Eng., 5, 4, pp. 313-330, (2000)",Include,Exclude
random decision forests,"Kam Ho T., Random decision forests, Proceedings of 3rd International Conference on Document Analysis and Recognition, 1, pp. 278-282, (1995)",Exclude,""
using tri-relation networks for effective software fault-proneness prediction,"Li Y., Wong W.E., Lee S.Y., Wotawa F., Using tri-relation networks for effective software fault-proneness prediction, Ieee Access, 7, pp. 63066-63080, (2019)",Include,Include
predicting defects using network analysis on dependency graphs,"Zimmermann T., Nagappan N., Predicting defects using network analysis on dependency graphs, Proceedings of the 30th International Conference On Software Engineering, pp. 531-540, (2008)",Include,Include
evaluating link prediction methods,"Yang Y., Lichtenwalter R.N., Chawla N.V., Evaluating link prediction methods, Knowl. Inf. Syst., 45, 3, pp. 751-782, (2015)",Exclude,""
cc2vec: distributed representations of code changes,"Hoang T., Jin Kang H., Lawall J., Lo D., CC2Vec: Distributed representations of code changes, Proceedings of the 42nd International Conference on Software Engineering, pp. 518-529, (2020)",Include,Include
word2vec parameter learning explained,"Rong X., word2vec parameter learning explained, (2014)",Exclude,""
repo2vec: a comprehensive embedding approach for determining repository similarity,"Faruk Rokon O., Yan P., Islam R., Faloutsos M., Repo2vec: A comprehensive embedding approach for determining repository similarity, ICSME, (2021)",Include,Include
déjàvu: a map of code duplicates on github,"Lopes C.V., Maj P., Martins P., Saini V., Yang D., Zitny J., Sajnani H., Vitek J., DéjàVu: A map of code duplicates on GitHub, Proceedings of the 2017 ACM on Programming Languages (OOPSLA'17), pp. 1-28, (2017)",Exclude,""
2020 flow2vec: value-flow-based precise code embedding. proc,"Sui Y., Cheng X., Zhang G., Wang H., 2020 Flow2Vec: Value-Flow-Based Precise Code Embedding. Proc, ACM Program. Lang 4, (2020)",Include,Include
struc2vec: learning node representations from structural identity,"Ribeiro L.F.R., Saverese P.H.P., Figueiredo D.R., Struc2vec: Learning Node Representations from Structural Identity, Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, (2017)",Exclude,""
word2vec explained: deriving mikolov,"Goldberg Y., Levy O., Word2vec Explained: Deriving Mikolov, et Al.'s Negative-sampling Word-embedding Method, (2014)",Exclude,""
word2vec explained: deriving mikolov et al.’s negative-sampling word-embedding method,"Goldberg Y., Levy O., Word2vec Explained: Deriving Mikolov et al.’s negative-sampling word-embedding method, Arxiv, 1402, (2014)",Exclude,""
2019. code2vec: learning distributed representations of code,"Alon U., Zilberstein M., Levy O., Yahav E., 2019. Code2vec: Learning Distributed Representations of Code, 3, (2019)",Include,Include
2019. assessing the generalizability of code2vec token embeddings,"Jin Kang H., Bissyande T.F., Lo D., 2019. Assessing the generalizability of code2vec token embeddings, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Ieee, pp. 1-12",Exclude,""
bin2vec: learning representations of binary executable programs for security tasks,"Arakelyan S., Hauser C., Kline E., Galstyan A., Bin2vec: Learning representations of binary executable programs for security tasks, CoRR, (2020)",Exclude,""
word2vec,"Grohe M., 2020. word2vec, node2vec, graph2vec, X2vec: Towards a theory of vector embeddings of structured data, 39th ACM Symposium on Principles of Database Systems, pp. 1-16",Exclude,""
commit2vec: learning distributed representations of code changes,"Cabrera Lozoya R., Baumann A., Sabetta A., Bezzi M., Commit2vec: Learning distributed representations of code changes, SN Computer Science, 2, 3, pp. 1-16, (2021)",Include,Include
import2vec learning embeddings for software libraries,"Theeten B., Vandeputte F., Van Cutsem T., Import2vec learning embeddings for software libraries, Proceedings of the 16th International Conference on Mining Software Repositories, pp. 18-28, (2019)",Include,Exclude
sent2vec: a new sentence embedding representation with sentimental semantic,"Moghadasi M.N., Zhuang Y., Sent2vec: A new sentence embedding representation with sentimental semantic, 2020 IEEE International Conference on Big Data, Big Data, pp. 4672-4680, (2020)",Exclude,""
api2com: on the improvement of automatically generated code comments using api documentations,"Shahbazi R., Sharma R., Fard F.H., API2Com: On the improvement of automatically generated code comments using api documentations, International Conference on Program Comprehension. IEEE, pp. 411-421, (2021)",Exclude,""
an extractive-and-abstractive framework for source code summarization,"Sun W., Fang C., Chen Y., Zhang Q., Tao G., Han T., Et al., An extractive-and-abstractive framework for source code summarization, (2022)",Exclude,""
foundations of statistical natural language processing,"Manning C.D., Schutze H., Foundations of Statistical Natural Language Processing, (1999)",Exclude,""
a statistical semantic language model for source code,"Nguyen T.T., Nguyen A.T., Nguyen H.A., Nguyen T.N., A statistical semantic language model for source code, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 2013), (2013)",Exclude,""
comments are more important than code,"Raskin J., Comments Are More Important Than Code, ACM Queue, 3, (2005)",Exclude,""
unixcoder: unified cross-modal pre-training for code representation,"Guo D., Lu S., Duan N., Wang Y., Zhou M., Yin J., UniXcoder: Unified cross-modal pre-training for code representation, Proceedings of the annual meeting of the Association for Computational Linguistics, pp. 7212-7225, (2022)",Exclude,""
exploring the limits of transfer learning with a unified text-to-text transformer,"Raffel C., Shazeer N., Roberts A., Lee K., Narang S., Matena M., Zhou Y., Li W., Liu P.J., Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer, Journal of Machine Learning Research, 21, 140, pp. 1-67, (2020)",Exclude,""
treegen: a tree-based transformer architecture for code generation,"Sun Z., Zhu Q., Xiong Y., Sun Y., Mou L., Zhang L., TreeGen: A tree-based transformer architecture for code generation, AAAI, (2020)",Include,Include
codeattention: translating source code to comments by exploiting the code constructs,"Zheng W., Zhou H., Li M., Wu J., Codeattention: Translating source code to comments by exploiting the code constructs, Frontiers of Computer Science, 13, pp. 565-578, (2019)",Include,Exclude
codegen: an open large language model for code with multi-turn program synthesis,"Nijkamp E., Et al., Codegen: An open large language model for code with multi-turn program synthesis, The Eleventh International Conference on Learning Representations, (2023)",Exclude,""
towards automatically generating summary comments for java methods,"Sridhara G., Hill E., Muppaneni D., Pollock L., Vijay-Shanker K., Towards automatically generating summary comments for Java methods, Proceedings of the IEEE/ACM international conference on Automated software engineering, pp. 43-52, (2010)",Exclude,""
automatic documentation generation via source code summarization of method context,"McBurney P.W., McMillan C., Automatic documentation generation via source code summarization of method context, 22nd International Conference on Program Comprehension, ICPC 2014, Hyderabad, India, June 2-3, 2014, pp. 279-290, (2014)",Exclude,""
a deep neural network language model with contexts for source code,"Nguyen A.T., Nguyen T.D., Phan H.D., Nguyen T.N., A deep neural network language model with contexts for source code, SANER, pp. 323-334, (2018)",Include,Exclude
multi-task learning based pretrained language model for code completion,"Liu F., Li G., Zhao Y., Jin Z., Multi-task learning based pretrained language model for code completion, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering., pp. 473-485, (2020)",Include,Exclude
code completion with statistical language models,"Raychev V., Vechev M., Yahav E., Code completion with statistical language models, Proc. of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation, (2014)",Exclude,""
neural code comprehension: a learnable representation of code semantics,"Ben-Nun T., Jakobovits A. S., Hoefler T., Neural code comprehension: a learnable representation of code semantics, Advances in Neural Information Processing Systems, pp. 3585-3597, (2018)",Include,Include
codebert: a pre-trained model for programming and natural languages. arxiv preprint arxiv,"Feng Z., Guo D., Tang D., Et al., Codebert: A Pre-Trained Model for Programming and Natural Languages. Arxiv Preprint Arxiv, 2002, (2020)",Include,Exclude
a synopsis of linguistic theory,"Firth J.R., A Synopsis of Linguistic Theory, 1930-1955, (1957)",Exclude,""
tener: adapting transformer encoder for named entity recognition,"Yan H., Deng B., Li X., Qiu X., Tener: Adapting transformer encoder for named entity recognition, (2019)",Exclude,""
2019 roberta: a robustly optimized bert pretraining approach,"Liu Y., Ott M., Goyal N., Du J., Joshi M., Chen D., Levy O., Lewis M., Zettlemoyer L., Stoyanov V., 2019 RoBERTa: A Robustly Optimized BERT Pretraining Approach, CoRR abs/1907 11692, (2019)",Exclude,""
the small world of human language,"Cancho R.F.I., Sole R.V., The small world of human language, Proceedings of the Royal Society of London B: Biological Sciences, 268, 1482, pp. 2261-2265, (2001)",Exclude,""
deep learning on graphs for natural language processing. acm,"Wu L., Chen Y., Ji H., Liu B., Deep Learning on Graphs for Natural Language Processing. ACM, pp. 2651-2653, (2021)",Exclude,""
a neural probabilistic language model,"Bengio Y., Ducharme R., Vincent P., Janvin C., A neural probabilistic language model, The Journal of Machine Learning Research, 3, pp. 1137-1155, (2003)",Exclude,""
neural symbolic machines: learning semantic parsers on freebase with weak supervision,"Liang C., Berant J., Le Q., Forbus K.D., Lao N., Neural symbolic machines: Learning semantic parsers on freebase with weak supervision, Arxiv Preprint Arxiv, 1611, (2016)",Exclude,""
automatic source code summarization with extended treelstm,"Shido Y., Kobayashi Y., Yamamoto A., Miyamoto A., Matsumura T., Automatic Source Code Summarization with Extended Treelstm, (2019)",Include,Include
a tutorial on hidden markov models and selected applications in speech recognition,"Rabiner L.R., A tutorial on hidden markov models and selected applications in speech recognition, Proceedings of The IEEE, 77, 2, pp. 257-286, (1989)",Exclude,""
code-bert: a pre-trained model for programming and natural languages,"Feng Z., Guo D., Tang D., Duan N., Feng X., Gong M., Shou L., Qin B., Liu T., Jiang D., Et al., Code-BERT: A Pre-Trained Model for Programming and Natural Languages, Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: Findings, pp. 1536-1547, (2020)",Include,Exclude (Duplicate)
transformer-xl: attentive language models beyond a fixed-length context,"Dai Z., Yang Z., Yang Y., Carbonell J., Le Q., Salakhutdinov R., Transformer-xl: Attentive language models beyond a fixed-length context, Acl, pp. 2978-2988, (2019)",Exclude,""
automatic code summarization via multi-dimensional semantic fusing in gnn,"Liu S., Chen Y., Xie X., Siow J., Liu Y., Automatic code summarization via multi-dimensional semantic fusing in GNN, CoRR, (2020)",Include,Include
a canonicalizing model for building programming tutors,"RIVERS K., KOEDINGER K. R., A canonicalizing model for building programming tutors, Proceedings of the 11th International Conference on Intelligent Tutoring Systems, (ITS 2012), pp. 591-593, (2012)",Exclude,""
a survey of automatic source code summarization,"Zhang C., Wang J., Zhou Q., Xu T., Tang K., Gui H., Liu F., A survey of automatic source code summarization, Symmetry, 14, (2022)",Exclude,""
summarizing source code with transferred api knowledge,"Hu X., Li G., Xia X., Lo D., Lu S., Jin Z., Summarizing Source Code with Transferred API Knowledge, Proceedings of the Twenty-Seventh International Joint Conference on Artificial Intelligence, IJCAI 2018, pp. 2269-2275",Exclude,""
a structural model for contextual code changes,"Brody S., Alon U., Yahav E., A structural model for contextual code changes, Proceedings of the ACM on Programming Languages, 4, pp. 1-28, (2020)",Include,Include
m2trec: metadata-aware multi-task transformer for large-scale and cold-start free session-based recommendations,"Shalaby W., Oh S., Afsharinejad A., Kumar S., Cui X., M2TRec: Metadata-aware Multi-task Transformer for Large-scale and Cold-start free Session-based Recommendations, RecSys, pp. 573-578, (2022)",Exclude,""
using stereotypes in the automatic generation of natural language summaries for c++ methods,"Abid N.J., Dragan N., Collard M.L., Maletic J.I., Using stereotypes in the automatic generation of natural language summaries for C++ methods, Proc. IEEE Int. Conf. Softw. Maintenance Evol, pp. 561-565, (2015)",Exclude,""
sensory: leveraging code statement sequence information for code snippets recommendation,"Ai L., Huang Z., Li W., Zhou Y., Yu Y., SENSORY: Leveraging code statement sequence information for code snippets recommendation, Proc. IEEE 43rd Annu. Comput. Softw. Appl. Conf., pp. 27-36, (2019)",Exclude,""
semantic scaffolds for pseudocode-to-code generation,"Zhong R., Stern M., Klein D., Semantic scaffolds for pseudocode-to-code generation, (2020)",Exclude,""
phog: probabilistic model for code,"Bielik P., Raychev V., Vechev M., Phog: Probabilistic model for code, Proceedings of the 33rd International Conference on Machine Learning (Proceedings of Machine Learning Research), 48, pp. 2933-2942, (2016)",Exclude,""
re_trans: combined retrieval and transformer model for source code summarization,"Zhang C., Zhou Q., Qiao M., Tang K., Xu L., Liu F., Re_trans: Combined retrieval and transformer model for source code summarization, (2022)",Exclude,""
a survey on pretrained language models for neural code intelligence,"Xu Y., Zhu Y., A Survey on Pretrained Language Models for Neural Code Intelligence, (2022)",Include,Exclude
tranx: a transition-based neural abstract syntax parser for semantic parsing and code generation,"Yin P., Neubig G., TRANX: A Transition-based Neural Abstract Syntax Parser for Semantic Parsing and Code Generation, Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing: System Demonstrations, pp. 7-12, (2018)",Include,Exclude
learning human-written commit messages to document code changes,"Huang Y., Jia N., Zhou H., Chen X., Zheng Z., Tang M., Learning human-written commit messages to document code changes, Journal of Computer Science and Technology, 35, 6, pp. 1258-1277, (2020)",Exclude,""
polyhedral code generation in the real world,"Vasilache N., Bastoul C., Cohen A., Polyhedral code generation in the real world, Compiler Construction, pp. 185-201, (2006)",Exclude,""
generating commit messages from diffs using pointer-generator network,"Liu Q., Liu Z., Zhu H., Fan H., Du B., Qian Y., Generating commit messages from diffs using pointer-generator network, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR). IEEE, pp. 299-309, (2019)",Include,Exclude
retrieve and refine: exemplarbased neural comment generation,"Wei B., Li Y., Li G., Xia X., Jin Z., Retrieve and refine: Exemplarbased neural comment generation, Proc. IEEE/ACM 35th Int. Conf. Automated Softw. Eng, pp. 349-360, (2020)",Include,Include
code summarization with structure-induced transformer,"Wu H., Zhao H., Zhang M., Code summarization with structure-induced transformer, Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021, pp. 1078-1090, (2021)",Include,Include
learning scalable and precise representation of program semantics,"Wang K., Learning Scalable and Precise Representation of Program Semantics, (2019)",Include,Exclude (Pre-print)
probabilistic model for code with decision trees,"Raychev V., Bielik P., Vechev M.T., Probabilistic model for code with decision trees, Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2016, Part of SPLASH 2016, Amsterdam, the Netherlands, October 30 - November 4, 2016. ACM, pp. 731-747, (2016)",Exclude,""
learning continuous semantic representations of symbolic expressions,"Allamaras M., Chanthirasegaran P., Kohli P., Sutton C., Learning continuous semantic representations of symbolic expressions, 34th International Conference on Machine Learning, ICML 2017, 1, pp. 118-131, (2017)",Exclude,""
english stop words,"English stop words, (2021)",Exclude,""
representation learning for natural language processing,"Liu Z., Lin Y., Sun M., Representation Learning for Natural Language Processing, (2020)",Exclude,""
nltk: the natural language toolkit,"Bird S., NLTK: the natural language toolkit, ACL 2006, 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference, pp. 69-72, (2006)",Exclude,""
a dual framework for implicit and explicit emotion recognition: an ensemble of language models and computational linguistics,"Khoshnam F., Baraani-Dastjerdi A., A dual framework for implicit and explicit emotion recognition: An ensemble of language models and computational linguistics, Expert Systems with Applications, 198, (2022)",Exclude,""
adaptivepaste: code adaptation through learning semantics-aware variable usage representations,"Liu X., Jang J., Sundaresan N., Allamanis M., Svyatkovskiy A., Adaptivepaste: Code adaptation through learning semantics-aware variable usage representations, (2022)",Include,Exclude (Pre-print)
towards context-aware code comment generation,"Yu X., Huang Q., Wang Z., Feng Y., Zhao D., Towards context-aware code comment generation, Findings of the Association for Computational Linguistics: EMNLP, pp. 3938-3947, (2020)",Exclude,""
on automatic summarization of what and why information in source code changes,"Shen J., Sun X., Li B., Yang H., Hu J., On automatic summarization of what and why information in source code changes, 2016 IEEE 40th Annual Computer Software and Applications Conference (COMPSAC), 1, pp. 103-112, (2016)",Exclude,""
realformer: transformer likes residual attention,"He R., Ravula A., Kanagal B., Ainslie J., Realformer: Transformer likes residual attention, (2020)",Exclude,""
a multilingual bpe embedding space for universal sentiment lexicon induction,"Zhao M., Schutze H., A Multilingual BPE Embedding Space for Universal Sentiment Lexicon Induction, Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics., pp. 3506-3517, (2019)",Exclude,""
self-documenting code: 67–90,"Stueben M., Self-DOCUMENTING CODE: 67–90, (2018)",Exclude,""
learning to update natural language comments based on code changes,"Panthaplackel S., Nie P., Gligoric M., Li J.J., Mooney R.J., Learning to update natural language comments based on code changes, Arxiv: Cs.Cl/2004.12169, (2020)",Exclude,""
codesum: translate program language to natural language,"Hu X., Wei Y., Li G., Jin Z., CodeSum: Translate Program Language to Natural Language, (2017)",Exclude,""
a deep language model for software code,"Dam H.K., Tran T., Pham T.T.M., A deep language model for software code, FSE 2016: Proceedings of the Foundations Software Engineering International Symposium, pp. 1-4, (2016)",Exclude,""
hadamard matrices and their applications,"Horadam K.J., Hadamard matrices and their applications, (2012)",Exclude,""
automatically generating natural language descriptions for object-related statement sequences,"Wang X., Pollock L., Vijay-Shanker K., Automatically generating natural language descriptions for object-related statement sequences, 2017 IEEE 24th International Conference on Software Analysis, Evolution and Reengineering (SANER), pp. 205-216, (2017)",Exclude,""
structured programming and structured design as art forms,"Yourdon E., Structured programming and structured design as art forms, Proceedings of the May 19-22, 1975, National Computer Conference and Exposition (AFIPS '75), pp. 277-277, (1975)",Exclude,""
unsupervised translation of programming languages,"Roziere B., Lachaux M., Chanussot L., Lample G., Unsupervised translation of programming languages, Proceedings of the Advances in Neural Information Processing Systems 33: Annual Conference on Neural Information Processing Systems 2020, (2020)",Exclude,""
a scalable hierarchical distributed language model,"Mnih A., Hinton G.E., A scalable hierarchical distributed language model, Proceedings of the 22nd Annual Conference on Neural Information Processing Systems, pp. 1081-1088, (2008)",Exclude,""
graph-based statistical language model for code,"Nguyen A. T., Nguyen T. N., Graph-based statistical language model for code, Proceedings of the 2015 37th IEEE International Conference on Software Engineering, 1, pp. 858-868, (2015)",Include,Exclude
a neural model for generating natural language summaries of program subroutines,"LeClair A., Jiang S., McMillan C., A neural model for generating natural language summaries of program subroutines, Icse, pp. 795-806, (2019)",Include,Include
nl2bash: a corpus and semantic parser for natural language interface to the linux operating system,"Victoria Lin X., Wang C., Zettlemoyer L., Ernst M.D., Nl2bash: A corpus and semantic parser for natural language interface to the linux operating system, LREC, (2018)",Exclude,""
class-based n-gram models of natural language,"Brown P. F., Della Pietra V. J., Desouza P. V., Lai J. C., Mercer R. L., Class-based n-gram models of natural language, Computational Linguistics, 18, 4, pp. 467-480, (1992)",Exclude,""
neural network methods in natural language processing,"Goldberg Y., Hirst G., Neural Network Methods in Natural Language Processing, (2017)",Exclude,""
neural networks for modeling source code edits,"Zhao R., Bieber D., Swersky K., Tarlow D., Neural networks for modeling source code edits, (2019)",Include,Exclude
evaluating large language models trained on code,"Chen M., Tworek J., Jun H., Yuan Q., Pinto H.P.D.O., Kaplan J., Et al., Evaluating large language models trained on code, (2021)",Exclude,""
automatically generating commit messages from diffs using neural machine translation,"Jiang S., Armaly A., McMillan C., Automatically generating commit messages from diffs using neural machine translation, 2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEE, pp. 135-146, (2017)",Include,Exclude
trex: learning execution semantics from micro-traces for binary similarity,"Pei K., Xuan Z., Yang J., Jana S., Ray B., Trex: Learning execution semantics from micro-traces for binary similarity, (2020)",Exclude,""
context-aware retrieval-based deep commit message generation,"Wang H., Xia X., Lo D., He Q., Wang X., Grundy J., Context-aware retrieval-based deep commit message generation, ACM Transactions on Software Engineering and Methodology (TOSEM), 30, 4, pp. 1-30, (2021)",Include,Exclude
summarizing source code with hierarchical code representation,"Zhou Z., Yu H., Fan G., Huang Z., Yang X., Summarizing source code with hierarchical code representation, Inf. Softw. Technol., 143, (2022)",Include,Include
neural models of automated documentation generation for source code. dissertation. university of notre dame,"Alexander L., Neural Models of Automated Documentation Generation for Source Code. Dissertation. University of Notre Dame",Exclude,""
assemble foundation models for automatic code summarization,"Gu J., Salza P., Gall H.C., Assemble foundation models for automatic code summarization, IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2022, Honolulu, HI, USA, March 15-18, 2022, pp. 935-946, (2022)",Exclude,""
tag: type auxiliary guiding for code comment generation,"Cai R., Liang Z., Xu B., Li Z., Hao Y., Chen Y., TAG: Type Auxiliary Guiding for Code Comment Generation, Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pp. 291-301, (2020)",Exclude,""
code2seq: generating sequences from structured representations of code[c],"Alon U., Brody S., Levy O., Yahav E., Code2seq: Generating sequences from structured representations of code[C], International Conference on Learning Representations, (2019)",Exclude,""
exploring software naturalness through neural language models,"Buratti L., Pujar S., Bornea M., McCarley S., Zheng Y., Rossiello G., Morari A., Laredo J., Thost V., Zhuang Y., Et al., Exploring software naturalness through neural language models, (2020)",Exclude,""
natural language is a programming language: applying natural language processing to software development,"Ernst M.D., Natural language is a programming language: Applying natural language processing to software development, SNAPL, pp. 1-14, (2017)",Exclude,""
summarization techniques for code,"Panichella S., Summarization techniques for code, change, testing, and user feedback, 2018 IEEE Workshop on Validation, Analysis and Evolution of Software Tests (VST), pp. 1-5, (2018)",Exclude,""
transformers: state-of-the-art natural language processing,"Wolf Thomas, Debut Lysandre, Sanh Victor, Chaumond Julien, Delangue Clement, Moi Anthony, Cistac Pierric, Rault Tim, Louf Remi, Funtowicz Morgan, Davison Joe, Shleifer Sam, von Platen Patrick, Ma Clara, Jernite Yacine, Plu Julien, Xu Canwen, Le Scao Teven, Gugger Sylvain, Drame Mariama, Lhoest Quentin, Rush Alexander M., Transformers: State-of-the-art natural language processing, Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations, pp. 38-45, (2020)",Exclude,""
automatic generation of text descriptive comments for code blocks,"Liang Y., Zhu K.Q., Automatic generation of text descriptive comments for code blocks, Proceedings of the Thirty-Second AAAI Conference on Artificial Intelligence, (AAAI-18), the 30th innovative Applications of Artificial Intelligence (IAAI-18), and the 8th AAAI Symposium on Educational Advances in Artificial Intelligence (EAAI-18), pp. 5229-5236, (2018)",Exclude,""
towards automatic generation of short summaries of commits,"Jiang S., McMillan C., Towards automatic generation of short summaries of commits, 2017 IEEE/ACM 25th International Conference on Program Comprehension (ICPC). IEEE, pp. 320-323, (2017)",Exclude,""
source code summarization with structural relative position guided transformer,"Gong Z., Gao C., Wang Y., Gu W., Peng Y., Xu Z., Source code summarization with structural relative position guided transformer, (2022)",Include,Include
commit message generation for source code changes,"Xu S., Yao Y., Xu F., Gu T., Tong H., Lu J., Commit message generation for source code changes, IJCAI, pp. 3975-3981, (2019)",Exclude,""
global relational models of source code,"Hellendoorn V.J., Sutton C., Singh R., Maniatis P., Bieber D., Global relational models of source code, International Conference on Learning Representations, (2020)",Include,Include
code comments generation with data flow-guided transformer,"Zhou W., Junhua W., Code comments generation with data flow-guided transformer, Web Information Systems and Applications: 19Th International Conference, WISA 2022, Dalian, China, September 16–18, 2022, Proceedings, pp. 168-180, (2022)",Include,Include
adversarial examples for models of code,"Yefet N., Alon U., Yahav E., Adversarial examples for models of code, Proc. ACM Program. Lang., 4, OOPSLA, (2020)",Exclude,""
automating just-in-time comment updating,"Liu Z., Xia X., Yan M., Li S., Automating just-in-Time comment updating, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering. ACM, (2020)",Exclude,""
supporting program comprehension with source code summarization,"Haiduc S., Aponte J., Marcus A., Supporting program comprehension with source code summarization, 2010 ACM/IEEE 32nd International Conference on Software Engineering, pp. 223-226, (2010)",Exclude,""
bart: denoising sequence-tosequence pre-training for natural language generation,"Lewis M., Liu Y., Goyal N., Ghazvininejad M., Mohamed A., Levy O., Stoyanov V., Zettlemoyer L., BART: Denoising sequence-tosequence pre-training for natural language generation, translation, and comprehension, ACL, pp. 7871-7880, (2020)",Exclude,""
code to comment “translation”: data,"Gros D., Sezhiyan H., Devanbu P., Yu Z., Code to comment “translation”: Data, metrics, baselining & evaluation, Arxiv: Cs.Se/2010.01410, (2020)",Include,""
federated learning based multi-task feature fusion framework for code expressive semantic extraction,"Deng F., Fu C., Qian Y., Yang J., He S., Xu H., Federated learning based multi-task feature fusion framework for code expressive semantic extraction, Softw Pract Exper, 52, 8, pp. 1849-1866, (2022)",Exclude,""
neural guided constraint logic programming for program synthesis,"Zhang L., Rosenblatt G., Fetaya E., Liao R., Byrd W., Might M., Urtasun R., Zemel R., Neural guided constraint logic programming for program synthesis, Adv Neural Inf Process Syst, (2018)",Include,Include
graphcodebert: pre-training code representations with data-ow,"Guo D., Ren S., Lu S., Feng Z., Tang D., Liu S., Zhou L., Duan N., Svyatkovskiy A., Fu S., Et al., Graphcodebert: Pre-training code representations with data-ow, (2020)",Include,Include
towards automatically generating block comments for code snippets,"Huang Y., Huang S., Chen H., Chen X., Zheng Z., Luo X., Jia N., Hu X., Zhou X., Towards automatically generating block comments for code snippets, Information and Software Technology, (2020)",Exclude,""
code vectors: understanding programs through embedded abstracted symbolic traces,"Henkel J., Lahiri S.K., Liblit B., Reps T., Code vectors: Understanding programs through embedded abstracted symbolic traces, ESEC/FSE, pp. 163-174, (2018)",Include,Exclude
tranŝ3: a transformer-based framework for unifying code summarization and code search,"Wang W., Zhang Y., Zeng Z., Xu G., Tranŝ3: A transformer-based framework for unifying code summarization and code search, (2020)",Exclude,""
gypsum: learning hybrid representations for code summarization,"Wang Y., Dong Y., Lu X., Zhou A., Gypsum: Learning hybrid representations for code summarization, Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension, pp. 12-23, (2022)",Include,Include
treebert: a tree-based pre-trained model for programming language,"Jiang X., Zheng Z., Lyu C., Li L., Lyu L., Treebert: A tree-based pre-trained model for programming language, UAI 2021: Uncertainty in Artificial Intelligence, (2021)",Include,Include
on the use of automated text summarization techniques for summarizing source code,"Haiduc S., Aponte J., Moreno L., Marcus A., On the Use of Automated Text Summarization Techniques for Summarizing Source Code, Proceedings of the 17th Working Conference on Reverse Engineering, WCRE 2010, pp. 35-44, (2010)",Exclude,""
bert: pre-training of deep bidirectional transformers for language understanding,"Devlin J., Chang M., Lee K., Toutanova K., BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding, Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, NAACL-HLT 2019, pp. 4171-4186, (2019)",Exclude,""
language models are few-shot learners,"Brown T., Mann B., Ryder N., Subbiah M., Kaplan J.D., Dhariwal P., Et al., Language models are few-shot learners, Advances in Neural Information Processing Systems, 33, pp. 1877-1901, (2020)",Exclude,""
a syntactic neural model for general-purpose code generation,"Yin P., Neubig G., A syntactic neural model for general-purpose code generation, Proc. 55th Annu. Meeting Assoc. Comput. Linguistics, pp. 440-450, (2017)",Include,Include
a neural architecture for generating natural language descriptions from source code changes,"Loyola P., Marrese-Taylor E., Matsuo Y., A neural architecture for generating natural language descriptions from source code changes, Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pp. 287-292, (2017)",Exclude,""
code structure guided transformer for source code summarization,"Gao S., Gao C., He Y., Zeng J., Nie L.Y., Xia X., Code structure guided transformer for source code summarization, Arxiv Preprint Arxiv:210409340, (2021)",Exclude,""
structured generative models of natural source code,"Maddison C.J., Tarlow D., Structured generative models of natural source code, International Conference on Machine Learning (ICML), (2014)",Exclude,""
novel natural language summarization of program code via leveraging multiple input representations,"Chen F., Kim M., Choo J., Novel natural language summarization of program code via leveraging multiple input representations, Findings of the Association for Computational Linguistics: EMNLP 2021, pp. 2510-2520, (2021)",Include,Exclude
speech & language processing.,"Jurafsky D., Martin J.H., Speech & Language Processing., (2021)",Exclude,""
codet5: identifier-aware unified pre-trained encoder-decoder models for code understanding and generation,"Wang Y., Wang W., Joty S., Hoi S.C., CodeT5: Identifier-aware unified pre-trained encoder-decoder models for code understanding and generation, Proceedings of the 2021 conference on empirical methods in natural language processing, pp. 8696-8708, (2021)",Exclude,""
studying the usage of text-to-text transfer transformer to support code-related tasks,"Mastropaolo A., Scalabrino S., Cooper N., Palacio D.N., Poshyvanyk D., Oliveto R., Bavota G., Studying the usage of text-to-text transfer transformer to support code-related tasks, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE). IEEE, pp. 336-347, (2021)",Exclude,""
electra: pre-training text encoders as discriminators rather than generators,"Clark Kevin, Luong Minh-Thang, Le Quoc V., Manning Christopher D., ELECTRA: pre-training text encoders as discriminators rather than generators, 8th International Conference on Learning Representations, ICLR 2020, (2020)",Exclude,""
data-driven domain models for problem solving,"BARNES T., MOSTAFAVI B., EAGLE M. J., Data-driven domain models for problem solving, Design Recommendations for Intelligent Tutoring Systems, 4, pp. 137-145, (2016)",Exclude,""
keyword-guided abstractive code summarization via incorporating structural and contextual information,"Cheng W., Hu P., Wei S., Mo R., Keyword-guided abstractive code summarization via incorporating structural and contextual information, Inf. Softw. Technol., 150, (2022)",Include,Exclude
clocom: mining existing source code for automatic comment generation,"Wong E., Liu T., Tan L., CloCom: Mining existing source code for automatic comment generation, 2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering (SANER), pp. 380-389, (2015)",Exclude,""
infercode: self-supervised learning of code representations by predicting subtrees,"Bui N.D.Q., Yu Y., Jiang L., InferCode: Self-Supervised Learning of Code Representations by Predicting Subtrees, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)., pp. 1186-1197, (2021)",Include,Include
learning sequential and structural information for source code summarization,"Choi Y.S., Bak J.Y., Na C.W., Lee J.H., Learning sequential and structural information for source code summarization, Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021, pp. 2842-2851, (2021)",Include,Include
fret: functional reinforced transformer with bert for code summarization,"Wang R., Zhang H., Lu G., Lyu L., Lyu C., Fret: Functional reinforced transformer with bert for code summarization, Ieee Access, 8, pp. 135591-135604, (2020)",Exclude,""
program synthesis for character level language modelling,"Bielik P., Raychev V., Vechev M., Program synthesis for character level language modelling, International conference on learning representations, (2017)",Exclude,""
a survey of automatic generation of source code comments: algorithms and techniques,"Song X., Sun H., Wang X., Yan J., A survey of automatic generation of source code comments: Algorithms and techniques, IEEE Access, 7, pp. 111411-111428, (2019)",Exclude,""
on the sentence embeddings from pre-trained language models,"Bohan L., Hao Z., Junxian H., Mingxuan W., Yiming Y., Lei L., On the sentence embeddings from pre-trained language models, Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing, pp. 9119-9130, (2020)",Exclude,""
on automatically generating commit messages via summarization of source code changes,"Fernando Cortes-Coy L., Linares-Vasquez M., Aponte J., Poshyvanyk D., On automatically generating commit messages via summarization of source code changes, 2014 IEEE 14th International Working Conference on Source Code Analysis and Manipulation. IEEE, pp. 275-284, (2014)",Exclude,""
syncobert: syntax-guided multi-modal contrastive pre-training for code representation,"Wang X., Wang Y., Mi F., Zhou P., Wan Y., Liu X., Li L., Wu H., Liu J., Jiang X., Syncobert: Syntax-guided multi-modal contrastive pre-training for code representation, (2021)",Include,Exclude (Pre-print)
cotext: multi-task learning with code-text transformer,"Phan L., Tran H., Le D., Nguyen H., Annibal J., Peltekian A., Et al., CoTexT: Multi-task learning with code-text transformer, Proceedings of the 1st workshop on natural language processing for programming, pp. 40-47, (2021)",Exclude,""
mudablue: an automatic categorization system for open source repositories,"Kawaguchi S., Garg P.K., Matsushita M., Inoue K., MUDABlue: An automatic categorization system for open source repositories, J. Syst. Softw., 79, 7, pp. 939-953, (2006)",Exclude,""
language models are unsupervised multitask learners,"Radford Alec, Wu Jeffrey, Child Rewon, Luan David, Amodei Dario, Sutskever Ilya, Language models are unsupervised multitask learners, OpenAI Blog, 1, 8, (2019)",Exclude,""
structural language models of code,"Alon U., Sadaka R., Levy O., Yahav E., Structural language models of code, Proceedings of the Thirty-seventh International Conference on Machine Learning. PMLR, Virtual Event, pp. 245-256, (2020)",Exclude,""
a transformer-based approach for source code summarization,"Ahmad W., Chakraborty S., Ray B., Chang K., A Transformer-based Approach for Source Code Summarization, Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, pp. 4998-5007, (2020)",Exclude,""
mpnet: masked and permuted pre-training for language understanding,"Song K., Tan X., Qin T., Lu J., Liu T., Mpnet: Masked and permuted pre-training for language understanding, Advances in Neural Information Processing Systems, 33, pp. 16857-16867, (2020)",Exclude,""
two decades of statistical language modeling: where do we go from here?,"Rosenfeld R., Two decades of statistical language modeling: Where do we go from here?, Proc. IEEE, 88, 8, pp. 1270-1278, (2000)",Exclude,""
natural language processing (almost) from scratch,"Collobert R., Weston J., Bottou L., Karlen M., Kavukcuoglu K., Kuksa P., Natural language processing (almost) from scratch, Journal of machine learning research, 12, ARTICLE, pp. 2493-2537, (2011)",Exclude,""
assessing the effectiveness of syntactic structure to learn code edit representations,"Qureshi S.A., Mehta S., Bhagwan R., Kumar R., Assessing the effectiveness of syntactic structure to learn code edit representations, (2021)",Include,Exclude (Pre-print)
a mocktail of source code representations,"Vagavolu D., Swarna K. C., Chimalakonda S., A mocktail of source code representations, ASE, (2021)",Include,Include
xlnet: generalized autoregressive pretraining for language understanding,"Yang Zhilin, Dai Zihang, Yang Yiming, Carbonell Jaime, Salakhutdinov Russ R, Le Quoc V, Xlnet: Generalized autoregressive pretraining for language understanding, Advances in neural information processing systems, pp. 5754-5764, (2019)",Exclude,""
integrating tree path in transformer for code representation,"Peng H., Li G., Wang W., Zhao Y., Jin Z., Integrating tree path in transformer for code representation, Thirty-Fifth Conference on Neural Information Processing Systems, (2021)",Include,Include
swin transformer v2: scaling up capacity and resolution,"Liu Z., Hu H., Lin Y., Yao Z., Xie Z., Wei Y., Ning J., Cao Y., Zhang Z., Dong L., Et al., Swin transformer v2: Scaling up capacity and resolution, Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 12009-12019, (2022)",Exclude,""
horn clause queries and generalizations,"Chandra A.K., Harel D., Horn clause queries and generalizations, J. Log. Program, 2, 1, pp. 1-15, (1985)",Exclude,""
m2ts: multi-scale multi-modal approach based on transformer for source code summarization,"Gao Y., Lyu C., M2ts: Multi-scale multi-modal approach based on transformer for source code summarization, Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension, pp. 24-35, (2022)",Include,Include
a primer in bertology: what we know about how bert works,"Rogers A., Kovaleva O., Rumshisky A., A Primer in BERTology: What We Know about How BERT Works, Transactions of the Association for Computational Linguistics, 8, pp. 842-866, (2020)",Exclude,""
reinforcement-learning-guided source code summarization using hierarchical attention,"Wang Wenhua, Zhang Yuqun, Sui Yulei, Wan Yao, Zhao Zhou, Wu Jian, Yu Philip S., Xu Guandong, Reinforcement-learning-guided source code summarization using hierarchical attention, IEEE Trans. Software Eng, 48, 2, pp. 102-119, (2022)",Exclude,""
recommendations for datasets for source code summarization,"LeClair A., McMillan C., Recommendations for datasets for source code summarization, Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, NAACL-HLT 2019, pp. 3931-3937, (2019)",Exclude,""
abstract syntax networks for code generation and semantic parsing,"Rabinovich M., Stern M., Klein D., Abstract Syntax Networks for Code Generation and Semantic Parsing, Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pp. 1139-1149, (2017)",Include,Include
using semantic unification to generate regular expressions from natural language,"Kushman N., Barzilay R., Using semantic unification to generate regular expressions from natural language, Proceedings of the 2013 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pp. 826-836, (2013)",Exclude,""
effective approaches to combining lexical and syntactical information for code summarization,"Zhou Z., Yu H., Fan G., Effective approaches to combining lexical and syntactical information for code summarization, Softw Pract Exp, 50, 12, pp. 2313-2336, (2020)",Include,Include
deep code comment generation,"Hu X., Li G., Xia X., Lo D., Jin Z., Deep code comment generation, 2018 IEEE/ACM 26th International Conference on Program Comprehension (ICPC). IEEE, pp. 200-20010, (2018)",Include,Exclude
generating parameter comments and integrating with method summaries,"Sridhara G., Pollock L., Vijay-Shanker K., Generating parameter comments and integrating with method summaries, Proc. IEEE 19th Int. Conf. Prog. Comprehension, pp. 71-80, (2011)",Exclude,""
a grammar- based structural cnn decoder for code generation,"Sun Z., Zhu Q., Mou L., Xiong Y., Li G., Zhang L., A grammar- based structural CNN decoder for code generation, (2018)",Include,Include
learning to generate comments for api-based code snippets,"Lu Y., Zhao Z., Li G., Jin Z., Learning to generate comments for api-based code snippets, Software Engineering and Methodology for Emerging Domains, pp. 3-14, (2017)",Exclude,""
mining semantic loop idioms,"Allamanis M., Barr E.T., Bird C., Devanbu P., Marron M., Sutton C., Mining semantic loop idioms, IEEE Trans. Softw. Eng., 44, 7, pp. 651-668, (2018)",Exclude,""
pathminer: a library formining of path-based representations of code,"Kovalenko V., Bogomolov E., Bryksin T., Bacchelli A., PathMiner: A library formining of path-based representations of code, 2019 IEEE/ACM16th International Conference on Mining Software Repositories MSR, pp. 13-17, (2019)",Include,Exclude
parsing natural scenes and natural language with recursive neural networks,"Socher R., Lin C.C., Manning C., Ng A.Y., Parsing natural scenes and natural language with recursive neural networks, Proceedings of the 28th International Conference on Machine Learning (ICML'11)., pp. 129-136, (2011)",Exclude,""
an enhanced deep learning based framework for web attacks detection,"Shahid W.B., Aslam B., Abbas H., Khalid S.B., Afzal H., An Enhanced Deep Learning Based Framework For Web Attacks Detection, Mitigation And Attacker Profiling, Journal of Network and Computer Applications, 198, 2022",Exclude,""
malicescript: a novel browser-based intranet threat,"Liu G., Cui X., Wang Z., Wang X., Fang Y., Li X., Malicescript: A novel browser-based intranet threat, In Proceedings of the 2018 IEEE 3rd International Conference on Data Science in Cyberspace–DSC, Guangzhou, China, 18-21 June, pp. 219-226, (2018)",Exclude,""
gnn-based android malware detection with jumping knowledge,"Lo W.W., Layeghy S., Sarhan M., Gallagher M., Portmann M., GNN-based Android Malware Detection with Jumping Knowledge, (2022)",Include,Include
can we trust your explanations? sanity checks for interpreters in android malware analysis,"Fan M., Wei W., Xie X., Liu Y., Guan X., Liu T., Can we trust your explanations? sanity checks for interpreters in android malware analysis, IEEE Transactions on Information Forensics and Security (TIFS), 16, pp. 838-853, (2020)",Exclude,""
dexhunter: toward extracting hidden code from packed android applications,"Zhang Y., Luo X., Yin H., Dexhunter: Toward extracting hidden code from packed android applications, European Symposium on Research in Computer Security, (2015)",Exclude,""
why an android app is classified as malware? towards malware classification interpretation,"Wu B., Chen S., Gao C., Fan L., Liu Y., Wen W., Lyu M., Why an android app is classified as malware? towards malware classification interpretation, (2020)",Exclude,""
cyber: enhancing robustness of android malware detection system against adversarial attacks on heterogeneous graph based model,"Hou S., Fan Y., Zhang Y., Ye Y., Lei J., Wan W., Wang J., Xiong Q., Shao F., cyber: Enhancing robustness of android malware detection system against adversarial attacks on heterogeneous graph based model, CIKM, (2019)",Include,Include
amalnet: a deep learning framework based on graph convolutional networks for malware detection,"Pei X., Yu L., Tian S., AMalnet: A deep learning framework based on graph convolutional networks for malware detection, Comput. Secur., 93, (2020)",Include,Include
leveraging ontologies and machine-learning techniques for malware analysis into android permissions ecosystems,"Navarro L.C., Navarro A.K., Gregio A., Rocha A., Dahab R., Leveraging ontologies and machine-learning techniques for malware analysis into android permissions ecosystems, Computers & Security, 78, pp. 429-453, (2018)",Exclude,""
statistical deobfuscation of android applications,"Bichsel B., Raychev V., Tsankov P., Vechev M., Statistical Deobfuscation of Android Applications, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, (2016)",Exclude,""
hindroid: an intelligent android malware detection system based on structured heterogeneous information network,"Hou S., Ye Y., Song Y., Abdulhayoglu M., Hindroid: An intelligent android malware detection system based on structured heterogeneous information network, KDD, (2017)",Include,Include
android hiv: a study of repackaging malware for evading machine-learning detection,"Chen X., Et al., Android hiv: A study of repackaging malware for evading machine-learning detection, Ieee Trans. Inf. Forensics Secur., 15, 2020, pp. 987-1001",Exclude,""
on the impact of sample duplication in machine-learning-based android malware detection,"Zhao Y., Li L., Wang H., Et al., On the impact of sample duplication in machine-learning-based android malware detection, ACM Trans Softw Eng Methodol, 30, 3, pp. 40:1-40:38, (2021)",Exclude,""
lemna: explaining deep learning based security applications,"Guo W., Mu D., Xu J., Su P., Wang G., Xing X., Lemna: Explaining deep learning based security applications, proceedings of the 2018 ACM SIGSAC conference on computer and communications security, pp. 364-379, (2018)",Exclude,""
a machine learning approach to android malware detection,"Sahs J., Khan L., A machine learning approach to android malware detection, EISIC, pp. 141-147, (2012)",Exclude,""
digital investigation of pdf files: unveiling traces of embedded malware,"Maiorca D., Biggio B., Digital investigation of pdf files: Unveiling traces of embedded malware, IEEE Security & Privacy, 17, 1, pp. 63-71, (2019)",Exclude,""
droid-sec: deep learning in android malware detection,"Yuan Z., Lu Y., Wang Z., Xue Y., Droid-sec: deep learning in android malware detection, ACM SIGCOMM 2014 Conference, SIGCOMM’14, Chicago, IL, USA, August 17-22, 2014, pp. 371-372, (2014)",Include,Exclude
deeprefiner: multi-layer android malware detection system applying deep neural networks,"Xu K., Li Y., Deng R.H., Chen K., Deeprefiner: Multi-layer android malware detection system applying deep neural networks, 2018 IEEE European Symposium on Security and Privacy, EuroS&P 2018, London, United Kingdom, April 24-26, 2018, pp. 473-487, (2018)",Include,Exclude
deep learning-based traffic safety solution for a mixture of autonomous and manual vehicles in a 5g-enabled intelligent transportation system,"Yu K., Lin L., Alazab M., Tan L., Gu B., Deep learning-based traffic safety solution for a mixture of autonomous and manual vehicles in a 5g-enabled intelligent transportation system, IEEE Transactions on Intelligent Transportation Systems, 22, 7, pp. 4337-4347, (2021)",Exclude,""
droidsieve: fast and accurate classification of obfuscated android malware,"Suarez-Tangil G., Dash S.K., Ahmadi M., Kinder J., Giacinto G., Cavallaro L., Droidsieve: Fast and accurate classification of obfuscated android malware, Proceedings of the Seventh ACM on Conference on Data and Application Security and Privacy, pp. 309-320, (2017)",Exclude,""
deepcpdp: deep learning based cross-project defect prediction,"Chen D., Chen X., Li H., Xie J., Mu Y., Deepcpdp: Deep learning based cross-project defect prediction, Ieee Access, 7, pp. 184832-184848, (2019)",Include,Include
deployment of a change-level software defect prediction solution into an industrial setting,"Eken B., Tufan S., Tunaboylu A., Guler T., Atar R., Tosun A., Deployment of a change-level software defect prediction solution into an industrial setting, J. Softw.: Evol. Process, (2021)",Exclude,""
gcn2defect: graph convolutional networks for smotetomek-based software defect prediction,"Zeng C., Zhou C.Y., Lv S.K., He P., Huang J., GCN2defect: Graph Convolutional Networks for SMOTETomek-based Software Defect Prediction, pp. 69-79, (2021)",Include,Include
"towards security defect prediction with ai""","Sestili C.D., Snavely W.S., VanHoudnos N.M., Towards Security Defect Prediction With AI""",Exclude,""
softrec: multi-relationship fused software developer recommendation,"Xie X., Wang B., Yang X., SoftRec: Multi-relationship fused software developer recommendation, Appl. Sci., 10, 12, (2020)",Exclude,""
st-tlf: cross-version defect prediction framework based transfer learning,"Zhao Y., Wang Y., Zhang Y., Zhang D., Gong Y., Jin D., ST-TLF: Cross-version defect prediction framework based transfer learning, Inf. Softw. Technol., 149, (2022)",Exclude,""
an hvsm-based gru approach to predict cross-version software defects,"Bai X., Zhou H., Yang H., An hvsm-based gru approach to predict cross-version software defects, Int. J. Performability Eng, 16, 6, pp. 979-990, (2020)",Exclude,""
cross-project defect prediction using a connectivity-based unsupervised classifier,"Zhang F., Zheng Q., Zou Y., Hassan A.E., Cross-project defect prediction using a connectivity-based unsupervised classifier, Proceedings of the 38th International Conference on Software Engineering, ICSE 2016, Austin, TX, USA, May 14-22, 2016, pp. 309-320, (2016)",Include,Include
can traditional fault prediction models be used for vulnerability prediction?,"Shin Y., Williams L., Can traditional fault prediction models be used for vulnerability prediction?, Empir. Softw. Eng., 18, 1, pp. 25-59, (2013)",Exclude,""
a general software defect-proneness prediction framework,"Song Q., Jia Z., Shepperd M., Ying S., Liu J., A general software defect-proneness prediction framework, IEEE Trans. Softw. Eng., 37, 3, pp. 356-370, (2010)",Exclude,""
the use of summation to aggregate software metrics hinders the performance of defect prediction models,"Zhang F., Hassan A.E., McIntosh S., Zou Y., The use of summation to aggregate software metrics hinders the performance of defect prediction models, IEEE Transactions On Software Engineering, (2016)",Exclude,""
on the use of design defect examples to detect model refactoring opportunities,"Ghannem A., El Boussaidi G., Kessentini M., On the use of design defect examples to detect model refactoring opportunities, Software Quality Journal, 24, 4, pp. 947-965, (2016)",Exclude,""
simplified deep forest model based just-in-time defect prediction for android mobile apps,"Zhao K., Xu Z., Zhang T., Tang Y., Yan M., Simplified deep forest model based just-in-time defect prediction for android mobile apps, IEEE Trans. Reliab., 70, 2, pp. 848-859, (2021)",Exclude,""
cost-sensitive transfer kernel canonical correlation analysis for heterogeneous defect prediction,"Li Z., Jing X.Y., Wu F., Et al., Cost-sensitive transfer kernel canonical correlation analysis for heterogeneous defect prediction, Autom. Softw. Eng., 25, 2, pp. 201-245, (2018)",Exclude,""
is newer always better? the case of vulnerability prediction models,"Hovsepyan A., Scandariato R., Joosen W., Is Newer Always Better? the Case of Vulnerability Prediction Models, Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement., pp. 1-6, (2016)",Exclude,""
deep learning for justin-time defect prediction,"Yang X., Lo D., Xia X., Zhang Y., Sun J., Deep learning for justin-time defect prediction, Software Quality, Reliability and Security (QRS), 2015 IEEE International Conference On. IEEE, pp. 17-26, (2015)",Include,Exclude
predicting vulnerable software components,"Neuhaus S., Zimmermann T., Holler C., Zeller A., Predicting vulnerable software components, Proceedings Ofthe 14th ACM Conference on Computer and Comnumications Security (CCS'07)., pp. 529-540, (2007)",Exclude,""
revisiting supervised and unsupervised models for effort-aware just-in-time defect prediction,"Huang Q., Xia X., Lo D., Revisiting supervised and unsupervised models for effort-aware just-in-time defect prediction, Empir. Softw. Eng., 24, 5, pp. 2823-2862, (2019)",Exclude,""
a github-based data collection method for software defect prediction,"Xu J., Yan L., Wang F., Ai J., A github-based data collection method for software defect prediction, The 6th Ieee International Conference on Dependable Systems and Their Applications (DSA), pp. 100-108, (2020)",Exclude,""
an empirical study of just-in-time defect prediction using cross-project models,"Fukushima T., Kamei Y., McIntosh S., Yamashita K., Ubayashi N., An empirical study of just-in-time defect prediction using cross-project models, pp. 172-181, (2014)",Exclude,""
ldfr: learning deep feature representation for software defect prediction,"Xu Z., Li S., Xu J., Liu J., Luo X., Zhang Y., Zhang T., Keung J., Tang Y., LDFR: learning deep feature representation for software defect prediction, J Sys Soft, 158, (2019)",Include,Include
software visualization and deep transfer learning for effective software defect prediction,"Chen J., Hu K., Yu Y., Chen Z., Xuan Q., Liu Y., Filkov V., Software visualization and deep transfer learning for effective software defect prediction, Proceedings of the ACM/IEEE 42nd international conference on software engineering, pp. 578-589, (2020)",Include,Exclude
automatic feature learning for predicting vulnerable software components,"Dam H.K., Tran T., Pham T.T.M., Ng S.W., Grundy J., Ghose A., Automatic feature learning for predicting vulnerable software components, Ieee Trans. Softw. Eng, 99, (2018)",Include,Exclude
software defect data mining: a survey of severity analysis,"Liu W., Software defect data mining: a survey of severity analysis, J Softw, 14, 10, pp. 457-478, (2019)",Exclude,""
revisiting the impact of classification techniques on the performance of defect prediction models,"Ghotra B., McIntosh S., Hassan A.E., Revisiting the impact of classification techniques on the performance of defect prediction models, 1, pp. 789-800, (2015)",Exclude,""
survey of static software defect prediction[j],"Chen X., Gu Q., Liu W.S., Liu S.L., Ni C., Survey of static software defect prediction[J], Ruan Jian Xue Bao/Journal of Software, 27, 1, pp. 1-25, (2016)",Exclude,""
software defect prediction via convolutional neural network,"Li J., He P., Zhu J., Lyu M.R., Software defect prediction via convolutional neural network, 2017 IEEE International Conference on Software Quality, Reliability and Security (QRS), pp. 318-328, (2017)",Include,Include
transfer defect learning[c],"Nam J., Pan S.J., Kim S., Transfer defect learning[C], International Conference on Software Engineering, pp. 382-391, (2013)",Exclude,""
deeplinedp: towards a deep learning approach for line-level defect prediction,"Pornprasit C., Tantithamthavorn C., DeepLineDP: Towards a Deep Learning Approach for Line-Level Defect Prediction, IEEE Transactions on Software Engineering, 1, (2022)",Include,Include
software framework for topic modelling with large corpora,"Rehurek R., Sojka P., Software framework for topic modelling with large corpora, Proceedings of the LREC 2010 Workshop on New Challenges for NLP Frameworks, pp. 45-50, (2010)",Exclude,""
defect prediction with semantics and context features of codes based on graph representation learning,"Xu J., Wang F., Ai J., Defect prediction with semantics and context features of codes based on graph representation learning, Ieee Trans. Reliab, pp. 1-13, (2020)",Include,Include
ridge and lasso regression models for cross-version defect prediction,"Yang X., Wen W., Ridge and Lasso regression models for cross-version defect prediction, IEEE Trans on Reliab, 67, 3, pp. 885-896, (2018)",Exclude,""
linevul: a transformer-based line-level vulnerability prediction,"Fu M., Tantithamthavorn C., LineVul: A transformer-based line-level vulnerability prediction, Proceedings - 2022 mining software repositories conference, pp. 608-620, (2022)",Exclude,""
software defect prediction based on kernel pca and weighted extreme learning machine,"Xu Z., Liu J., Luo X., Yang Z., Zhang Y., Yuan P., Tang Y., Zhang T., Software defect prediction based on kernel PCA and weighted extreme learning machine, Inf. Softw. Technol., 106, pp. 182-200, (2019)",Exclude,""
challenges with applying vulnerability prediction models,"Morrison P., Herzig K., Murphy B., Williams L., Challenges with applying vulnerability prediction models, Proceedings of the 2015 Symposium and Bootcamp on the Science Of Security, HotSoS ’15, pp. 1-9, (2015)",Exclude,""
masked label prediction: unifed message passing model for semi supervised classifcation,"Shi Y., Huang Z., Feng S., Zhong H., Wang W., Sun Y., Masked Label Prediction: Unifed Message Passing Model For Semi Supervised Classifcation, (2020)",Exclude,""
software defect prediction[j],"Wang Q., Wu S.J., Li M.S., Software defect prediction[J], Ruan Jian Xue Bao/Journal of Software, 19, 7, pp. 1565-1580, (2008)",Include,""
change bursts as defect predictors,"Nagappan N., Zeller A., Zimmermann T., Herzig K., Murphy B., Change bursts as defect predictors, Software Reliability Engineering (ISSRE), 2010 IEEE 21st International Symposium On. IEEE, pp. 309-318, (2010)",Include,""
pyexplainer: explaining the predictions of just-in-time defect models,"Pornprasit C., Tantithamthavorn C., Jiarpakdee J., Fu M., Thongtanunam P., Pyexplainer: Explaining the predictions of just-in-time defect models, ASE, pp. 407-418, (2021)",Exclude,""
software defect prediction based on correlation weighted class association rule mining,"Shao Y., Liu B., Wang S., Li G., Software defect prediction based on correlation weighted class association rule mining, Knowl Based Syst, 196, (2020)",Exclude,""
a comprehensive comparative study of clustering-based unsupervised defect prediction models,"Xu Z., Li L., Yan M., Liu J., Luo X., Grundy J., Zhang Y., Zhang X., A comprehensive comparative study of clustering-based unsupervised defect prediction models, J. Syst. Softw., 172, (2021)",Include,Exclude
a model based on program slice and deep learning for software defect prediction,"Tian J., Tian Y., A model based on program slice and deep learning for software defect prediction, Proc.-Int. Conf. Comput. Commun. Networks, Icccn, pp. 2-7, (2020)",Include,Include
a compositional model for effort-aware just-in-time defect prediction on android apps,"Zhao K., Xu Z., Yan M., Xue L., Li W., Catolino G., A compositional model for effort-aware Just-In-Time defect prediction on android apps, IET Softw., 16, 3, pp. 259-278, (2022)",Exclude,""
an abstract syntax tree encoding method for cross-project defect prediction,"Cai Z., Lu L., Qiu S., An abstract syntax tree encoding method for cross-project defect prediction, Ieee Access, 7, pp. 170844-170853, (2019)",Include,Include
neural network approach for software defect prediction based on quantitative and qualitative factors,"Sandhu P., Lata S., Grewal D.K., Neural Network Approach for Software Defect Prediction Based on Quantitative and Qualitative Factors, International Journal of Computer Theory and Engineering, pp. 298-303, (2012)",Include,Exclude
defect prediction based on the characteristics of multilayer structure of software network,"Yang Y., Ai J., Wang F., Defect prediction based on the characteristics of multilayer structure of software network, 2018 Ieee International Conference on Software Quality, Reliability and Security Companion (QRS-C), pp. 27-34, (2018)",Include,Include
defect prediction from static code features: current results,"Menzies T., Milton Z., Turhan B., Cukic B., Jiang Y., Bener A.B., Defect prediction from static code features: current results, limitations, new approaches, Autom. Softw. Eng., 17, 4, pp. 375-407, (2010)",Exclude,""
heterogeneous defect prediction with two-stage ensemble learning,"Li Z., Jing X., Zhu X., Zhang H., Xu B., Ying S., Heterogeneous Defect Prediction with Two-Stage Ensemble Learning, Automated Software Engg, 26, 3, pp. 599-651, (2019)",Include,Exclude
evaluating defect prediction approaches using a massive set of metrics: an empirical study,"Xuan X., Lo D., Xia X., Tian Y., Evaluating defect prediction approaches using a massive set of metrics: An empirical study, Proc. 30th Annu. ACM Symp. Appl. Comput., pp. 1644-1647, (2015)",Exclude,""
bcv-predictor: a bug count vector predictor of a successive version of the software system,"Pandey S.K., Tripathi A.K., BCV-predictor: A bug count vector predictor of a successive version of the software system, Knowl.-Based Syst., 197, (2020)",Exclude,""
connecting software metrics across versions to predict defects,"Liu Y., Li Y., Guo J., Zhou Y., Xu B., Connecting software metrics across versions to predict defects, 2018 IEEE 25th International Conference on Software Analysis, Evolution and Reengineering (SANER), pp. 232-243, (2018)",Exclude,""
learning to forget: continual prediction with lstm,"Gers F., Schmidhuber J., Cummins F., Learning to forget: Continual prediction with LSTM, Neural Comput., 12, pp. 2451-2471, (2000)",Exclude,""
a comparative study of iterative and non-iterative feature selection techniques for software defect prediction,"Khoshgoftaar T.M., Gao K., Napolitano A., Wald R., A comparative study of iterative and non-iterative feature selection techniques for software defect prediction, Inf. Syst. Front, 16, 5, pp. 801-822, (2014)",Exclude,""
automatically identifying code features for software defect prediction: using ast n-grams,"Shippey T., Bowes D., Hall T., Automatically identifying code features for software defect prediction: Using AST N-grams, Inf. Softw. Technol., 106, pp. 142-160, (2019)",Include,Include
building effective defect-prediction models in practice,"Koru A.G., Liu H., Building effective defect-prediction models in practice, IEEE Softw., 22, 6, pp. 23-29, (2005)",Exclude,""
combining software metrics and text features for vulnerable file prediction,"Zhang Y., Lo D., Xia X., Xu B., Sun J., Li S., Combining software metrics and text features for vulnerable file prediction, 2015 20th International Conference On Engineering Of Complex Computer Systems, ICECCS, pp. 40-49, (2015)",Exclude,""
deepjit: an end-to-end deep learning framework for just-in-time defect prediction,"Hoang T., Dam H.K., Kamei Y., Lo D., Ubayashi N., Deepjit: An end-to-end deep learning framework for just-in-time defect prediction, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR). IEEE, pp. 34-45, (2019)",Exclude,""
predicting issue types on github,"Kallis R., Di Sorbo A., Canfora G., Panichella S., Predicting issue types on GitHub, Science of Computer Programming, 205, (2021)",Exclude,""
predicting vulnerable software components through n-gram analysis and statistical feature selection,"Pang Y., Xue X., Namin A., Predicting vulnerable software components through n-gram analysis and statistical feature selection, 2015 IEEE 14th International Conference on Machine Learning and Applications (ICMLA), pp. 543-548, (2015)",Exclude,""
which process metrics can significantly improve defect prediction models? an empirical study,"Madeyski L., Jureczko M., Which process metrics can significantly improve defect prediction models? An empirical study, Softw. Qual. J., 23, 3, pp. 393-422, (2014)",Exclude,""
dealing with noise in defect prediction,"Kim S., Zhang H., Wu R., Gong L., Dealing with noise in defect prediction, Software Engineering (ICSE), 2011 33rd International Conference On, pp. 481-490, (2011)",Exclude,""
predicting vulnerable software components via text mining,"Scandariato R., Walden J., Hovsepyan A., Joosen W., Predicting vulnerable software components via text mining, Ieee Trans. Softw. Eng., 40, 10, pp. 993-1006, (2014)",Exclude,""
automated defect identification via path analysis-based features with transfer learning,"Zhang Y., Jin D., Xing Y., Gong Y., Automated defect identification via path analysis-based features with transfer learning, The Journal of Systems & Software, 166, (2020)",Include,Include
software defect prediction using semisupervised learning with change burst information,"He Q., Shen B., Chen Y., Software defect prediction using semisupervised learning with change burst information, Proc. IEEE 40th Annu. Comput. Softw. Appl. Conf. (COMPSAC), pp. 113-122, (2016)",Exclude,""
detecting argument selection defects,"Rice A., Aftandilian E., Jaspan C., Johnston E., Pradel M., Arroyo-Paredes Y., Detecting argument selection defects, Proceedings of the ACM on Programming Languages, 1, OOPSLA, (2017)",Exclude,""
predicting vulnerable components: software metrics vs text mining,"Walden J., Stuckman J., Scandariato R., Predicting vulnerable components: Software metrics vs text mining, 2014 IEEE 25th International Symposium On Software Reliability Engineering, pp. 23-33, (2014)",Exclude,""
clami: defect prediction on unlabeled datasets (t),"Nam J., Kim S., CLAMI: Defect prediction on unlabeled datasets (T), 30th IEEE/ACM International Conference on Automated Software Engineering, ASE 2015, Lincoln, NE, USA, November 9-13, 2015, pp. 452-463, (2015)",Exclude,""
heterogeneous defect prediction,"",Exclude,""
absolute correlation weighted naïve bayes for software defect prediction,"Asmono R.T., Wahono R.S., Syukur A., Absolute correlation weighted naïve Bayes for software defect prediction, J. Softw. Eng., 1, 1, pp. 38-45, (2015)",Exclude,""
do too many cooks spoil the broth? using the number of developers to enhance defect prediction models,"Weyuker E.J., Ostrand T.J., Bell R.M., Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models, Empir. Softw. Eng, 13, 5, pp. 539-559, (2008)",Exclude,""
an approach to semantic and structural features learning for software defect prediction,"Meilong S., He P., Xiao H., Li H., Zeng C., An approach to semantic and structural features learning for software defect prediction, Math. Problems Eng., 2020, (2020)",Include,Include
on the need of preserving order of data when validating withinproject defect classifiers,"Falessi D., Huang J., Narayana L., Fong Thai J., Turhan B., On the need of preserving order of data when validating withinproject defect classifiers, Empirical Software Engineering, 25, 6, pp. 4805-4830, (2020)",Exclude,""
an empirical study on software defect prediction with a simplified metric set,"He P., Li B., Liu X., Chen J., Ma Y., An empirical study on software defect prediction with a simplified metric set, Inf. Softw. Technol., 59, pp. 170-190, (2015)",Exclude,""
software defect prediction using semi-supervised learning with dimension reduction,"Lu H., Cukic B., Culp M., Software defect prediction using semi-supervised learning with dimension reduction, Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering, pp. 314-317, (2012)",Exclude,""
predicting defects using change genealogies,"Herzig K., Just S., Rau A., Zeller A., Predicting defects using change genealogies, Software Reliability Engineering (ISSRE), 2013 IEEE 24th International Symposium On. IEEE, pp. 118-127, (2013)",Exclude,""
a deep tree-based model for software defect prediction,"Dam H.K., Pham T., Ng S.W., Tran T., Grundy J., Ghose A., Kim T., Kim C., A deep tree-based model for software defect prediction, CoRR, (2018)",Include,Exclude (Pre-print)
an ensemble oversampling model for class imbalance problem in software defect prediction,"Huda S., Et al., An ensemble oversampling model for class imbalance problem in software defect prediction, Ieee Access, 6, pp. 24184-24195, (2018)",Exclude,""
doubigru-a: software defect detection algorithm based on attention mechanism and double bigru,"Zhao J., Guo S., Mu D., DouBiGRU-A: software defect detection algorithm based on attention mechanism and double BiGRU, Comput. Secur., 111, (2021)",Exclude,""
software defect prediction based on gated hierarchical lstms,"Wang H., Zhuang W., Zhang X., Software Defect Prediction Based on Gated Hierarchical LSTMs, IEEE Transactions on Reliability, 70, 2, pp. 711-727, (2021)",Include,Include
a comparative study to benchmark cross-project defect prediction approaches,"Herbold S., Trautsch A., Grabowski J., A comparative study to benchmark cross-project defect prediction approaches, IEEE Trans. Softw. Eng., 44, 9, pp. 811-833, (2017)",Exclude,""
predicting defect-prone software modules using support vector machines,"Elish K.O., Elish M.O., Predicting defect-prone software modules using support vector machines, J. Syst. Softw., 81, 5, pp. 649-660, (2008)",Exclude,""
using software dependency to bug prediction,"He P., Li B., Ma Y., He L., Using software dependency to bug prediction, Math. Problems Eng., 2013, (2013)",Include,Exclude
a tutorial on conformal prediction,"Rhafer G., Vovk V., A tutorial on conformal prediction, J. Mach. Learn. Res, 9, pp. 371-421, (2008)",Exclude,""
predicting unstable software benchmarks using static source code features,"Laaber C., Basmaci M., Salza P., Predicting unstable software benchmarks using static source code features, EMSE, 26, 6, (2021)",Exclude,""
software defect prediction: do different classifiers find the same defects?,"Bowes D., Hall T., Petri J., Software defect prediction: Do different classifiers find the same defects?, Softw. Qual. J., 26, 2, pp. 525-552, (2018)",Exclude,""
data mining static code attributes to learn defect predictors,"Menzies T., Greenwald J., Frank A., Data mining static code attributes to learn defect predictors, IEEE Trans. Softw. Eng., 33, 1, pp. 2-13, (2007)",Exclude,""
why should i trust you? explaining the predictions of any classifier,"Tulio Ribeiro M., Singh S., Guestrin C., Why should i trust you? Explaining the predictions of any classifier, Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 1135-1144, (2016)",Exclude,""
using class imbalance learning for software defect prediction,"Wang S., Yao X., Using class imbalance learning for software defect prediction, Ieee Trans. Reliab, 62, 2, pp. 434-443, (2013)",Exclude,""
code churn: a neglected metric in effort-aware just-in-time defect prediction,"Liu J., Zhou Y., Yang Y., Lu H., Xu B., Code Churn: A Neglected Metric in Effort-aware Just-in-time Defect Prediction, pp. 11-19",Exclude,""
software defect prediction via transformer,"Zhang Q., Wu B., Software defect prediction via transformer, Proc. IEEE 4th Inf. Technol., Netw., Electron. Autom. Control Conf. (ITNEC), pp. 874-879, (2020)",Exclude,""
towards building a universal defect prediction model,"Zhang F., Mockus A., Keivanloo I., Zou Y., Towards building a universal defect prediction model, Proceedings of the 11th Working Conference On Mining Software Repositories, pp. 182-191, (2014)",Exclude,""
a large-scale study of the impact of feature selection techniques on defect classification models,"Ghotra B., McIntosh S., Hassan A.E., A large-scale study of the impact of feature selection techniques on defect classification models, Proc. of the International Conference On Mining Software Repositories (MSR), (2017)",Exclude,""
using developer information as a factor for fault prediction,"Weyuker E.J., Ostrand T.J., Bell R.M., Using developer information as a factor for fault prediction, Proceedings of the Third International Workshop On Predictor Models in Software Engineering, (2007)",Exclude,""
an empirical study of learning to rank techniques for effort-aware defect prediction,"Yu X., Bennin K.E., Liu J., Keung J.W., Yin X., Xu Z., An empirical study of learning to rank techniques for effort-aware defect prediction, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering, SANER, pp. 298-309, (2019)",Exclude,""
micro interaction metrics for defect prediction,"Lee T., Nam J., Han D., Kim S., Peter I.H., Micro interaction metrics for defect prediction, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, pp. 311-321, (2011)",Exclude,""
deep semantic feature learning with embedded static metrics for software defect prediction,"Fan G., Diao X., Yu H., Yang K., Chen L., Deep Semantic Feature Learning with Embedded Static Metrics for Software Defect Prediction, 2019 26th Asia-Pacific Software Engineering Conference (APSEC), pp. 244-251, (2019)",Exclude,""
learning from open-source projects: an empirical study on defect prediction,"He Z., Peters F., Menzies T., Yang Y., Learning from open-source projects: An empirical study on defect prediction, 2013 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, pp. 45-54, (2013)",Exclude,""
towards identifying software project clusters with regard to defect prediction,"Jureczko M., Madeyski L., Towards identifying software project clusters with regard to defect prediction, Proc. 6th Int. Conf. Predictive Models Softw. Eng., pp. 1-10, (2010)",Include,Exclude
revisiting unsupervised learning for defect prediction,"Fu W., Menzies T., Revisiting unsupervised learning for defect prediction, Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2017, pp. 72-83, (2017)",Exclude,""
cross-project defect prediction using a credibility theory based naive bayes classifier,"Poon W.N., Bennin K.E., Huang J., Phannachitta P., Keung J.W., Cross-project defect prediction using a credibility theory based naive Bayes classifier, Proc. Ieee Int. Conf. Softw. Quality, Rel. Secur., pp. 434-441, (2017)",Exclude,""
software defect prediction using bayesian networks,"Okutan A., Yldz O.T., Software defect prediction using Bayesian networks, Empirical Softw. Eng., 19, 1, pp. 154-181, (2014)",Exclude,""
predicting vulnerable software components with dependency graphs,"Nguyen V. H., Tran L. M. S., Predicting vulnerable software components with dependency graphs, Proceedings of the 6th International Workshop on Security Measurements and Metrics, ser. MetriSec'10, pp. 31-38, (2010)",Include,Include
an empirical comparison of model validation techniques for defect prediction models,"Tantithamthavorn C., McIntosh S., Hassan A.E., Matsumoto K., An empirical comparison of model validation techniques for defect prediction models, IEEE Trans. Softw. Eng., 43, 1, pp. 1-18, (2016)",Exclude,""
towards overfitting avoidance: tuning-free tensor-aided multi-user channel estimation for 3d massive mimo communications,"Cheng L., Shi Q., Towards overfitting avoidance: Tuning-free tensor-aided multi-user channel estimation for 3D massive MIMO communications, IEEE J. Sel. Top. Sig. Process., 15, 3, pp. 832-846, (2021)",Exclude,""
which process metrics are significantly important to change of defects in evolving projects: an empirical study,"Jiang L., Jiang S., Gong L., Dong Y., Yu Q., Which process metrics are significantly important to change of defects in evolving projects: An empirical study, IEEE Access, 8, pp. 93705-93722, (2020)",Exclude,""
an empirical study on the effectiveness of data resampling approaches for cross-project software defect prediction,"Bennin K.E., Tahir A., MacDonell S.G., Borstler J., An empirical study on the effectiveness of data resampling approaches for cross-project software defect prediction, IET Softw., 16, 2, pp. 185-199, (2022)",Exclude,""
feature selection with imbalanced data for software defect prediction,"Khoshgoftaar T.M., Gao K., Feature selection with imbalanced data for software defect prediction, Proc. Int. Conf. Mach. Learn. Appl., pp. 235-240, (2009)",Exclude,""
defect prediction between software versions with active learning and dimensionality reduction,"Lu H., Kocaguneli E., Cukic B., Defect prediction between software versions with active learning and dimensionality reduction, pp. 312-322, (2014)",Exclude,""
prediction of defect severity by mining software project reports[j],"Jindal R., Malhotra R., Jain A., Prediction of defect severity by mining software project reports[J], Int. J. Syst. Assur. Eng. Manage., 8, 2, pp. 334-351, (2017)",Exclude,""
recent catastrophic accidents: investigating how software was responsible,"Wong W. E., Debroy V., Surampudi A., Kim H., Siok M. F., Recent catastrophic accidents: Investigating how software was responsible, 2010 Fourth International Conference on Secure Software Integration and Reliability Improvement. IEEE, pp. 14-22, (2010)",Exclude,""
improving defect prediction with deep forest,"Zhou T., Sun X., Xia X., Li B., Chen X., Improving defect prediction with deep forest, Inform Soft Tech, 114, pp. 204-216, (2019)",Include,Include
benchmarking classification models for software defect prediction: a proposed framework and novel findings,"Lessmann S., Baesens B., Mues C., Pietsch S., Benchmarking classification models for software defect prediction: a proposed framework and novel findings, IEEE Trans Soft Engin, 34, 4, pp. 485-496, (2008)",Exclude,""
training data selection for cross-project defection prediction: which approach is better?[c],"Bin Y., Zhou K., Lu H., Zhou Y., Xu B., Training data selection for cross-project defection prediction: Which approach is better?[C], Int. Sym. on Emp. Soft. Eng. & Meas, pp. 354-363, (2017)",Exclude,""
cross-project defect prediction: a large scale experiment on data vs. domain vs. process,"Zimmermann T., Nagappan N., Gall H., Giger E., Murphy B., Cross-project defect prediction: a large scale experiment on data vs. domain vs. process, pp. 91-100, (2009)",Exclude,""
a cluster-based hybrid feature selection method for defect prediction,"Wang F., Ai J., Zou Z., A cluster-based hybrid feature selection method for defect prediction, Proceedings-19th Ieee International Conference on Software Quality, Reliability and Security, Qrs 2019, pp. 1-9, (2019)",Include,Exclude
expectations,"Bacchelli A., Bird C., Expectations, outcomes, and challenges of modern code review, 2013 35th International Conference on Software Engineering (ICSE), pp. 712-721, (2013)",Include,""
transfer learning for cross-company software defect prediction,"Maying Y., LuoGuangchun H.T., Zengxue A., ChenAiguo S.V., Transfer learning for cross-company software defect prediction, Inf. Softw. Technol., (2012)",Exclude,""
cross-company defect prediction via semi-supervised clustering-based data filtering and mstra-based transfer learning,"Yu X., Wu M., Jian Y., Bennin K.E., Fu M., Ma C., Cross-company defect prediction via semi-supervised clustering-based data filtering and MSTrA-based transfer learning, Soft Comput., 22, 10, pp. 3461-3472, (2018)",Exclude,""
a feature dependent naive bayes approach and its application to the software defect prediction problem,"Arar O.F., Ayan K., A feature dependent Naive Bayes approach and its application to the software defect prediction problem, Applied Soft Computing, 59, pp. 197-209, (2017)",Exclude,""
investigation on the stability of smote-based oversampling techniques in software defect prediction,"Feng S., Keung J., Yu X., Xiao Y., Zhang M., Investigation on the stability of SMOTE-based oversampling techniques in software defect prediction, Inf. Softw. Technol., 139, (2021)",Exclude,""
node2defect: using network embedding to improve software defect prediction,"Qu Y., Liu T., Chi J., Jin Y., Cui D., He A., Zheng Q., node2defect: Using network embedding to improve software defect prediction, 2018 33rd IEEE/ACM International Conference on Automated Software Engineering, ASE, pp. 844-849, (2018)",Include,Include
svm with feature selection and extraction techniques for defect-prone software module prediction,"Kumar R., Singh K.P., SVM with Feature Selection and Extraction Techniques for Defect-Prone Software Module Prediction, Proceedings of Sixth International Conference on Soft Computing for Problem Solving, pp. 279-289, (2017)",Exclude,""
defect prediction in android binary executables using deep neural network,"Dong F., Wang J., Li Q., Xu G., Zhang S., Defect prediction in android binary executables using deep neural network, Wireless Personal Communications, 102, 3, pp. 2261-2285, (2018)",Exclude,""
improving ranking-oriented defect prediction using a cost-sensitive ranking svm,"Yu X., Liu J., Keung J.W., Li Q., Bennin K.E., Xu Z., Wang J., Cui X., Improving ranking-oriented defect prediction using a cost-sensitive ranking SVM, IEEE Trans. Reliab., 69, 1, pp. 139-153, (2019)",Exclude,""
mahakil: diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction,"Bennin K.E., Keung J., Phannachitta P., Monden A., Mensah S., Mahakil: Diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction, IEEE Trans. Softw. Eng., 44, 6, pp. 534-550, (2017)",Exclude,""
addressing the class imbalance problem in twitter spam detection using ensemble learning,"Liu S., Wang Y., Zhang J., Chen C., Xiang Y., Addressing the class imbalance problem in Twitter spam detection using ensemble learning, Comput. Secur., 69, pp. 35-49, (2017)",Exclude,""
an improved cnn model for withinproject software defect prediction,"Pan C., Lu M., Xu B., Gao H., An improved CNN model for withinproject software defect prediction, Appl. Sci., 9, 10, (2019)",Include,Include
software defect prediction via attention-based recurrent neural network,"Fan G., Diao X., Yu H., Yang K., Chen L., Software defect prediction via attention-based recurrent neural network, Scientific Programming (SP), 2019, (2019)",Exclude,""
identifying critical projects via pagerank and truck factor,"Pfeiffer R., Identifying critical projects via PageRank and truck factor, Proc. 18th IEEE/ACM Int. Conf. Mining Softw. Repositories, pp. 41-45, (2021)",Exclude,""
software defect prediction using static code metrics underestimates defectproneness,"Gray D., Bowes D., Davey N., Sun Y., Christianson B., Software defect prediction using static code metrics underestimates defectproneness, Proc. Int. Joint Conf. Neural Netw. (IJCNN), pp. 1-7, (2010)",Exclude,""
class imbalances versus small disjuncts,"Jo T., Japkowicz N., Class imbalances versus small disjuncts, Acm Sigkdd Explor. Newslett., 6, 1, pp. 40-49, (2004)",Exclude,""
seml: a semantic lstm model for software defect prediction,"Liang H., Yu Y., Jiang L., Xie Z., Seml: A Semantic LSTM Model for Software Defect Prediction, IEEE Access, 7, pp. 83812-83824, (2019)",Exclude,""
a benchmark study on the effectiveness of search-based data selection and feature selection for cross project defect prediction,"Hosseini S., Turhan B., Mantyla M., A benchmark study on the effectiveness of search-based data selection and feature selection for cross project defect prediction, Inf. Softw. Technol, 95, pp. 296-312, (2018)",Exclude,""
predicting defects for eclipse,"Zimmermann T., Premraj R., Zeller A., Predicting defects for eclipse, Proceedings-ICSE 2007 Workshops: Third International Workshop on Predictor Models in Software Engineering, PROMISE'07, (2007)",Exclude,""
what makes a good code example: a study of programming q&a in stackoverflow,"Nasehi S. M., Sillito J., Maurer F., Burns C., What makes a good code example: A study of programming q&a in stackoverflow, Proceedings of the 2012 28th IEEE International Conference on Software Maintenance, pp. 25-34, (2012)",Exclude,""
slither: a static analysis framework for smart contracts,"Feist J., Grieco G., Groce A., Slither: A static analysis framework for smart contracts, IEEE/ACM 2Nd International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB), pp. 8-15, (2019)",Exclude,""
vuldeepecker: a deep learningbased system for vulnerability detection,"Li Z., Zou D., Xu S., Ou X., Jin H., Wang S., Deng Z., Zhong Y., VulDeePecker: A deep learningbased system for vulnerability detection, 25th Annual Network and Distributed System Security Symposium, Ndss 2018, (2018)",Include,Include
a machine learning approach to classify security patches into vulnerability types,"Wang X., Wang S., Sun K., Batcheller A., Jajodia S., A machine learning approach to classify security patches into vulnerability types, 2020 Ieee Conference on Communications and Network Security (CNS), pp. 1-9, (2020)",Exclude,""
vulseeker: a semantic learning based vulnerability seeker for cross-platform binary,"Gao J., Yang X., Fu Y., Jiang Y., Sun J., VulSeeker: A semantic learning based vulnerability seeker for cross-platform binary, 2018 33rd IEEE/ACM International Conference on Automated Software Engineering (ASE), pp. 896-899, (2018)",Exclude,""
"end-to-end prediction of bufer over runs from raw source code via neural memory networks""","Choi M., Jeong S., Oh H., Choo J., End-to-end prediction of bufer over runs from raw source code via neural memory networks""",Include,Exclude (Duplicate)
research and implementation of web application system vulnerability location technology,"Zheng L., Yuan H., Peng X., Zhu G., Guo Y., Deng G., Research and implementation of web application system vulnerability location technology, The International Conference on Cyber Security Intelligence and Analytics, pp. 937-944, (2019)",Exclude,""
ac/ccc code vulnerability dataset with code changes and cve summaries,"Fan J., Li Y., Wang S., Nguyen T.N., AC/CCC code vulnerability dataset with code changes and CVE summaries, Proc. 17th Int. Conf. Mining Softw. Repositories, pp. 508-512, (2020)",Exclude,""
codacy security scan,"Codacy Security Scan, (2021)",Include,""
open source security and risk analysis report,"Open Source Security and Risk Analysis Report, (2021)",Exclude,""
practical evaluation of static analysis tools for cryptography: benchmarking method and case study,"Braga A., Dahab R., Antunes N., Laranjeiro N., Vieira M., Practical evaluation of static analysis tools for cryptography: Benchmarking method and case study, 2017 Ieee 28th International Symposium on Software Reliability Engineering (ISSRE). Ieee, pp. 170-181, (2017)",Exclude,""
2019 cwe top 25 most dangerous software errors,"2019 CWE Top 25 Most Dangerous Software Errors, (2019)",Exclude,""
towards a deep learning model for vulnerability detection on web application variants,"Fidalgo A., Medeiros I., Antunes P., Neves N., Towards a deep learning model for vulnerability detection on web application variants, 2020 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW), pp. 465-476, (2020)",Exclude,""
acgvd: vulnerability detection based on comprehensive graph via graph neural network with attention,"Li M., Li C., Li S., Wu Y., Zhang B., Wen Y., ACGVD: Vulnerability detection based on comprehensive graph via graph neural network with attention, International Conference on Information and Communications Security, pp. 243-259, (2021)",Include,Include
an automated vulnerability detection and remediation method for software security,"Jurn J., Kim T., Kim H., An automated vulnerability detection and remediation method for software security, Sustainability, 10, 5, (2018)",Exclude,""
a survey on similarity measures in text mining,"Vijaymeena M.K., Kavitha K., A survey on similarity measures in text mining, Machine Learning and Applications: An International Journal, 3, 2, pp. 19-28, (2016)",Exclude,""
cvefixes: automated collection of vulnerabilities and their fixes from open-source software,"Bhandari G., Naseer A., Moonen L., Cvefixes: Automated collection of vulnerabilities and their fixes from open-source software, Proceedings of the 17th International Conference on Predictive Models and Data Analytics in Software Engineering, pp. 30-39, (2021)",Exclude,""
a taxonomy of causes of software vulnerabilities in internet software,"Piessens F., A taxonomy of causes of software vulnerabilities in Internet software, (2002)",Exclude,""
the cert guide to coordinated vulnerability disclosure,"Householder A.D., Wassermann G., Manion A., King C., The cert guide to coordinated vulnerability disclosure, (2017)",Exclude,""
peculiar: smart contract vulnerability detection based on crucial data flow graph and pre-training techniques,"Wu H., Zhang Z., Wang S., Lei Y., Lin B., Qin Y., Zhang H., Mao X., Peculiar: Smart contract vulnerability detection based on crucial data flow graph and pre-Training techniques, 2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE). IEEE, pp. 378-389, (2021)",Include,Include
the beauty and the beast: vulnerabilities in red hat’s packages,"Neuhaus S., Zimmermann T., The beauty and the beast: Vulnerabilities in red hat’s packages, Proceedings of the 2009 USENIX Annual Technical Conference (USENIX ATC’09), (2009)",Exclude,""
all about whitesource's 2021 open source security vulnerabilities report,"All about Whitesource's 2021 Open Source Security Vulnerabilities Report, (2021)",Exclude,""
the owasp benchmark for security automation,"The OWASP Benchmark for Security Automation, Version, 1, (2014)",Exclude,""
discovering software vulnerabilities using data-flow analysis and machine learning,"Kronjee J., Hommersom A., Vranken H., Discovering software vulnerabilities using data-flow analysis and machine learning, Proceedings of The 13th International Conference on Availability, Reliability and Security, Ser. ARES 2018, (2018)",Include,Include
learning to predict severity of software vulnerability using only vulnerability description,"Han Z., Li X., Xing Z., Et al., Learning to predict severity of software vulnerability using only vulnerability description, 2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)[C], Piscataway, NJ, pp. 125-136, (2017)",Exclude,""
common vulnerabilities and exposures (cve),"Common Vulnerabilities and Exposures (CVE), (2019)",Exclude,""
identifying vulnerable iot applications using deep learning,"Naeem H., Alalfi M.H., Identifying Vulnerable IoT Applications using Deep Learning, 2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER)., pp. 582-586, (2020)",Include,Exclude
multi-granularity detector for vulnerability fixes,"Nguyen T.G., Le-Cong T., Kang H.J., Widyasari R., Yang C., Zhao Z., Xu B., Zhou J., Xia X., Hassan A.E., Et al., Multi-granularity detector for vulnerability fixes, IEEE Transactions on Software Engineering, (2023)",Exclude,""
joint prediction of multiple vulnerability characteristics through multi-task learning,"Gong X., Xing Z., Li X., Feng Z., Han Z., Joint prediction of multiple vulnerability characteristics through multi-task learning, 24th International Conference on Engineering of Complex Computer Systems, ICECCS 2019, pp. 31-40, (2019)",Exclude,""
coverity static application security testing: tool set for static code analysis,"Coverity Static Application Security Testing: Tool Set for Static Code Analysis, (2019)",Exclude,""
a survey on malware detection using data mining techniques,"Ye Y., Li T., Adjeroh D., Sitharama Iyengar S., A survey on malware detection using data mining techniques, ACM Computing Surveys (CSUR), (2017)",Exclude,""
metric learning for adversarial robustness,"Mao C., Zhong Z., Yang J., Vondrick C., Ray B., Metric learning for adversarial robustness, Proc. Adv. Neural Inf. Process. Syst. 32, Annu. Conf. Neural Inf. Process. Syst. (NeurIPS), pp. 478-489, (2019)",Exclude,""
sysevr: a framework for using deep learning to detect software vulnerabilities,"Li Z., Zou D., Xu S., Jin H., Zhu Y., Chen Z., SySeVR: A framework for using deep learning to detect software vulnerabilities, IEEE Trans. Dependable Secure Comput., (2021)",Include,Include
design and development of svace static analyzers,"Belevantsev A., Borodin A., Dudina I., Ignatiev V., Izbyshev A., Polyakov S., Velesevich E., Zhurikhin D., Design and Development of Svace Static Analyzers, 5, pp. 3-9, (2018)",Exclude,""
rough auditing tool for security. google code,"Chess B., Gerschefske M., Rough auditing tool for security. Google code, (2013)",Exclude,""
cloud security engineering: early stages of sdlc,"Aljawarneh S.A., Alawneh A., Jaradat R., Cloud security engineering: Early stages of SDLC, Future Generation Computer Systems, 74, pp. 385-392, (2017)",Exclude,""
detection of recurring software vulnerabilities,"Pham N.H., Nguyen T.T., Nguyen H.A., Nguyen T.N., Detection of recurring software vulnerabilities, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering (ASE’10), pp. 447-456, (2010)",Exclude,""
automatically assessing vulnerabilities discovered by compositional analysis,"Ognawala S., Amato R.N., Pretschner A., Et al., Automatically assessing vulnerabilities discovered by compositional analysis, Proceedings of the 1st International Workshop on Machine Learning and Software Engineering in Symbiosis[C], New York, NY, pp. 16-25, (2018)",Exclude,""
an investigation into coupling measures for c++,"Briand L.C., Devanbu P.T., Melo W.L., An investigation into coupling measures for C++, Proc. 19th Int. Conf. Softw. Eng., pp. 412-421, (1997)",Exclude,""
a static analysis tool svace as a collection of analyzers with various complexity levels,"Borodin A.E., Belevancev A.A., A static analysis tool svace as a collection of analyzers with various complexity levels, Proc. of ISP RAS, pp. 111-132, (2015)",Exclude,""
25 years of vulnerabilities: 1988-2012,"Younan Y., 25 years of vulnerabilities: 1988-2012, Sourcefire Vulnerability Research Team, (2013)",Exclude,""
vurle: automatic vulnerability detection and repair by learning from examples,"Ma S., Thung F., Lo D., Sun C., Deng R.H., VuRLE: automatic vulnerability detection and repair by learning from examples, European Symposium on Research in Computer Security, pp. 229-246, (2017)",Exclude,""
assessing and comparing vulnerability detection tools for web services: benchmarking approach and examples,"Antunes N., Vieira M., Assessing and comparing vulnerability detection tools for web services: Benchmarking approach and examples, Ieee Transactions on Services Computing, 8, 2, pp. 269-283, (2014)",Exclude,""
detection of malicious code by applying machine learning classifers on static features: a state-of the-art survey,"Shabtai A., Moskovitch R., Elovici Y., Glezer C., Detection of malicious code by applying machine learning classifers on static features: A state-of the-art survey, Information Security Technical Report, 14, 1, pp. 16-29, (2009)",Exclude,""
grapheye: a novel solution for detecting vulnerable functions based on graph attention network [c],"Zhou L., Huang M., Li Y., Et al., GraphEye: A Novel Solution for Detecting Vulnerable Functions Based on Graph Attention Network [C], 2021 IEEE Sixth International Conference on Data Science in Cyberspace (DSC). IEEE, pp. 381-388, (2021)",Include,Include
sharpchecker: static analysis tool for c# programs,"Koshelev V.K., Ignatiev V.N., Borzilov A.I., Belevantsev A.A., Sharpchecker: Static analysis tool for c# programs, Programming and Computer Software, 43, 4, pp. 268-276, (2017)",Exclude,""
on using distributed representations of source code for the detection of c security vulnerabilities,"Coimbra D., Reis S., Abreu R., Pasareanu C., Erdogmus H., On using distributed representations of source code for the detection of C security vulnerabilities, (2021)",Exclude,""
detecting '0-day' vulnerability: an empirical study of secret security patch in oss,"Wang X., Sun K., Batcheller A., Jajodia S., Detecting '0-day' vulnerability: An empirical study of secret security patch in oss, Proc. 49th Annual IEEE/IFIP Int. Conf. Dependable Syst. Netw. (DSN), pp. 485-492, (2019)",Exclude,""
bowdidge r (2013) why don’t software developers use static analysis tools to find bugs?,"Johnson B., Song Y., Murphy-Hill E., Bowdidge R (2013) Why don’t software developers use static analysis tools to find bugs?, Proceedings of the 2013 International Conference on Software Engineering (ICSE ’13), pp. 672-681",Exclude,""
maximal divergence sequential autoencoder for binary software vulnerability detection[c],"Le T., Nguyen T., Le T., Et al., Maximal divergence sequential autoencoder for binary software vulnerability detection[C], International Conference on Learning Representations., (2019)",Exclude,""
learning a classifier for false positive error reports emitted by static code analysis tools,"Koc U., Saadatpanah P., Foster J.S., Porter A.A., Learning a classifier for false positive error reports emitted by static code analysis tools, Proceedings of the 1St ACM SIGPLAN International Workshop on Machine Learning and Programming Languages, pp. 35-42, (2017)",Exclude,""
a buffer overflow prediction approach based on software metrics and machine learning,"Ren J., Zheng Z., Liu Q., Wei Z., Yan H., A buffer overflow prediction approach based on software metrics and machine learning, Secur. Commun. Netw., (2019)",Exclude,""
gitguardian state of the secrets sprawl,"GitGuardian State of the Secrets Sprawl, (2021)",Exclude,""
toward large-scale vulnerability discovery using machine learning,"Grieco G., Grinblat G.L., Uzal L., Rawat S., Feist J., Mounier L., Toward large-scale vulnerability discovery using machine learning, Proc. 6th Acm Conf. Data Appl. Secur. Privacy, pp. 85-96, (2016)",Include,Exclude
searching for a needle in a haystack: predicting security vulnerabilities for windows vista,"Zimmermann T., Nagappan N., Williams L., Searching for a needle in a haystack: Predicting security vulnerabilities for windows vista, 2010 Third International Conference on Software Testing, Verification and Validation. IEEE, pp. 421-428, (2010)",Exclude,""
machine-learning-guided selectively unsound static analysis,"Heo K., Oh H., Yi K., Machine-learning-guided selectively unsound static analysis, Proc. IEEE/ACM 39th Int. Conf. Softw. Eng. (ICSE), pp. 519-529, (2017)",Include,Include
rough auditing tool for security,"Chess B., Gerschefske M., Rough auditing tool for security. Google code, (2013)",Exclude,""
checking smart contracts with structural code embedding,"Gao Z., Jiang L., Xia X., Lo D., Grundy J., Checking smart contracts with structural code embedding, IEEE Transactions on Software Engineering, (2020)",Include,Exclude
cppcheck: a tool for static c/c++ code analysis,Cppcheck: A tool for static C/C++ code analysis,Exclude,""
mira: a framework for static performance analysis,"Meng K., Norris B., Mira: A framework for static performance analysis, 2017 Ieee International Conference on Cluster Computing (CLUSTER), pp. 103-113, (2017)",Exclude,""
deep learning-based vulnerable function detection: a benchmark,"Lin G., Xiao W., Zhang J., Xiang Y., Deep learning-based vulnerable function detection: A benchmark, Proc. 21st Int. Conf. Inf. Commun. Secur. (ICICS), pp. 219-232, (2019)",Exclude,""
vulsniper: focus your attention to shoot fine-grained vulnerabilities.,"Duan X., Wu J., Ji S., Rui Z., Luo T., Yang M., Wu Y., Vulsniper: Focus your attention to shoot fine-grained vulnerabilities., IJCAI, pp. 4665-4671, (2019)",Include,Include
questions developers ask while diagnosing potential security vulnerabilities with static analysis,"Smith J., Johnson B., Murphy-Hill E., Chu B., Lipford H.R., Questions developers ask while diagnosing potential security vulnerabilities with static analysis, Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering, pp. 248-259, (2015)",Exclude,""
a systematic model building process for predicting actionable static analysis alerts,"Heckman S.S., A Systematic Model Building Process for Predicting Actionable Static Analysis Alerts, (2009)",Exclude,""
fuzzing: brute force vulnerability discovery,"Sutton M., Greene A., Amini P., Fuzzing: Brute Force Vulnerability Discovery, (2007)",Exclude,""
a framework for combining and ranking static analysis tool findings based on tool performance statistics,"Xypolytos A., Xu H., Vieira B., Ali-Eldin A.M.T., A framework for combining and ranking static analysis tool findings based on tool performance statistics, In: 2017 IEEE International Conference on Software Quality, Reliability and Security Companion (Qrs-C). IEEE, Pp, pp. 595-596, (2017)",Exclude,""
the impact factors on the performance of machine learning-based vulnerability detection: a comparative study,"Zheng W., Gao J., Wu X., Liu F., Xun Y., Liu G., Chen X., The impact factors on the performance of machine learning-based vulnerability detection: A comparative study, J. Syst. Softw., 168, (2020)",Exclude,""
deep neural-based vulnerability discovery demystified: data,"Lin G., Xiao W., Yu Zhang L., Gao S., Tai Y., Zhang J., Deep neural-based vulnerability discovery demystified: Data, model and performance, Neural Computing and Applications, pp. 1-14, (2021)",Include,Exclude
static analyzer svace for finding defects in a source program code,"Ivannikov V.P., Belevantsev A.A., Borodin A.E., Ignatiev V.N., Zhurikhin D.M., Avetisyan A.I., Static analyzer svace for finding defects in a source program code, Programming and Computer Software, 40, 5, pp. 265-275, (2014)",Exclude,""
vest: a system for vulnerability exploit scoring & timing,"Chen H., Liu J., Liu R., Et al., VEST: a system for vulnerability exploit scoring & timing, Proceedings of the 28th International Joint Conference on Artificial Intelligence [C], Palo Alto, CA, pp. 6503-6505, (2019)",Exclude,""
sqvdt: a scalable quantitative vulnerability detection technique for source code security assessment,"Akram J., Luo P., SQVDT: a scalable quantitative vulnerability detection technique for source code security assessment, Softw Pract Exp, 51, pp. 294-318, (2021)",Exclude,""
large-scale empirical study of important features indicative of discovered vulnerabilities to assess application security,"Zhang M., de Carnavalet X.D.C., Wang L., Ragab A., Large-scale empirical study of important features indicative of discovered vulnerabilities to assess application security, IEEE Trans Inf Forensic Secur, 14, 9, pp. 2315-2330, (2019)",Exclude,""
ethereum: a secure decentralised generalised transaction ledger,"Wood G., Et al., Ethereum: A secure decentralised generalised transaction ledger, Ethereum project yellow paper, 151, 2014, pp. 1-32, (2014)",Exclude,""
how effective are smart contract analysis tools? evaluating smart contract static analysis tools using bug injection,"Ghaleb A., Pattabiraman K., How effective are smart contract analysis tools? evaluating smart contract static analysis tools using bug injection, the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis",Exclude,""
shiftleftsecurity/joern: open-source code analysis platform for c/c++ based on code property graphs,ShiftLeftSecurity/joern: Open-source Code Analysis Platform for C/C++ Based on Code Property Graphs,Include,Exclude
vulhunter: an automated vulnerability detection system based on deep learning and bytecode,"Guo N., Li X., Yin H., Gao Y., Vulhunter: an automated vulnerability detection system based on deep learning and bytecode, International Conference on Information and Communications Security, pp. 199-218, (2019)",Exclude,""
software security,"McGraw G., Software security, IEEE Secur. Privacy, 2, 2, pp. 80-83, (2004)",Include,""
understanding how to use static analysis tools for detecting cryptography misuse in software,"Braga A., Dahab R., Antunes N., Laranjeiro N., Vieira M., Understanding how to use static analysis tools for detecting cryptography misuse in software, Ieee Transactions on Reliability, 68, 4, pp. 1384-1403, (2019)",Exclude,""
how developers diagnose potential security vulnerabilities with a static analysis tool,"Smith J., Johnson B., Murphy-Hill E.R., Chu B., Richter Lipford H., How developers diagnose potential security vulnerabilities with a static analysis tool, IEEE Trans. Software Eng., 45, 9, pp. 877-897, (2019)",Exclude,""
$\mu$μvuldeepecker: a deep learning-based system for multiclass vulnerability detection,"Zou D., Wang S., Xu S., Li Z., Jin H., $\mu$μVulDeePecker: A deep learning-based system for multiclass vulnerability detection, IEEE Trans. Dependable Secur. Comput., 18, 5, pp. 2224-2236, (2021)",Include,Exclude
automated classification of static code analysis alerts: a case study,"Yuksel U., Sozer H., Automated classification of static code analysis alerts: A case study, 2013 IEEE International Conference on Software Maintenance, pp. 532-535, (2013)",Exclude,""
security vulnerability detection using deep learning natural language processing [j],"Ziems N., Wu S., Security Vulnerability Detection Using Deep Learning Natural Language Processing [J], (2021)",Exclude,""
leopard: identifying vulnerable code for vulnerability assessment through program metrics,"Du X., Chen B., Li Y., Guo J., Zhou Y., Liu Y., Jiang Y., Leopard: Identifying vulnerable code for vulnerability assessment through program metrics, Proceedings of the 41st International Conference on Software Engineering, ICSE '19, pp. 60-71, (2019)",Exclude,""
assessment of vulnerability severity using text mining,"Spanos G., Angelis L., Toloudis D., Assessment of vulnerability severity using text mining, Proceedings of the 21st Pan-Hellenic Conference on Informatics[C], New York, NY, pp. 1-6, (2017)",Exclude,""
software vulnerability discovery techniques: a survey,"Liu B., Shi L., Cai Z., Li M., Software vulnerability discovery techniques: A survey, 2012 Fourth International Conference on Multimedia Information Networking and Security, pp. 152-156, (2012)",Exclude,""
a comparative study of deep learning-based vulnerability detection system,"Li Z., Zou D., Tang J., Zhang Z., Sun M., Jin H., A comparative study of deep learning-based vulnerability detection system, IEEE Access, 7, pp. 103184-103197, (2019)",Exclude,""
interpreting deep learning-based vulnerability detector predictions based on heuristic searching,"Zou D., Zhu Y., Xu S., Li Z., Jin H., Ye H., Interpreting deep learning-based vulnerability detector predictions based on heuristic searching, ACM Transactions on Software Engineering and Methodology (TOSEM), 30, 2, pp. 1-31, (2021)",Exclude,""
the uc davis reducing software security risk through an integrated approach project,"The UC Davis Reducing Software Security Risk through An Integrated Approach Project, (2000)",Exclude,""
chapter 8 - analyzing security data,"Meneely A., Chapter 8 - analyzing security data, The Art And Science Of Analyzing Software Data, pp. 215-229, (2015)",Exclude,""
deep learning for software vulnerabilities detection using code metrics,"Zagane M., Abdi M.K., Alenezi M., Deep learning for software vulnerabilities detection using code metrics, IEEE Access, 8, pp. 74562-74570, (2020)",Exclude,""
information security vulnerability prediction based on business process model using machine learning approach,"Hariyanti E., Djunaidy A., Siahaan D., Information security vulnerability prediction based on business process model using machine learning approach, Comput. Secur., 110, (2021)",Exclude,""
vccfinder: finding potential vulnerabilities in opensource projects to assist code audits,"Perl H., Dechand S., Smith M., Arp D., Yamaguchi F., Rieck K., Fahl S., Acar Y., Vccfinder: Finding potential vulnerabilities in opensource projects to assist code audits, Proc. 22nd Acm Sigsac Conf. Comput. Commun. Secur, pp. 426-437, (2015)",Exclude,""
toward mining “concept keywords” from identifiers in large software projects,"Ohba M., Gondow K., Toward mining “concept keywords” from identifiers in large software projects, ACM SIGSOFT Softw Eng Notes, 30, 4, pp. 1-5, (2005)",Exclude,""
towards deep learning models resistant to adversarial attacks,"Madry A., Makelov A., Schmidt L., Tsipras D., Vladu A., Towards deep learning models resistant to adversarial attacks, ICLR, (2018)",Exclude,""
web application vulnerability prediction using hybrid program analysis and machine learning,"Shar L.K., Briand L.C., Tan H.B.K., Web application vulnerability prediction using hybrid program analysis and machine learning, IEEE Transactions on Dependable and Secure Computing, 12, 6, pp. 688-707, (2014)",Include,Exclude
cd-vuld: cross-domain vulnerability discovery based on deep domain adaptation,"Liu S., Lin G., Qu L., Zhang J., De Vel O., Montague P., Xiang Y., CD-vuld: Cross-domain vulnerability discovery based on deep domain adaptation, IEEE Trans Dependable Secur Comput, (2020)",Include,Exclude
self-attention based automated vulnerability detection with effective data representation,"Wu T., Chen L., Du G., Zhu C., Shi G., Self-attention based automated vulnerability detection with effective data representation, 2021 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom). IEEE, pp. 892-899, (2021)",Include,Exclude
clang static analyzer,"Clang static analyzer, (2021)",Exclude,""
vulnerabilities by type,Vulnerabilities by Type,Exclude,""
achyb: a hybrid analysis approach to detect kernel access control vulnerabilities,"Hu Y., Wang W., Hunger C., Wood R., Khurshid S., Tiwari M., ACHyb: A hybrid analysis approach to detect kernel access control vulnerabilities, Proceedings of the 29th Acm Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ESEC/FSE 2021, pp. 316-327, (2021)",Exclude,""
the rise of software vulnerability: taxonomy of software vulnerabilities detection and machine learning approaches,"Hanif H., Md Nasir M.H.N., Ab Razak M.F., Firdaus A., Badrul Anuar N., The rise of software vulnerability: Taxonomy of software vulnerabilities detection and machine learning approaches, Journal of Network and Computer Applications, (2021)",Exclude,""
automated software vulnerability detection with machine learning,"Harer J. A., Kim L. Y., Russell R. L., Ozdemir O., Kosta L. R., Rangamani A., Hamilton L. H., Centeno G. I., Key J. R., Ellingwood P. M., Et al., Automated software vulnerability detection with machine learning, (2018)",Include,Exclude (Pre-print)
valgrind: a framework for heavyweight dynamic binary instrumentation,"Nethercote N., Seward J., Valgrind: A framework for heavyweight dynamic binary instrumentation, Proceedings of the 28th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI’07), pp. 89-100, (2007)",Exclude,""
fuzzing: a survey,"Li J., Zhao B., Zhang C., Fuzzing: A survey, Cybersecurity, 1, (2018)",Exclude,""
security fatigue,"Stanton B., Theofanos M.F., Prettyman S.S., Furman S., Security Fatigue, IT Professional, 18, 5, pp. 26-32, (2016)",Exclude,""
browse cve vulnerabilities by date,Browse Cve Vulnerabilities by Date,Exclude,""
adaptive probabilistic model for ranking code-based static analysis alerts,"Heckman S.S., Adaptive probabilistic model for ranking code-based static analysis alerts, 29Th International Conference on Software engineering—companion. ICSE 2007 Companion, pp. 89-90, (2007)",Exclude,""
beyond metadata: code-centric and usage-based analysis of known vulnerabilities in open-source software,"Ponta S.E., Plate H., Sabetta A., Beyond metadata: Code-centric and usage-based analysis of known vulnerabilities in open-source software, 2018 IEEE International Conference on Software Maintenance and Evolution (ICSME), pp. 449-460, (2018)",Exclude,""
security enhancement technologies for smart contracts in the blockchain: a survey,"Wang Y., He J., Zhu N., Yi Y., Zhang Q., Song H., Xue R., Security enhancement technologies for smart contracts in the blockchain: A survey, Transactions on Emerging Telecommunications Technologies, (2021)",Exclude,""
static analyzer svace for finding of defects in program source code,"Ivannikov V.P., Belevantsev A.A., Borodin A.E., Ignatiev V.N., Zhurikhin D.M., Avetisyan A.I., Static analyzer svace for finding of defects in program source code, Proc. of ISP RAS, pp. 231-250, (2014)",Exclude,""
a deep learning based static taint analysis approach for iot software vulnerability location,"Niu W., Zhang X., Du X., Zhao L., Cao R., Guizani M., A deep learning based static taint analysis approach for iot software vulnerability location, Meas. J. Int. Meas. Confed, 152, (2020)",Include,Exclude
aletheia: improving the usability of static security analysis,"Tripp O., Guarnieri S., Pistoia M., Aleksandr A., ALETHEIA: Improving the usability of static security analysis, Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS ’14, pp. 762-774, (2014)",Exclude,""
a survey on security in consensus and smart contracts[j],"Cao X., Zhang J., Wu X., Et al., A survey on security in consensus and smart contracts[J], Peer-to-Peer Networking and Applications, pp. 1-21, (2022)",Exclude,""
representation vs. model: what matters most for source code vulnerability detection,"Zheng W., Abdallah Semasaba A.O., Wu X., Agyemang S.A., Liu T., Ge Y., Representation vs. model: What matters most for source code vulnerability detection, 2021 IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER, (2021)",Exclude,""
colefunda: explainable silent vulnerability fix identification,"Zhou J., Pacheco M., Chen J., Hu X., Xia X., Lo D., Hassan A.E., Colefunda: Explainable silent vulnerability fix identification, (2023)",Exclude,""
smartbugs: a framework to analyze solidity smart contracts,"Ferreira J.F., Cruz P., Durieux T., Abreu R., SmartBugs: A Framework to Analyze Solidity Smart Contracts, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering, pp. 1349-1352",Exclude,""
simulation of built-in php features for precise static code analysis,"Dahse J., Holz T., Simulation of built-in PHP features for precise static code analysis, 21st Annual Network and Distributed System Security Symposium, NDSS 2014, (2014)",Exclude,""
vulpecker: an automated vulnerability detection system based on code similarity analysis,"Li Z., Zou D., Xu S., Jin H., Qi H., Hu J., Vulpecker: An automated vulnerability detection system based on code similarity analysis, Proceedings of the 32nd Annual Conference on Computer Security Applications., pp. 201-213, (2016)",Exclude,""
a few billion lines of code later: using static analysis to find bugs in the real world,"Al Bessey K.B., Chelf B., Chou A., Fulton B., Hallem S., Henri-Gros C., Kamsky A., McPeak S., Engler D., A few billion lines of code later: Using static analysis to find bugs in the real world, Communications of the ACM, 53, 2, pp. 66-75, (2010)",Exclude,""
an empirical model to predict security vulnerabilities using code complexity metrics,"Shin Y., Williams L., An empirical model to predict security vulnerabilities using code complexity metrics, Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement, pp. 315-317, (2008)",Exclude,""
evaluation of static analysis tools for software security,"AlBreiki H.H., Mahmoud Q.H., Evaluation of static analysis tools for software security, 2014 10th International Conference on Innovations in Information Technology (IIT’14), pp. 93-98, (2014)",Exclude,""
addresssanitizer: a fast address sanity checker,"Serebryany K., Bruening D., Potapenko A., Vyukov D., AddressSanitizer: A fast address sanity checker, Proceedings of the 23rd USENIX Annual Technical Conference (USENIX ATC’12), pp. 309-318, (2012)",Exclude,""
bvdetector: a program slice-based binary code vulnerability intelligent detection system,"Tian J., Xing W., Li Z., Bvdetector: a program slice-based binary code vulnerability intelligent detection system, Inf. Softw. Technol., 123, (2020)",Exclude,""
autovas: an automated vulnerability analysis system with a deep learning approach,"Jeon S., Kim H.K., Autovas: an automated vulnerability analysis system with a deep learning approach, Comput. Secur., 106, (2021)",Include,Include
cobot: static c/c++ bug detection in the presence of incomplete code. in,"Gao Q., Ma S., Shao S., Sui Y., Zhao G., Ma L., Ma X., Duan F., Deng X., Zhang S., Chen X., CoBOT: Static C/C++ Bug Detection in the Presence of Incomplete Code. in, IEEE/ACM 26th International Conference on Program Comprehension (ICPC ?18). IEEE, pp. 385-3853, (2018)",Exclude,""
equipping wap with weapons to detect vulnerabilities: practical experience report,"Medeiros I., Neves N., Correia M., Equipping wap with weapons to detect vulnerabilities: Practical experience report, Proceedings of the 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), pp. 630-637",Exclude,""
software vulnerability discovery via learning multi-domain knowledge bases,"Lin G., Zhang J., Luo W., Pan L., De Vel O., Paul M., Yang X., Software vulnerability discovery via learning multi-domain knowledge bases, IEEE Transactions on Dependable and Secure Computing, 18, 5, pp. 2469-2485, (2019)",Exclude,""
avdhram: automated vulnerability detection based on hierarchical representation and attention mechanism,"An W., Chen L., Wang J., Du G., Shi G., Meng D., AVDHRAM: Automated vulnerability detection based on hierarchical representation and attention mechanism, 2020 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking, ISPA/BDCloud/SocialCom/SustainCom, pp. 337-344, (2020)",Include,Include
uchecker: automatically detecting php-based unrestricted file upload vulnerabilities,"Huang J., Li Y., Zhang J., Dai R., Uchecker: Automatically detecting PHP-based unrestricted file upload vulnerabilities, 2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN), pp. 581-592, (2019)",Exclude,""
arf: identifying re-delegation vulnerabilities in android system services,"Gorski S.A., Enck W., Arf: Identifying re-delegation vulnerabilities in android system services, Proc. 12th Conf. Secur. Privacy Wireless Mobile Netw, pp. 151-161, (2019)",Exclude,""
the state of open source vulnerabilities,"The State of Open Source Vulnerabilities, (2021)",Exclude,""
learning to predict vulnerabilities from vulnerability-fixes: a machine translation approach,"Garg A., Degiovanni R., Jimenez M., Cordy M., Papadakis M., Traon Y.L., Learning to predict vulnerabilities from vulnerability-fixes: a machine translation approach, (2020)",Exclude,""
buffer overflows: attacks and defenses for the vulnerability of the decade,"Cowan C., Wagle F., Pu C., Beattie S., Walpole J., Buffer overflows: Attacks and defenses for the vulnerability of the decade, Proceedings DARPA Information Survivability Conference and Exposition (DISCEX’00), 2, pp. 119-129, (2000)",Exclude,""
vyper: vulnerability detection in binary code,"Boudjema E.H., Verlan S., Mokdad L., Faure C., VYPER: Vulnerability detection in binary code, Secur. Priv., 3, 2, (2020)",Exclude,""
digtool: a virtualizationbased framework for detecting kernel vulnerabilities,"Pan J., Yan G., Fan X., Digtool: A virtualizationbased framework for detecting kernel vulnerabilities, 26th Usenix Security Symposium (USENIX Security 17), pp. 149-165, (2017)",Exclude,""
improving your software using static analysis to find bugs,"Cole B., Hakim D., Hovemeyer D., Lazarus R., Pugh W., Stephens K., Improving your software using static analysis to find bugs, Companion to the 21st ACM SIGPLAN Symposium on Objectoriented Programming Systems, Languages, and Applications (OOPSLA '06), pp. 673-674, (2006)",Exclude,""
vuldeepecker: a deep learning-based system for vulnerability detection. arxiv preprint arxiv,"Li Z.F., Zou D.Q.S., Xu S.H.T., Vuldeepecker: A Deep Learning-Based System for Vulnerability Detection. Arxiv Preprint Arxiv, 1801, pp. 1681-1695, (2018)",Include,Exclude (Duplicate)
commonweakness enumeration,"CommonWeakness Enumeration, (2021)",Exclude,""
"automatic feature learning for vulnerability prediction""","Dam H.K., Tran T., Pham T., Ng S.W., Grundy J., Ghose A., Automatic feature learning for vulnerability prediction""",Exclude,""
software vulnerability analysis and discovery using machine-learning and data-mining techniques: a survey,"Mohammad Ghaffarian S., Reza Shahriari H., Software vulnerability analysis and discovery using machine-learning and data-mining techniques: A survey, ACM Computing Surveys (CSUR), 50, 4, pp. 1-36, (2017)",Exclude,""
a survey on formal verification for solidity smart contracts,"Garfatta I., Klai K., Gaaloul W., Graiet M., A survey on formal verification for solidity smart contracts, 2021 Australasian Computer Science Week Multiconference, pp. 1-10, (2021)",Exclude,""
why don't software developers use static analysis tools to find bugs?,"Johnson B., Song Y., Murphy-Hill E., Bowdidge R., Why don't software developers use static analysis tools to find bugs?, Proceed-ings of the 2013 International Conference on Software Engineering, pp. 672-681, (2013)",Exclude,""
tap: a static analysis model for php vulnerabilities based on token and deep learning technology,"Fang Y., Han S., Huang C., Wu R., TAP: A static analysis model for php vulnerabilities based on token and deep learning technology, PLOS ONE, 14, 11, pp. 1-19, (2019)",Exclude,""
rats: rough audit tool for security,"Rats: Rough Audit Tool for Security, (2021)",Exclude,""
smartcheck: static analysis of ethereum smart contracts,"Tikhomirov S., Voskresenskaya E., Ivanitskiy I., Takhaviev R., Marchenko E., Alexandrov Y., SmartCheck: Static analysis of ethereum smart contracts, the 1st International Workshop on Emerging Trends in Software Engineering for Blockchain, pp. 9-16, (2018)",Exclude,""
magnet: a two-pronged defense against adversarial examples,"Meng D., Chen H., Magnet: A two-pronged defense against adversarial examples, Proc. Acm Sigsac Conf. Comput. Commun. Secur, pp. 135-147, (2017)",Exclude,""
survey of automated vulnerability detection and exploit generation techniques in cyber reasoning systems,"Brooks T.N., Survey of automated vulnerability detection and exploit generation techniques in cyber reasoning systems, Intelligent Computing, (2019)",Exclude,""
software vulnerability detection methodology combined with static and dynamic analysis,"Kim S., Kim R.Y.C., Park Y.B., Software vulnerability detection methodology combined with static and dynamic analysis, Wireless Pers. Commun., 89, 3, pp. 777-793, (2016)",Exclude,""
cve details: the ultimate security vulnerability data-source,"Ozkan S., CVE Details: The Ultimate Security Vulnerability Data-Source, (2011)",Exclude,""
vulnerability prediction from source code using machine learning,"Bilgin Z., Ersoy M.A., Soykan E.U., Tomur E., Comak P., Karacay L., Vulnerability prediction from source code using machine learning, IEEE Access, 8, pp. 150672-150684, (2020)",Include,Include
ftclnet: convolutional lstm with fourier transform for vulnerability detetion,"Cao D., Huang J., Zhang X., Liu X., FTCLNet: Convolutional LSTM with Fourier transform for vulnerability detetion, IEEE 19th International Conference On Trust, Security And Privacy In Computing And Communications, TrustCom, pp. 539-546, (2020)",Exclude,""
associating the severity of vulnerabilities with their description,"Toloudis D., Spanos G., Angelis L., Associating the severity of vulnerabilities with their description, International Conference on Advanced Information Systems Engineering (CAiSE)[C], New York, pp. 231-242, (2016)",Exclude,""
machine learning methods for software vulnerability detection,"Chernis B., Verma R., Machine learning methods for software vulnerability detection, IWSPA 2018-Proceedings of the 4th ACM International Workshop on Security and Privacy Analytics, Co-located with CODASPY 2018 2018-Janua, pp. 31-39, (2018)",Include,Exclude
experimenting machine learning techniques to predict vulnerabilities,"Alves H., Fonseca B., Antunes N., Experimenting machine learning techniques to predict vulnerabilities, Proc. Ieee 7th Latin-Amer. Symp. Dependable Comput., pp. 151-156, (2016)",Include,Exclude
evaluating micro patterns and software metrics in vulnerability prediction,"Sultana K.Z., Williams B.J., Evaluating micro patterns and software metrics in vulnerability prediction, 2017 6th International Workshop on Software Mining (SoftwareMining), pp. 40-47, (2017)",Exclude,""
software vulnerability detection using deep neural networks: a survey,"Lin G., Wen S., Han Q.-L., Zhang J., Xiang Y., Software vulnerability detection using deep neural networks: A survey, Proceedings of the IEEE (Proc.IEEE), 108, 10, pp. 1825-1848, (2020)",Exclude,""
hackers vs. testers: a comparison of software vulnerability discovery processes [c],"Votipka D., Stevens R., Redmiles E., Et al., Hackers vs. testers: A comparison of software vulnerability discovery processes [C], 2018 IEEE Symposium on Security and Privacy (SP). IEEE, pp. 374-391, (2018)",Exclude,""
a machine learning approach for vulnerability curation,"Chen Y., Santosa A.E., Yi A.M., Sharma A., Sharma A., Lo D., A machine learning approach for vulnerability curation, MSR, pp. 32-42, (2020)",Include,Exclude
research on vulnerability detection technology for web mail system,"Wang X., Wu R., Ma J., Long G., Han J., Research on vulnerability detection technology for web mail system, Procedia Comput. Sci., 131, pp. 124-130, (2018)",Exclude,""
generating realistic vulnerabilities via neural code editing: an empirical study,"Nong Y., Ou Y., Pradel M., Chen F., Cai H., Generating realistic vulnerabilities via neural code editing: An empirical study, ESEC/FSE 2022, pp. 1097-1109, (2022)",Include,Include
using safety properties to generate vulnerability patches,"Huang Z., Lie D., Tan G., Jaeger T., Using safety properties to generate vulnerability patches, 2019 Ieee Symposium on Security and Privacy (SP), pp. 539-554, (2019)",Exclude,""
pvs-studio: static code analysis for c c++c# and java,PVS-Studio: Static Code Analysis for C C++C# and Java,Exclude,""
text-mining approach for estimating vulnerability score,"Yamamoto Y., Miyamoto D., Nakayama M., Text-mining approach for estimating vulnerability score, 2015 4th International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS)[C], Piscataway, NJ, pp. 67-73, (2015)",Exclude,""
static analysis of source code security: assessment of tools against samate tests,"Diaz G., Bermejo J.R., Static analysis of source code security: Assessment of tools against samate tests, Information and Software Technology, 55, 8, pp. 1462-1476, (2013)",Exclude,""
adversarial examples in rf deep learning: detection and physical robustness,"Kokalj-Filipovic S., Miller R., Vanhoy G., Adversarial examples in rf deep learning: Detection and physical robustness, Proc. Ieee Global Conf. Signal Inf. Process. (GlobalSIP), pp. 1-5, (2019)",Exclude,""
han-bsvd: a hierarchical attention network for binary software vulnerability detection,"Yan H., Luo S., Pan L., Zhang Y., HAN-BSVD: a hierarchical attention network for binary software vulnerability detection, Comput. Secur., 108, (2021)",Exclude,""
rough-auditing-tool-for-security.,Rough-Auditing-Tool-For-Security.,Exclude,""
vulnerability extrapolation: assisted discovery of vulnerabilities using machine learning,"Yamaguchi F., Lindner F., Rieck K., Vulnerability extrapolation: Assisted discovery of vulnerabilities using machine learning, Proceedings of the 5th USENIX conference on Ofensive technologies, pp. 13-13, (2011)",Exclude,""
stackguard: automatic adaptive detection and prevention of buffer-overflow attacks,"Cowan C., Pu C., Maier D., Hintony H., Walpole J., Bakke P., Beattie S., Grier A., Wagle P., Zhang Q., StackGuard: Automatic adaptive detection and prevention of buffer-overflow attacks, Proceedings of the 7th Conference on USENIX Security Symposium - Volume 7 (SSYM’98), (1998)",Exclude,""
graph vulnerability and robustness: a survey,"Freitas S., Yang D., Kumar S., Tong H., Horng Chau D., Graph vulnerability and robustness: A survey, TKDE, (2022)",Exclude,""
machine-learning supported vulnerability detection in source code,"Sonnekalb T., Machine-learning supported vulnerability detection in source code, Proceedings of the ACM joint meeting on european software engineering conference and symposium on the foundations of software engineering, ESEC/SIGSOFT FSE 2019, tallinn, estonia, august 26-30, 2019, pp. 1180-1183, (2019)",Include,Exclude
an approach for predicting multiple-type overflow vulnerabilities based on combination features and a time series neural network algorithm,"Zheng Z., Zhang B., Liu Y., Et al., An approach for predicting multiple-type overflow vulnerabilities based on combination features and a time series neural network algorithm, Comput. Secur., 114, (2022)",Include,Exclude
an empirical study of deep learning models for vulnerability detection,"Steenhoek B., Rahman M.M., Jiles R., Le W., An empirical study of deep learning models for vulnerability detection, 2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE). IEEE, pp. 2237-2248, (2023)",Include,Exclude
cross-project vulnerability prediction based on software metrics and deep learning,"Kalouptsoglou I., Siavvas M., Tsoukalas D., Et al., Cross-project vulnerability prediction based on software metrics and deep learning, Proceedings of the ICCSA, Cagliari, Italy, pp. 877-893, (2020)",Include,Exclude
vulnerability detection with deep learning,"Wu F., Wang J., Liu J., Wang W., Vulnerability detection with deep learning, Proc. 3rd Ieee Int. Conf. Comput. Commun. (ICCC), pp. 1298-1302, (2017)",Include,Exclude
a survey of static analysis methods for identifying security vulnerabilities in software systems,"Pistoia M., Chandra S., Fink S.J., Yahav E., A survey of static analysis methods for identifying security vulnerabilities in software systems, IBM Systems Journal, 46, 2, pp. 265-288, (2007)",Exclude,""
cerebro: context-aware adaptive fuzzing for effective vulnerability detection,"Li Y., Xue Y., Chen H., Wu X., Zhang C., Xie X., Wang H., Liu Y., Cerebro: context-aware adaptive fuzzing for effective vulnerability detection, Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 533-544, (2019)",Exclude,""
applying deep learning for discovery and analysis of software vulnerabilities: a brief survey,"Singh S.K., Chaturvedi A., Applying deep learning for discovery and analysis of software vulnerabilities: A brief survey, Soft Computing: Theories and Applications, pp. 649-658, (2020)",Include,Exclude
predicting vulnerability in large codebases with deep code representation,"Tanwar A., Sundaresan K., Ashwath P., Ganesan P., Chandrasekaran S.K., Ravi S., Predicting Vulnerability in Large Codebases with Deep Code Representation, (2020)",Include,Exclude (Pre-print)
a survey on data-driven software vulnerability assessment and prioritization,"Le T.H.M., Chen H., Babar M.A., A survey on data-driven software vulnerability assessment and prioritization, ACM Comput. Surv., 55, 5, pp. 1-39, (2022)",Exclude,""
mvp: detecting vulnerabilities using patch-enhanced vulnerability signatures,"Xiao Y., Chen B., Yu C., Xu Z., Yuan Z., Li F., Liu B., Liu Y., Huo W., Zou W., Shi W., MVP: Detecting vulnerabilities using patch-enhanced vulnerability signatures, 29th Usenix Security Symposium (USENIX Security 20), pp. 1165-1182, (2020)",Exclude,""
software vulnerability detection based on code coverage and test cost,"Shuai B., Li H., Zhang L., Zhang Q., Tang C., Software vulnerability detection based on code coverage and test cost, 2015 11th International Conference on Computational Intelligence and Security (CIS), pp. 317-321, (2015)",Exclude,""
pattern-based vulnerability discovery,"Yamaguchi F., Pattern-based vulnerability discovery, (2015)",Exclude,""
securify: practical security analysis of smart contracts,"Tsankov P., Dan A.M., Drachsler-Cohen D., Gervais A., Buenzli F., Vechev M.T., Securify: Practical security analysis of smart contracts, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, (2018)",Exclude,""
vuldetector: detecting vulnerabilities using weighted feature graph comparison,"Cui L., Zhiyu H., Yang J., Fei H., Yun X., Vuldetector: Detecting vulnerabilities using weighted feature graph comparison, IEEE Transactions on Information Forensics and Security, 16, pp. 2004-2017, (2020)",Include,Include
on the capability of static code analysis to detect security vulnerabilities,"Goseva-Popstojanova K., Perhinschi A., On the capability of static code analysis to detect security vulnerabilities, Information and Software Technology, 68, pp. 18-33, (2015)",Exclude,""
understanding stack overflow code fragments,"Treude C., Robillard M.P., Understanding stack overflow code fragments, Proc. IEEE Int. Conf. Softw. Maintenance Evol., pp. 509-513, (2017)",Exclude,""
software vulnerability prediction using text analysis techniques,"Hovsepyan A., Scandariato R., Joosen W., Walden J., Software vulnerability prediction using text analysis techniques, Proceedings of the 4th international workshop on Security measurements and metrics, pp. 7-10, (2012)",Exclude,""
automating user notice generation for smart contract functions,"Hu X., Gao Z., Xia X., Lo D., Yang X., Automating user notice generation for smart contract functions, Proc. IEEE/ACM 36th Int. Conf. Automated Softw. Eng, pp. 5-17, (2021)",Exclude,""
vuldeelocator: a deep learning-based fine-grained vulnerability detector,"Li Z., Zou D., Xu S., Chen Z., Zhu Y., Jin H., VulDeeLocator: A Deep Learning-based Fine-grained Vulnerability Detector, 2, pp. 1-15, (2020)",Include,Include
prompt as triggers for backdoor attack: examining the vulnerability in language models,"Zhao S., Wen J., Tuan L.A., Zhao J., Fu J., Prompt as triggers for backdoor attack: Examining the vulnerability in language models, (2023)",Exclude,""
a lightweight assisted vulnerability discovery method using deep neural networks,"Li R., Feng C., Zhang X., Et al., A lightweight assisted vulnerability discovery method using deep neural networks, IEEE Access, 7, pp. 80079-80092, (2019)",Include,Exclude
a conceptual replication on predicting the severity of software vulnerabilities,"Sahin S., Tosun A., A conceptual replication on predicting the severity of software vulnerabilities, Proceedings of the Evaluation and Assessment on Software Engineering[C], New York, NY, pp. 244-250, (2019)",Exclude,""
a survey on ethereum systems security: vulnerabilities,"Chen H., Pendleton M., Njilla L., Xu S., A survey on ethereum systems security: Vulnerabilities, attacks, and defenses, ACM Computing Surveys (CSUR), 53, 3, pp. 1-43, (2020)",Exclude,""
security analysis of the owasp benchmark with julia,"Burato E., Ferrara P., Spoto F., Security analysis of the OWASP benchmark with julia, In: Proceedings of ITASEC17, the Rst Italian Conference on Security, (2017)",Exclude,""
to fear or not to fear that is the question: code characteristics of a vulnerable functionwith an existing exploit,"Younis A.A., Malaiya Y.K., Anderson C., Ray I., To fear or not to fear that is the question: Code characteristics of a vulnerable functionwith an existing exploit, Proceedings of the Sixth ACM on Conference on Data and Application Security and Privacy, CODASPY 2016, New Orleans, la, USA, March 9-11, 2016, pp. 97-104, (2016)",Exclude,""
the importance of accounting for real-world labelling when predicting software vulnerabilities,"Jimenez M., Rwemalika R., Papadakis M., Sarro F., Le Traon Y., Harman M., The importance of accounting for real-world labelling when predicting software vulnerabilities, Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ESEC/FSE 2019, pp. 695-705, (2019)",Exclude,""
semantic code search for smart contracts,"Shi C., Xiang Y., Yu J., Gao L., Semantic code search for smart contracts, (2021)",Exclude,""
a survey of automatic software vulnerability detection,"Shen Z., Chen S., A survey of automatic software vulnerability detection, program repair, and defect prediction techniques, Secur Commun Netw, 2020, pp. 1-16, (2020)",Exclude,""
finding a needle in a haystack: automated mining of silent vulnerability fixes,"Zhou J., Pacheco M., Wan Z., Xia X., Lo D., Wang Y., Hassan A.E., Finding a needle in a haystack: Automated mining of silent vulnerability fixes, 2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEE, pp. 705-716, (2021)",Exclude,""
evaluating how static analysis tools can reduce code review effort,"Singh D., Sekar V.R., Stolee K.T., Johnson B., Evaluating how static analysis tools can reduce code review effort, 2017 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC), pp. 101-105, (2017)",Exclude,""
the history of the !exploitable crash analyzer-security research & defence,The History of the !Exploitable Crash Analyzer-Security Research & Defence,Exclude,""
smashing smart contracts for fun and real profit,"Mueller B., Smashing smart contracts for fun and real profit, 9th annual HITB Security Conference, pp. 2-51",Exclude,""
smart contract vulnerability detection: from pure neural network to interpretable graph feature and expert pattern fusion,"Liu Z., Qian P., Wang X., Zhu L., He Q., Ji S., Smart contract vulnerability detection: From pure neural network to interpretable graph feature and expert pattern fusion, (2021)",Include,Include
the state of open source security report,"Tal L., The state of open source security report, Snyk, (2019)",Exclude,""
cyber vulnerability intelligence for iot binary,"Liu S., Dibaei M., Tai Y., Chen C., Zhang J., Xiang Y., Cyber vulnerability intelligence for IoT binary, Ieee Trans. Ind. Informat",Exclude,""
zero to one takes you deeper into the log4j2 jndi rce cve-2021-44228 vulnerability,"FreeBuf Network Security Industry Portal Z., Zero to One takes you deeper into the log4j2 Jndi RCE CVE-2021-44228 vulnerability, (2023)",Exclude,""
character-level convolutional neural network for predicting severity of software vulnerability from vulnerability description[j],"NAKAGAWA S., NAGAI T., KANEHARA H., Et al., Character-level convolutional neural network for predicting severity of software vulnerability from vulnerability description[J], IEICE Trans. Inf. Syst., E102-D, 9, pp. 1679-1682, (2019)",Exclude,""
vdsimilar: vulnerability detection based on code similarity of vulnerabilities and patches,"Sun H., Cui L., Li L., Ding Z., Hao Z., Cui J., Liu P., VDSimilar: Vulnerability detection based on code similarity of vulnerabilities and patches, Comput. Secur., 110, (2021)",Exclude,""
proving conditional termination for smart contracts,"Chanh Le T., Xu L., Chen L., Shi W., Proving Conditional Termination for Smart Contracts, Proceedings of the 2nd ACM Workshop on Blockchains, Cryptocurrencies, and Contracts, BCC@AsiaCCS 2018, pp. 57-59, (2018)",Exclude,""
taming the static analysis beast,"Toman J., Grossman D., Taming the static analysis beast, 2nd Summit on Advances in Programming Languages (SNAPL 2017) (Leibniz International Proceedings in Informatics (LIPIcs)), 71, pp. 181-1814, (2017)",Exclude,""
detecting vulnerability in source code using cnn and lstm network [j],"Guo J., Wang Z., Li H., Et al., Detecting vulnerability in source code using CNN and LSTM network [J], Soft Computing, pp. 1-11, (2021)",Exclude,""
dekant: a static analysis tool that learns to detect web application vulnerabilities,"Medeiros I., Neves N., Correia M., DeKant: A static analysis tool that learns to detect web application vulnerabilities, Proceedings of The 25th International Symposium on Software Testing and Analysis, Ser. ISSTA 2016, pp. 1-11, (2016)",Exclude,""
a study of c/c++ code weaknesses on stack overflow,"Zhang H., Wang S., Li H., Chen T.-H.P., Hassan A.E., A study of C/C++ code weaknesses on stack overflow, IEEE Trans. Software Eng., (2021)",Exclude,""
smart contract vulnerability detection using graph neural network,"Zhuang Y., Liu Z., Qian P., Liu Q., Wang X., He Q., Smart contract vulnerability detection using graph neural network, Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence, IJCAI 2020, pp. 3283-3290, (2020)",Include,Include
an empirical study of high-impact factors for machine learning-based vulnerability detection,"Zheng W., Gao J., Wu X., Xun Y., Liu G., Chen X., An Empirical Study of High-Impact Factors for Machine Learning-Based Vulnerability Detection, pp. 26-34, (2020)",Exclude,""
vulnerability disclosure in the age of social media: exploiting twitter for predicting real-world exploits,"Sabottke C., Suciu O., Dumitras T., Vulnerability disclosure in the age of social media: Exploiting Twitter for predicting real-world exploits, Proc. Usenix Secur. Symp., pp. 1041-1056, (2015)",Exclude,""
deep learning based feature envy detection,"Liu H., Xu Z., Zou Y., Deep learning based feature envy detection, Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering, pp. 385-396, (2018)",Include,Exclude
evaluation of static analysis tools for finding vulnerabilities in java and c/c++ source code,"Mahmood R., Mahmoud Q.H., Evaluation of Static Analysis Tools for Finding Vulnerabilities in Java and C/c++ Source Code, (2018)",Exclude,""
a performance evaluation of deep-learnt features for software vulnerability detection,"Ban X., Liu S., Chen C., Chua C., A performance evaluation of deep-learnt features for software vulnerability detection, Concurrency Comput., Practice Experience, 31, (2019)",Include,Include
ethor: practical and provably sound static analysis of ethereum smart contracts,"Schneidewind C., Grishchenko I., Scherer M., Maffei M., ethor: Practical and provably sound static analysis of ethereum smart contracts, the 2020 ACM SIGSAC Conference on Computer and Communications Security, pp. 621-640, (2020)",Exclude,""
context-aware patch generation for better automated program repair,"Wen M., Chen J., Wu R., Hao D., Cheung S., Context-Aware patch generation for better automated program repair, Proceedings of the 40th International Conference on Software Engineering, pp. 1-11, (2018)",Exclude,""
how different is it between machinegenerated and developer-provided patches an empirical study on the correct patches generated by automated program repair techniques,"Wang S., Wen M., Chen L., Yi X., Mao X., How different is it between machinegenerated and developer-provided patches An empirical study on the correct patches generated by automated program repair techniques, Proceedings of the 13th International Symposium on Empirical Software Engineering and Measurement, pp. 1-12, (2019)",Exclude,""
automated patch assessment for program repair at scale,"Ye H., Martinez M., Monperrus M., Automated patch assessment for program repair at scale, Empirical Software Engineering, 26, 2, pp. 1-38, (2021)",Exclude,""
toward better evolutionary program repair: an integrated approach,"Yuan Y., Banzhaf W., Toward better evolutionary program repair: an integrated approach, ACM Trans Softw Eng Methodol, (2019)",Exclude,""
the strength of random search on automated program repair,"Qi Y., Mao X., Lei Y., Dai Z., Wang C., The strength of random search on automated program repair, Proceedings of the 36th International Conference on Software Engineering. ACM, pp. 254-265, (2014)",Exclude,""
a correlation study between automated program repair and test-suite metrics,"Yi J., Hwei Tan S., Mechtaev S., Bohme M., Roychoudhury A., A correlation study between automated program repair and test-suite metrics, Empirical Software Engineering, 23, 5, pp. 2948-2979, (2018)",Exclude,""
a syntax-guided edit decoder for neural program repair,"Zhu Q., Sun Z., Xiao Y., Zhang W., Yuan K., Xiong Y., Zhang L., A syntax-guided edit decoder for neural program repair, Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering., pp. 341-353, (2021)",Include,Include
identifying patch correctness in test-based program repair,"Xiong Y., Liu X., Zeng M., Zhang L., Huang G., Identifying patch correctness in test-based program repair, Proceedings of the 40th International Conference on Software Engineering., pp. 789-799, (2018)",Include,Exclude
accelerating search-based program repair,"Mehne B., Yoshida H., Prasad M., Sen K., Gopinath D., Khurshid S., Accelerating search-based program repair, International Conference on Software Testing, Verification and Validation, pp. 227-238, (2018)",Exclude,""
history driven program repair,"Xuan Bach D.L., Lo D., Le Goues C., History driven program repair, Proceedings of the 23rd IEEE International Conference on Software Analysis, Evolution, and Reengineering, pp. 213-224, (2016)",Exclude,""
on the impact of flaky tests in automated program repair,"Qin Y., Wang S., Liu K., Mao X., Bissyande T.F., On the impact of flaky tests in automated program repair, Proceedings of the 28th IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER). IEEE, pp. 295-306, (2021)",Exclude,""
dynamic neural program embeddings for program repair,"Wang K., Su Z., Singh R., Dynamic Neural Program Embeddings for Program Repair, International Conference on Learning Representations, (2018)",Include,Exclude
improving performance of automatic program repair using learned heuristics,"Schramm L., Improving performance of automatic program repair using learned heuristics, Foundations of Software Engineering. ACM, pp. 1071-1073, (2017)",Exclude,""
leveraging syntax-related code for automated program repair,"Xin Q., Reiss S.P., Leveraging syntax-related code for automated program repair, Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering, pp. 660-670, (2017)",Include,Exclude
sequencer: sequence-to-sequence learning for end-to-end program repair,"Chen Z., James Kommrusch S., Tufano M., Pouchet L., Poshyvanyk D., Monperrus M., Sequencer: Sequence-To-sequence learning for end-To-end program repair, IEEE Trans. on Software Engineering, 2019, (2019)",Exclude,""
fixminer: mining relevant fix patterns for automated program repair,"Koyuncu A., Liu K., Bissyande T. F., Kim D., Klein J., Monperrus M., Le Traon Y., Fixminer: Mining relevant fix patterns for automated program repair, Empirical Software Engineering, pp. 1-45, (2020)",Exclude,""
s3: syntax-and semanticguided repair synthesis via programming by examples,"Xuan-Bach D.L., Chu D., Lo D., Le Goues C., Visser W., S3: Syntax-And semanticguided repair synthesis via programming by examples, Proceedings of the 11th Joint Meeting on Foundations of Software Engineering, pp. 593-604, (2017)",Exclude,""
on the efficiency of test suite based program repair: a systematic assessment of 16 automated repair systems for java programs,"Liu K., Wang S., Koyuncu A., Kim K., Bissyande T.F., Kim D., Wu P., Klein J., Mao X., Le Traon Y., On the efficiency of test suite based program repair: A systematic assessment of 16 automated repair systems for Java programs, Proceedings of the 42nd International Conference on Software Engineering ACM, pp. 615-627, (2020)",Exclude,""
towards practical program repair with ondemand candidate generation,"Hua J., Zhang M., Wang K., Khurshid S., Towards practical program repair with ondemand candidate generation, Proceedings of the 40th International Conference on Software Engineering, pp. 12-23, (2018)",Exclude,""
elixir: effective object oriented program repair,"Saha R.K., Lyu Y., Yoshida H., Prasad M.R., ELIXIR: Effective object oriented program repair, International Conference on Automated Software Engineering. IEEE, pp. 648-659, (2017)",Exclude,""
staged program repair with condition synthesis,"Long F., Rinard M., Staged program repair with condition synthesis, Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering, pp. 166-178, (2015)",Exclude,""
understanding the non-repairability factors of automated program repair techniques,"Lin B., Wang S., Wen M., Zhang Z., Wu H., Qin Y., Mao X., Understanding the non-repairability factors of automated program repair techniques, 2020 27th Asia-Pacific Software Engineering Conference (APSEC, pp. 71-80, (2020)",Exclude,""
neural program repair with execution-based backpropagation,"Ye H., Martinez M., Monperrus M., Neural program repair with execution-based backpropagation, International Conference on Software Engineering. ACM, pp. 1506-1518, (2022)",Include,Exclude
the remarkable role of similarity in redundancy-based program repair,"Chen Z., Monperrus M., The remarkable role of similarity in redundancy-based program repair, CoRR, (2018)",Exclude,""
is the cure worse than the disease overfitting in automated program repair,"Smith E.K., Barr E.T., Le Goues C., Brun Y., Is the cure worse than the disease overfitting in automated program repair, Proceedings of the 10th Joint Meeting on Foundations of Software Engineering, pp. 532-543, (2015)",Exclude,""
neural program repair by jointly learning to localize and repair,"Vasic M., Kanade A., Maniatis P., Bieber D., Singh R., Neural program repair by jointly learning to localize and repair, 7th International Conference on Learning Representations, ICLR 2019. OpenReview.net, (2019)",Include,Include
quixbugs: a multi-lingual program repair benchmark set based on the quixey challenge,"Lin D., Koppel J., Chen A., Solar-Lezama A., QuixBugs: A multi-lingual program repair benchmark set based on the Quixey challenge, Proceedings Companion of the 2017 ACM SIGPLAN International Conference on Systems, Programming, Languages, and Applications: Software for Humanity. ACM, pp. 55-56, (2017)",Exclude,""
dynamoth: dynamic code synthesis for automatic program repair,"Durieux T., Monperrus M., DynaMoth: Dynamic code synthesis for automatic program repair, Proceedings of the 11th International Workshop in Automation of Software Test, pp. 85-91, (2016)",Exclude,""
a genetic programming approach to automated software repair,"Forrest S., Nguyen T., Weimer W., Le Goues C., A genetic programming approach to automated software repair, Proceedings of the 11Th Annual Conference on Genetic and Evolutionary Computation, pp. 947-954, (2009)",Exclude,""
lsrepair: live search of fix ingredients for automated program repair,"Liu K., Koyuncu A., Kim K., Kim D., Bissyande T.F., LSRepair: Live search of fix ingredients for automated program repair, Asia-Pacific Software Engineering Conference, pp. 658-662, (2018)",Exclude,""
precise condition synthesis for program repair,"Xiong Y., Wang J., Yan R., Zhang J., Han S., Huang G., Zhang L., Precise condition synthesis for program repair, Proceedings of the 39th IEEE/ACM International Conference on Software Engineering. IEEE, pp. 416-426, (2017)",Exclude,""
overfitting in semantics-based automated program repair,"Xuan Bach D.L., Thung F., Lo D., Le Goues C., Overfitting in semantics-based automated program repair, Empirical Software Engineering, 23, 5, pp. 3007-3033, (2018)",Exclude,""
repairing programs with semantic code search (t),"Ke Y., Stolee K.T., Le Goues C., Brun Y., Repairing programs with semantic code search (T), 30th IEEE/ACM International Conference on Automated Software Engineering, ASE 2015, pp. 295-306, (2015)",Exclude,""
an empirical study on the effect of dynamic slicing on automated program repair efficiency,"Guo A., Mao X., Yang D., Wang S., An empirical study on the effect of dynamic slicing on automated program repair efficiency, 2018 IEEE International Conference on Software Maintenance and Evolution (ICSME), pp. 554-558, (2018)",Exclude,""
the living review on automated program repair,"Monperrus M., The living review on automated program repair, HAL/Archives-Ouvertes. Fr, (2018)",Exclude,""
anti-patterns in search-based program repair,"Hwei Tan S., Yoshida H., Prasad M.R., Roychoudhury A., Anti-patterns in search-based program repair, Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 727-738, (2016)",Exclude,""
automatic program repair using genetic programming,"Le Goues C., Automatic Program Repair Using Genetic Programming, (2013)",Exclude,""
automated program repair,"Le Goues C., Pradel M., Roychoudhury A., Automated program repair, Commun ACM, 62, 12, pp. 56-65, (2019)",Exclude,""
codeflaws: a programming competition benchmark for evaluating automated program repair tools,"Tan S.H., Yi J., Mechtaev Y.S., Roychoudhury A., Codeflaws: A programming competition benchmark for evaluating automated program repair tools, Proceedings of the 39th International Conference on Software Engineering, ICSE 2017, pp. 180-182, (2017)",Exclude,""
sorting and transforming program repair ingredients via deep learning code similarities,"White M., Tufano M., Martinez M., Monperrus M., Poshyvanyk D., Sorting and transforming program repair ingredients via deep learning code similarities, Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution and Reengineering, pp. 479-490, (2019)",Include,Include
contract-based program repair without the contracts,"Chen L., Pei Y., Furia C.A., Contract-based program repair without the contracts, Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering, pp. 637-647, (2017)",Exclude,""
constraint-based program debugging using data structure repair,"Malik M.Z., Siddiqui J.H., Khurshid S., Constraint-based program debugging using data structure repair, International Conference on Software Testing, Verification and Validation. IEEE, pp. 190-199, (2011)",Exclude,""
dlfix: context-based code transformation learning for automated program repair,"Li Y., Wang S.-H., Nguyen T.N., Dlfix: Context-based code transformation learning for automated program repair, Proceedings of the ACM/IEEE 42Nd International Conference on Software Engineering, ICSE ’20, pp. 602-614, (2020)",Exclude,""
cure: code-aware neural machine translation for automatic program repair,"Jiang N., Lutellier T., Tan L., Cure: Code-aware neural machine translation for automatic program repair, ICSE, pp. 1161-1173, (2021)",Include,Exclude
compilation error repair: for the student programs,"Ahmed U. Z., Kumar P., Karkare A., Kar P., Gulwani S., Compilation error repair: for the student programs, from the student programs, ICSE, (2018)",Exclude,""
program repair with repeated learning,"Chen L., Pei Y., Pan M., Zhang T., Wang Q., Furia C.A., Program repair with repeated learning, Transactions on Software Engineering, (2022)",Exclude,""
standup4npr: standardizing setup for empirically comparing neural program repair systems,"Zhong W., Ge H., Ai H., Li C., Liu K., Ge J., Bin L., StandUp4NPR: Standardizing setup for empirically comparing neural program repair systems, International Conference on Automated Software Engineering. IEEE, (2022)",Exclude,""
pelas – program error-locating assistant system,"Korel B., PELAS – program error-locating assistant system, IEEE Transactions on Software Engineering, 9, (1998)",Exclude,""
circle: continual repair across programming languages,"Yuan W., Zhang Q., He T., Fang C., Hung N.Q.V., Hao X., Yin H., CIRCLE: Continual repair across programming languages, International Symposium on Software Testing and Analysis. ACM, pp. 678-690, (2022)",Exclude,""
verifix: verified repair of programming assignments,"Ahmed U.Z., Fan Z., Yi J., Al-Bataineh O.I., Roychoudhury A., Verifix: Verified repair of programming assignments, ACM Trans. Softw. Eng. Methodol",Exclude,""
exploring true test overfitting in dynamic automated program repair using formal methods,"Nilizadeh A., Leavens G.T., Xuan-Bach D.L., Pasareanu C.S., Cok D.R., Exploring true test overfitting in dynamic automated program repair using formal methods, Proceedings of the 14th IEEE International Conference on Software Testing, Verification and Validation, (2021)",Exclude,""
you cannot fix what you cannot find! an investigation of fault localization bias in benchmarking automated program repair systems,"Liu K., Koyuncu A., Bissyande T.F., Kim D., Klein J., Le Traon Y., You cannot fix what you cannot find! An investigation of fault localization bias in benchmarking automated program repair systems, Proceedings of the 12th IEEE International Conference on Software Testing, Verification and Validation. IEEE, pp. 102-113, (2019)",Exclude,""
arja: automated repair of java programs via multi-objective genetic programming,"Yuan Y., Banzhaf W., Arja: automated repair of java programs via multi-objective genetic programming, IEEE Trans Software Eng, 46, 10, pp. 1040-1067, (2018)",Exclude,""
tbar: revisiting template-based automated program repair,"Liu K., Koyuncu A., Kim D., Bissyande T.F., TBar: Revisiting template-based automated program repair, Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis. ACM, pp. 31-42, (2019)",Exclude,""
ultra-large repair search space with automatically mined templates: the cardumen mode of astor,"Martinez M., Monperrus M., Ultra-large repair search space with automatically mined templates: The Cardumen mode of Astor, Proceedings of the 10th International Symposium on Search Based Software Engineering, pp. 65-86, (2018)",Exclude,""
dear: a novel deep learning-based approach for automated program repair,"Li Y., Wang S., Nguyen T.N., DEAR: A novel deep learning-based approach for automated program repair, International Conference on Software Engineering. ACM, pp. 511-523, (2022)",Include,Include
mining software repair models for reasoning on the search space of automated program fixing,"Martinez M., Monperrus M., Mining software repair models for reasoning on the search space of automated program fixing, Empirical Software Engineering, 20, 1, pp. 176-205, (2015)",Exclude,""
mining stackoverflow for program repair,"Liu X., Zhong H., Mining stackoverflow for program repair, Proceedings of the 25th IEEE International Conference on Software Analysis, Evolution and Reengineering. IEEE, pp. 118-129, (2018)",Exclude,""
genprog: a generic method for automatic software repair,"Le Goues C., Nguyen T., Forrest S., Weimer W., Genprog: a generic method for automatic software repair, IEEE Trans Software Eng, 38, 1, (2012)",Exclude,""
shaping program repair space with existing patches and similar code,"Jiang J., Xiong Y., Zhang H., Gao Q., Chen X., Shaping program repair space with existing patches and similar code, Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis. ACM, pp. 298-309, (2018)",Exclude,""
better test cases for better automated program repair,"Yang J., Zhikhartsev A., Liu Y., Tan L., Better test cases for better automated program repair, Proceedings of the 11th Joint Meeting on Foundations of Software Engineering, pp. 831-841, (2017)",Exclude,""
