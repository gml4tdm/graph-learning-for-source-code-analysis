Full Reference,Inclusion,Has PDF,Reason
"Raychev V., Vechev M., Krause A., Predicting program properties from ”Big Code”, SIGPLAN Not., 50, 1, pp. 111-124, (2015)",Include,Yes,"I1.1,I1.2"
"Sulun E., Tuzun E., Dogrusoz U., Reviewer recommendation using software artifact traceability graphs, International Conference on Predictive Models and Data Analytics in Software Engineering, pp. 66-75, (2019)",Exclude,Yes,E1.1
"Yan H., Sui Y., Chen S., Xue J., Spatio-Temporal Context Reduction: A Pointer-Analysis-Based Static Approach for Detecting Useafter-Free Vulnerabilities, Proceedings of the 40th International Conference on Software Engineering (ICSE ?18, (2018)",Exclude,Yes,E1.1
"Brockschmidt M., Allamanis M., Gaunt A.L., Polozov O., Generative Code Modeling with Graphs, International Conference on Learning Representations, (2019)",Include,Yes,I1.1
"DAI H., TIAN Y., DAI B., SKIENA S., SONG L., Syntax-directed variational autoencoder for structured data, Proceedings of the 6th International Conference on Learning Representations, (2018)",Include,Yes,I1.1
"Shi E., Et al., Cast: Enhancing code summarization with hierarchical splitting and reconstruction of abstract syntax trees, (2021)",Include,Yes,I1.1
"Li Z., Zou D., Xu S., Chen Z., Zhu Y., Jin H., 2021 VulDeeLocator: A Deep Learning-based Fine-grained Vulnerability Detector IEEE Transactions on Dependable and Secure Computing, 1, 2021, pp. 1-1",Exclude,Yes,E1.1
"Sparks S., Embleton S., Cunningham R., Zou C.C., Automated vulnerability analysis: Leveraging control flow for evolutionary input crafting, 23rd Annual Computer Security Applications Conference (ACSAC 2007), December 10-14, 2007, Miami Beach, Florida, USA, pp. 477-486, (2007)",Include,Yes,I1.1?
"Yan J., Sun H., Wang X., Liu X., Song X., Profiling Developer Expertise Across Software Communities With Heterogeneous Information Network Analysis, Proceedings of the Tenth Asia-Pacific Symposium on Internetware, pp. 1-9, (2018)",Include,Yes,discuss inclusion
"Liu S., Gao C., Chen S., Lun Yiu N., Liu Y., Atom: Commit message generation based on abstract syntax tree and hybrid ranking, IEEE Transactions on Software Engineering, (2020)",Include,Yes,I1.1
"Wan Y., Zhao Z., Yang M., Xu G., Ying H., Wu J., Yu P.S., Improving automatic source code summarization via deep reinforcement learning, Ase, pp. 397-407, (2018)",Include,Yes,I1.1
"Lin C., Ouyang Z., Zhuang J., Chen J., Li H., Wu R., Improving code summarization with block-wise abstract syntax tree splitting, 2021 IEEE/ACM 29th International Conference on Program Comprehension, pp. 184-195, (2021)",Include,Yes,I1.1
"Svyatkovskiy A., Lee S., Hadjitofi A., Riechert M., Franco J., Allamanis M., Fast and memory-efficient neural code completion, (2020)",Exclude,Yes,E1.1
"Linares-Vasquez M., Mcmillan C., Poshyvanyk D., Grechanik M., On using machine learning to automatically classify software applications into domain categories, Empirical Software Engineering, 19, 3, pp. 582-618, (2014)",Exclude,Yes,E1.1
"Lyu C., Wang R., Zhang H., Zhang H., Hu S., Embedding API dependency graph for neural code generation, Empirical Softw. Eng., 26, 4, pp. 1-51, (2021)",Include,Yes,"I1.1,I1.2"
"Zhou Y., Yan X., Yang W., Chen T., Huang Z., Augmenting java method comments generation with context information based on neural networks, J. Syst. Softw., 156, Oct., pp. 328-340, (2019)",Exclude,Yes,E1.1
"Wei B., Li G., Xia X., Fu Z., Jin Z., Code generation as a dual task of code summarization, Advances in Neural Information Processing Systems, pp. 6563-6573, (2019)",Exclude,Yes,E1.1
"Habib A., Pradel M., Is this class thread-safe? Inferring documentation using graph-based learning, ASE, pp. 41-52, (2018)",Include,Yes,I1.1
"Yin P., Neubig G., Allamanis M., Brockschmidt M., Gaunt A.L., Learning to Represent Edits, International Conference on Learning Representations, (2019)",Include,Yes,I2.1
"Tang Z., Shen X., Li C., Ge J., Huang L., Zhu Z., Luo B., AST-trans: Code summarization with efficient tree-structured attention, 44th IEEE/ACM 44th International Conference on Software Engineering, ICSE 2022, pp. 150-162, (2022)",Include,Yes,I1.1
"Weimer W., Necula G.C., Mining temporal specifications for error detection, TACAS, pp. 461-476, (2005)",Include,Yes,I2.1
"Zhang Y., Fan Y., Hou S., Ye Y., Xiao X., Li P., Shi C., Zhao L., Xu S., Cyber-Guided Deep Neural Network For Malicious Repository Detection In Github, 2020 IEEE International Conference on Knowledge Graph (ICKG), pp. 458-465, (2020)",Include,Yes,I1.1
"Alon U., Zilberstein M., Levy O., A general path-based representation for predicting program properties., (2018)",Include,Yes,I1.1
"Li A., Xue S., Li X., Zhang L., Qian J., Appdna: Profiling app behavior via deep-learning on function call graphs, IEEE Transactions on Emerging Topics in Computing, (2020)",Exclude,Yes,
"Liang H., Yang Y., Sun L., Jiang L., JSAC: a novel framework to detect malicious javascript via CNNs over AST and CFG, 2019 International Joint Conference on Neural Networks (IJCNN), pp. 1-8, (2019)",Include,Yes,I1.1
"Ghaffarian S.M., Shahriari H.R., Neural software vulnerability analysis using rich intermediate graph representations of programs, Information Sciences, 553, pp. 189-207, (2021)",Include,Yes,I1.1
"Zaidman A., Demeyer S., Automatic identification of key classes in a software system using webmining techniques, J. Softw. Maintenance Res. Pract., 20, 6, pp. 387-417, (2008)",Include,Yes,I2.1
"Romanov V., Ivanov V., Succi G., Representing programs with dependency and function call graphs for learning hierarchical embeddings, ICEIS, 2, pp. 360-366, (2020)",Include,Yes,I1.1
"Park E., Cavazos J., Alvarez M.A., Using graph-based program characterization for predictive modeling, Proceedings of the Tenth International Symposium on Code Generation and Optimization, pp. 196-206, (2012)",Exclude,Yes,I2.2(E1.3)
"Control flow graph embedding based on multi-instance decomposition for bug localization, Proceedings of the 34Th AAAI Conference on Artificial Intelligence, Volume 34, pp. 4223-4230, (2020)",Include,Yes,I2.1
"Liu F., Li G., Wei B., Xia X., Fu Z., Jin Z., A self-attentional neural architecture for code completion with multi-task learning, Proc. 28th Int. Conf. Prog. Comprehension, pp. 37-47, (2020)",Include,Yes,I1.1
"Cvitkovic M., Singh B., Anandkumar A., Deep learning on code with an unbounded vocabulary, CAV, (2018)",Include,Yes,"I1.1,I1.2"
"Qu Y., Yin H., Evaluating network embedding techniques’ performances in software bug prediction, Empir. Softw. Eng., 26, 4, pp. 1-44, (2021)",Exclude,Yes,I1.8
"Yamaguchi F., Golde N., Arp D., Rieck K., Modeling and discovering vulnerabilities with code property graphs, Proc. IEEE Symp. Secur. Privacy, pp. 590-604, (2014)",Exclude,Yes,E1.1
"Cheng X., Wang H., Hua J., Zhang M., Xu G., Yi L., Sui Y., Static detection of control-flow-related vulnerabilities using graph embedding, 2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS’19), pp. 41-50, (2019)",Include,Yes,I1.1
"Mou L., Li G., Zhang L., Wang T., Jin Z., Convolutional Neural Networks over Tree Structures for Programming Language Processing, Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence, pp. 1287-1293, (2016)",Include,Yes,I1.1
"Bruschi D., Martignoni L., Monga M., Detecting self-mutating malware using control-flow graph matching, Proc. Int. Conf. Detection Intrusions Malware Vulnerability Assessment, Springer, pp. 129-143, (2006)",Exclude,Cannot Access,
"Tarlow D., Moitra S., Rice A., Chen Z., Manzagol P., Sutton C., Aftandilian E., Learning to fix build errors with graph2diff neural networks, ICSE '20: 42nd International Conference on Software Engineering, pp. 19-20, (2020)",Include,Yes,"I1.1,I1.2"
"Hu X., Li G., Xia X., Lo D., Jin Z., Deep code comment generation with hybrid lexical and syntactical information, Empir. Softw. Eng., 25, 3, pp. 2179-2217, (2020)",Include,Yes,I1.1
"Li J., Wang Y., Lyu M.R., King I., Code completion with neural attention and pointer networks, Proceedings of the twenty-seventh international joint conference on artificial intelligence, IJCAI, pp. 4159-4165, (2018)",Include,Yes,I1.1
"Li Z., Zou D., Xu S., Et al., Vuldeepecker: a deep learning-based system for vulnerability detection. Proceedings of the Network and Distributed Systems Security (NDSS) Symposium 2018",Exclude,Yes,E2.2(E1.1)
"Chakraborty S., Ding Y., Allamanis M., Ray B., CODIT: Code editing with treebased neural models, IEEE Transactions on Software Engineering, (2020)",Include,Yes,I1.1
"Utture A., Liu S., Kalhauge C.G., Palsberg J., Striking a balance: pruning false-positives from static call graphs, Proceedings of the 44Th International Conference on Software Engineering (ICSE ’22), pp. 2043-2055, (2022)",Include,Yes,I1.1 (?)
"Chen X., Liu C., Song D., Tree-to-tree neural networks for program translation, NIPS'18 Proceedings of the 32nd International Conference on Neural Information Processing Systems, 31, pp. 2552-2562, (2018)",Include,Yes,I1.1(?)
"Gupta R., Kanade A., Shevade S., Deep reinforcement learning for programming language correction, AAAI, (2019)",Exclude,Yes,E1.1
"Benjamin Livshits V., Lam M.S., Tracking pointers with path and context sensitivity for bug detection in C programs, Proceedings of the 9th European software engineering conference held jointly with 11th ACM SIGSOFT international symposium on Foundations of software engineering, pp. 317-326, (2003)",Exclude,Yes,E1.1
"Hardekopf B., Lin C., Flow-sensitive pointer analysis for millions of lines of code, Proceedings of the 9th Annual IEEE/ACM International Symposium on Code Generation and Optimization (CGO’11), pp. 289-298, (2011)",Exclude,Yes,E1.1
"Xiaomeng W., Tao Z., Runpu W., Wei X., Changyu H., Cpgva: Code property graph based vulnerability analysis by deep learning, 2018 10th International Conference on Advanced Infocomm Technology (ICAIT), pp. 184-188, (2018)",Include,Yes,I1.1
"Pan W., Ming H., Chang C.K., Yang Z., Kim D., ElementRank: Ranking Java software classes and packages using a multilayer complex network-based approach, IEEE Trans. Softw. Eng., 47, 10, pp. 2272-2295, (2021)",Include,Yes,I1.1
"Mi Q., Hao Y., Ou L., Ma W., Towards using visual, semantic and structural features to improve code readability classification, J Syst Softw, 193, (2022)",Exclude,Yes,I2.2(I1.1)
"Zanoni M., Fontana F.A., Stella F., On applying machine learning techniques for design pattern detection, J. Syst. Softw., 103, pp. 102-117, (2015)",Include,Yes,I2.1
"Lazarine B., Samtani S., Patton M., Zhu H., Ullman S., Ampel B., Chen H., Identifying Vulnerable Github Repositories And Users In Scientific Cyberinfrastructure: An Unsupervised Graph Embedding Approach, 2020 IEEE International Conference on Intelligence and Security Informatics (ISI), pp. 1-6, (2020)",Include,Yes,"I1.1,I1.2"
"Cummins C., Fisches Z.V., Ben-Nun T., Hoefler T., Leather H., ProGraML: Graph-based Deep Learning for Program Optimization and Analysis, (2020)",Include,Yes,"I1.1,I1.2"
"Yao Z., Peddamail J. R., Sun H., CoaCor: Code Annotation for Code Retrieval with Reinforcement Learning, The World Wide Web Conference, pp. 2203-2214, (2019)",Exclude,Yes,I1.1
"Zhang J., Wang X., Zhang H., Sun H., Liu X., Retrieval-based neural source code summarization, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE)., pp. 1385-1397, (2020)",Exclude,Yes,I2.2(I1.1)
"Ni C., Wang W., Yang K., Xia X., Liu K., Lo D., The best of both worlds: integrating semantic features with expert features for defect prediction and localization, Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 672-683, (2022)",Exclude,Yes,I2.2(I1.1)
"Yao Z., Xu F.F., Yin P., Sun H., Neubig G., Learning structural edits via incremental tree transformations, 9Th International Conference on Learning Representations, ICLR 2021, Virtual Event, Austria, May 3–7, 2021, Openreview.Net, (2021)",Include,Yes,I1.1
"Gulwani S., Radicek I., Zuleger F., Automated clustering and program repair for introductory programming assignments, PLDI 2018, pp. 465-480, (2018)",Exclude,Yes,E1.1
"Liu F., Zhang L., Jin Z., Modeling programs hierarchically with stack-augmented lstm, Journal of Systems and Software, 164, (2020)",Include,Yes,I1.1
"Heo K., Lee W., Pashakhanloo P., Naik M., Effective program debloating via reinforcement learning, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, pp. 380-394, (2018)",Exclude,Yes,I2.2(I1.1)
"Piech C., Huang J., Nguyen A., Phulsuksombati M., Sahami M., Guibas L., Learning program embeddings to propagate feedback on student code, International conference on machine Learning, pp. 1093-1102, (2015)",Exclude,Yes,E1.3
"Gupta R., Kanade A., Shevade S., Neural attribution for semantic bug-localization in student programs, NeurIPS, (2019)",Include,Yes,I1.1
"Liang H., Sun L., Wang M., Yang Y., Deep learning with customized abstract syntax tree for bug localization, IEEE Access, 7, pp. 116309-116320, (2019)",Include,Yes,"I1.1,I1.2"
"Zhang J., Xie R., Ye W., Zhang Y., Zhang S., Exploiting code knowledge graph for bug localization via bi-directional attention, pp. 219-229, (2020)",Include,Yes,I2.2
"Zhu Z., Li Y., Tong H., Wang Y., COOBA: Cross-project bug localization via adversarial transfer learning, pp. 3565-3571, (2020)",Include,Yes,I1.1
"Wong W.E., Qi Y., BP Neural Network-based Effective Fault Localization, International Journal of Software Engineering and Knowledge Engineering, 19, 4, (2019)","",Cannot Access,
"Li X., Li W., Zhang Y., Zhang L., Deepfl: Integrating multiple fault diagnosis dimensions for deep fault localization, Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis, pp. 169-180, (2019)",Exclude,Yes,E2.2(E1.1)
"Zhong H., Mei H., Learning a graph-based classifier for fault localization, Science China Information Sciences, 63, (2020)",Include,Yes,I1.1
"Wang Z., Zheng Q., Sun Y., GVD-net: graph embedding-based machine learning model for smart contract vulnerability detection. Proceedings of the 2022 International Conference on Algorithms, Data Mining, and Information Technology",Include,Yes,I2.2
"Buch L., Andrzejak A., Learning-based recursive aggregation of abstract syntax trees for code clone detection. Proceedings of the 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering",Include,Yes,I1.1
"Bowman B., Huang H.H., VGRAPH: a robust vulnerable code clone detection system using code property triplets. Proceedings of the 2020 IEEE European Symposium on Security and Privacy",Include,Yes,I1.1
"Cheng X., Wang H., Hua J., Et al., Static detection of control-flow-related vulnerabilities using graph embedding. Proceedings of the 2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)",Include,Yes,I1.1
"Li Z., Li H., Peter Chen T., Shang W., 2021 DeepLV: Suggesting Log Levels Using Ordinal Based Neural Networks, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE). 1461-1472",Include,Yes,I2.2
"DeFreez D., Thakur A.V., Rubio-Gonzalez C., Path-based function embedding and its application to error-handling specification mining, ESEC/FSE, pp. 423-433, (2018)",Include,Yes,I1.1
"Kang H. J., Lo D., Active learning of discriminative subgraph patterns for api misuse detection, IEEE Transactions on Software Engineering, (2021)",Include,Yes,I1.1
"Chen C., Et al., Generative API usage code recommendation with parameter concretization, SCIENCE CHINA Inf. Sci., 62, 9, pp. 1921031-19210322, (2019)",Include,Yes,I1.1
"Ling C., Zou Y., Xie B., Graph neural network based collaborative filtering for api usage recommendation, Proceedings of the 2021 IEEE International Conference on Software Analysis, Evolution and Reengineering, pp. 36-47, (2021)",Include,Yes,
"Wang Y., Li H., Code Completion by Modeling Flattened Abstract Syntax Trees as Graphs. Arxiv Preprint Arxiv, 2103, (2021)",Include,Yes,I1.1
"Mehrotra N., Agarwal N., Gupta P., Anand S., Lo D., Purandare R., Modeling Functional Similarity in Source Code with Graph-Based Siamese Networks. Arxiv Preprint Arxiv, 2011, (2020)",Include,Yes,I1.1
"Liu H., Jin J., Xu Z., Et al., Deep Learning Based Code Smell De-tection, IEEE Trans. Software Engineering, 47, (2021)",Exclude,Yes,I2.2(E1.1)
"Hadj-Kacem M., Bouassida N., A hybrid approach to detect code smells using deep learning, Proceedings of the 13th International Conference on Eval- Uation of Novel Approaches to Software Engineering. SciTePress, pp. 137-146, (2018)",Exclude,Yes,I2.2(E1.1)
"Hoang T., Lawall J., Tian Y., Oentaryo R.J., Lo D., PatchNet: Hierarchical deep learning-based stable patch identification for the linux kernel, IEEE Trans. Softw. Eng., 47, 11, pp. 2471-2486, (2021)",Exclude,Yes,E1.1
"Wang X., Wang S., Feng P., Sun K., Jajodia S., Benchaaboun S., Geck F., PatchRNN: A deep learning-based system for security patch identification, CoRR, (2021)",Exclude,Yes,E1.1
"Bui Q.N.D., Yu Y., Jiang L., TreeCaps: Tree-Based Capsule Networks for Source Code Processing, Thirty-Fifth AAAI Conference on Artificial Intelligence, AAAI 2021, Thirty-Third Conference on Innovative Applications of Artificial Intelligence, IAAI 2021, The Eleventh Symposium on Educational Advances in Artificial Intelligence, EAAI 2021, pp. 30-38, (2021)",Include,Yes,I1.1
"Hua W., Sui Y., Wan Y., Liu G., Xu G., FCCA: Hybrid code representation for functional clone detection using attention networks, IEEE Trans. Reliabil., 70, pp. 304-318, (2020)",Include,Yes,I1.1
"White M., Tufano M., Vendome C., Poshyvanyk D., Deep learning code fragments for code clone detection, ASE, (2016)",Include,Yes,I2.3
"Zeng J., Ben K., Li X., Zhang X., Fast code clone detection based on weighted recursive autoencoders, IEEE Access, 7, pp. 125062-125078, (2019)",Include,Yes,I2.3
"Yu H., Lam W., Chen L., Li G., Xie T., Wang Q., Neural detection of semantic code clones via tree-based convolution, Proceedings of the 27th International Conference on Program Comprehension, pp. 70-80, (2019)",Include,Yes,I1.1
"Fang C., Liu Z., Shi Y., Huang J., Shi Q., Functional code clone detection with syntax and semantics fusion learning, pp. 516-527, (2020)",Include,Yes,I1.1
"Wei H., Li M., Supervised deep features for software functional clone detection by exploiting lexical and syntactical information in source code, IJCAI, pp. 3034-3040, (2017)",Include,Yes,I1.1
"Higo Y., Yasushi U., Nishino M., Kusumoto S., Incremental code clone detection: A pdg-based approach, Proceedings of the 2011 18th Working Conference on Reverse Engineering, pp. 3-12, (2011)",Exclude,Yes,E1.1
"Nafi K.W., Kar T.S., Roy B., Roy C.K., Schneider K.A., Cross language code clone detection using syntactical features and API documentation, Proceedings - 2019 34Th IEEE/ACM International Conference on Automated Software Engineering, pp. 1026-1037, (2019)",Include,Yes,I2.3
"Ullah F., Jabbar S., Al-Turjman F., Programmers' de-anonymization using a hybrid approach of abstract syntax tree and deep learning, Tech-nol. Forecasting Social Change, 159, (2020)",Include,Yes,I1.1
"Zhang J., Wang X., Zhang H., Sun H., Wang K., Liu X., A novel neural source code representation based on abstract syntax tree, Proceedings of the 41st International Conference on Software Engineering, ICSE 2019, pp. 783-794, (2019)",Include,Yes,I1.1
"Tufano M., Watson C., Bavota G., Di Penta M., White M., Poshyvanyk D., Deep learning similarities from different representations of source code, MSR, (2018)",Include,Yes,I1.1
"Gu W., Et al., CRaDLe: Deep code retrieval based on semantic dependency learning, Neural Netw, 141, pp. 385-394, (2021)",Include,Yes,I1.1
"Zhao G., Huang J., Deepsim: deep learning code functional similarity, pp. 141-151, (2018)",Include,Yes,I1.1
"Chakraborty S., Ray B., On multi-modal learning of editing source code, ASE, pp. 443-455, (2021)",Exclude,Yes,
"Bogdanova A., Source code authorship attribution using file embeddings, Proc. ACM SIGPLAN Int. Conf. Syst., Program., Lang., Appl., Softw. Hum., pp. 31-33, (2021)",Exclude,Yes,E2.2(E1.1)
"Bui N.D.Q., Yu Y., Jiang L., 2021 Self-Supervised Contrastive Learning for Code Retrieval and Summarization via Semantic-Preserving Transformations, Proceedings of the 44th International ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR ?21). ACM, pp. 511-521",Include,Yes,I1.1
"Bui N.D.Q., Yu Y., Jiang L., Bilateral dependency neural networks for cross-language algorithm classification, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). IEEE, pp. 422-433, (2019)",Include,Yes,I1.1
"Liu S., A Unified Framework to Learn Program Semantics with Graph Neural Networks, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE, (2020)",Include,Yes,I1.1
"Fang S., Tan Y., Zhang T., Et al., Effective prediction of bug-fixing priority via weighted graph convolutional networks[J], IEEE Trans. Reliab., 70, 2, pp. 563-574, (2021)",Exclude,Yes,E1.9
"Lacomis J., Yin P., Schwartz E., Allamanis M., Le Goues C., Neubig G., Vasilescu B., Dire: A Neural Approach to Decompiled Identifier Naming, pp. 628-639, (2019)",Include,Yes,I2.3
"Dinella E., Dai H., Li Z., Naik M., Song L., Wang K., Hoppity: Learning Graph Transformations to Detect and Fix Bugs in Programs, International Conference on Learning Representations, (2020)",Include,Yes,I2.3
"Xu S., Zhang S., Wang W., Cao X., Guo C., Xu J., Method name suggestion with hierarchical attention networks, Proceedings of the 2019 Acm Sigplan Workshop on Partial Evaluation and Program Manipulation, Acm, pp. 10-21, (2019)",Include,Yes,I2.3
"Huo X., Li M., Zhou Z.H., Et al., Learning Unified Features from Natural and Programming Languages for Locating Buggy Source Code, 16, pp. 1606-1612, (2016)",Exclude,Yes,E1.1
"Pradel M., Sen K., DeepBugs: A learning approach to name-based bug detection, Proc. ACM Program. Lang., 2, OOPSLA, pp. 1471-147:25, (2018)",Exclude,Yes,E1.1
"Meneely A., Williams L., Snipes W., Osborne J., Predicting failures with developer networks and social network analysis, Proceedings of the 16th ACM SIGSOFT International Symposium On Foundations of Software Engineering, pp. 13-23, (2008)",Include,Yes,I2.3
"Bird C., Nagappan N., Gall H., Murphy B., Devanbu P., Putting it all together: Using socio-technical networks to predict failures, 2009 20th International Symposium On Software Reliability Engineering, pp. 109-119, (2009)",Include,Yes,I2.3
"Chen L., Ma W., Zhou Y., Xu L., Wang Z., Chen Z., Xu B., Empirical analysis of network measures for predicting high severity software faults, Sci. China Inf. Sci., 59, 12, pp. 1-18, (2016)",Include,Yes,I1.1
"Ma W., Chen L., Yang Y., Zhou Y., Xu B., Empirical analysis of network measures for effort-aware fault-proneness prediction, Inf. Softw. Technol., 69, pp. 50-70, (2016)",Include,Yes,I2.3
"Li Y., Wong W.E., Lee S.Y., Wotawa F., Using tri-relation networks for effective software fault-proneness prediction, Ieee Access, 7, pp. 63066-63080, (2019)",Include,Yes,I2.3
"Zimmermann T., Nagappan N., Predicting defects using network analysis on dependency graphs, Proceedings of the 30th International Conference On Software Engineering, pp. 531-540, (2008)",Include,Yes,I2.3
"Hoang T., Jin Kang H., Lawall J., Lo D., CC2Vec: Distributed representations of code changes, Proceedings of the 42nd International Conference on Software Engineering, pp. 518-529, (2020)",Exclude,Yes,I2.2(E1.1)
"Faruk Rokon O., Yan P., Islam R., Faloutsos M., Repo2vec: A comprehensive embedding approach for determining repository similarity, ICSME, (2021)",Include,Yes,"I1.1,I1.2"
"Sui Y., Cheng X., Zhang G., Wang H., 2020 Flow2Vec: Value-Flow-Based Precise Code Embedding. Proc, ACM Program. Lang 4, (2020)",Exclude,Yes,E1.1
"Alon U., Zilberstein M., Levy O., Yahav E., 2019. Code2vec: Learning Distributed Representations of Code, 3, (2019)",Include,Yes,I1.1
"Cabrera Lozoya R., Baumann A., Sabetta A., Bezzi M., Commit2vec: Learning distributed representations of code changes, SN Computer Science, 2, 3, pp. 1-16, (2021)",Include,Yes,I1.1
"Sun Z., Zhu Q., Xiong Y., Sun Y., Mou L., Zhang L., TreeGen: A tree-based transformer architecture for code generation, AAAI, (2020)",Include,Yes,
"Ben-Nun T., Jakobovits A. S., Hoefler T., Neural code comprehension: a learnable representation of code semantics, Advances in Neural Information Processing Systems, pp. 3585-3597, (2018)",Include,Yes,I1.1
"Shido Y., Kobayashi Y., Yamamoto A., Miyamoto A., Matsumura T., Automatic Source Code Summarization with Extended Treelstm, (2019)",Include,Yes,
"Liu S., Chen Y., Xie X., Siow J., Liu Y., Automatic code summarization via multi-dimensional semantic fusing in GNN, CoRR, (2020)",Include,Yes,
"Brody S., Alon U., Yahav E., A structural model for contextual code changes, Proceedings of the ACM on Programming Languages, 4, pp. 1-28, (2020)",Include,Yes,I2.3
"Wei B., Li Y., Li G., Xia X., Jin Z., Retrieve and refine: Exemplarbased neural comment generation, Proc. IEEE/ACM 35th Int. Conf. Automated Softw. Eng, pp. 349-360, (2020)",Include,Yes,
"Wu H., Zhao H., Zhang M., Code summarization with structure-induced transformer, Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021, pp. 1078-1090, (2021)",Include,Yes,
"LeClair A., Jiang S., McMillan C., A neural model for generating natural language summaries of program subroutines, Icse, pp. 795-806, (2019)",Include,Yes,
"Zhou Z., Yu H., Fan G., Huang Z., Yang X., Summarizing source code with hierarchical code representation, Inf. Softw. Technol., 143, (2022)",Include,Yes,
"Gong Z., Gao C., Wang Y., Gu W., Peng Y., Xu Z., Source code summarization with structural relative position guided transformer, (2022)",Include,Yes,
"Hellendoorn V.J., Sutton C., Singh R., Maniatis P., Bieber D., Global relational models of source code, International Conference on Learning Representations, (2020)",Include,Yes,I1.1
"Zhou W., Junhua W., Code comments generation with data flow-guided transformer, Web Information Systems and Applications: 19Th International Conference, WISA 2022, Dalian, China, September 16–18, 2022, Proceedings, pp. 168-180, (2022)",Include,Yes,
"Zhang L., Rosenblatt G., Fetaya E., Liao R., Byrd W., Might M., Urtasun R., Zemel R., Neural guided constraint logic programming for program synthesis, Adv Neural Inf Process Syst, (2018)",Include,Yes,I1.1
"Guo D., Ren S., Lu S., Feng Z., Tang D., Liu S., Zhou L., Duan N., Svyatkovskiy A., Fu S., Et al., Graphcodebert: Pre-training code representations with data-ow, (2020)",Include,Yes,I1.1
"Wang Y., Dong Y., Lu X., Zhou A., Gypsum: Learning hybrid representations for code summarization, Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension, pp. 12-23, (2022)",Include,Yes,
"Jiang X., Zheng Z., Lyu C., Li L., Lyu L., Treebert: A tree-based pre-trained model for programming language, UAI 2021: Uncertainty in Artificial Intelligence, (2021)",Include,Yes,I1.1
"Yin P., Neubig G., A syntactic neural model for general-purpose code generation, Proc. 55th Annu. Meeting Assoc. Comput. Linguistics, pp. 440-450, (2017)",Include,Yes,
"Bui N.D.Q., Yu Y., Jiang L., InferCode: Self-Supervised Learning of Code Representations by Predicting Subtrees, 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)., pp. 1186-1197, (2021)",Include,Yes,I1.1
"Choi Y.S., Bak J.Y., Na C.W., Lee J.H., Learning sequential and structural information for source code summarization, Findings of the Association for Computational Linguistics: ACL-IJCNLP 2021, pp. 2842-2851, (2021)",Include,Yes,
"Vagavolu D., Swarna K. C., Chimalakonda S., A mocktail of source code representations, ASE, (2021)",Include,Yes,I1.1
"Peng H., Li G., Wang W., Zhao Y., Jin Z., Integrating tree path in transformer for code representation, Thirty-Fifth Conference on Neural Information Processing Systems, (2021)",Include,Yes,
"Gao Y., Lyu C., M2ts: Multi-scale multi-modal approach based on transformer for source code summarization, Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension, pp. 24-35, (2022)",Include,Yes,
"Rabinovich M., Stern M., Klein D., Abstract Syntax Networks for Code Generation and Semantic Parsing, Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pp. 1139-1149, (2017)",Include,Yes,
"Zhou Z., Yu H., Fan G., Effective approaches to combining lexical and syntactical information for code summarization, Softw Pract Exp, 50, 12, pp. 2313-2336, (2020)",Include,Yes,
"Sun Z., Zhu Q., Mou L., Xiong Y., Li G., Zhang L., A grammar- based structural CNN decoder for code generation, (2018)",Include,Yes,
"Lo W.W., Layeghy S., Sarhan M., Gallagher M., Portmann M., GNN-based Android Malware Detection with Jumping Knowledge, (2022)",Exclude,Yes,E1.9
"Hou S., Fan Y., Zhang Y., Ye Y., Lei J., Wan W., Wang J., Xiong Q., Shao F., cyber: Enhancing robustness of android malware detection system against adversarial attacks on heterogeneous graph based model, CIKM, (2019)",Exclude,Yes,E1.9
"Pei X., Yu L., Tian S., AMalnet: A deep learning framework based on graph convolutional networks for malware detection, Comput. Secur., 93, (2020)",Exclude,Yes,E1.9
"Hou S., Ye Y., Song Y., Abdulhayoglu M., Hindroid: An intelligent android malware detection system based on structured heterogeneous information network, KDD, (2017)",Exclude,Yes,E1.9
"Chen D., Chen X., Li H., Xie J., Mu Y., Deepcpdp: Deep learning based cross-project defect prediction, Ieee Access, 7, pp. 184832-184848, (2019)",Include,Yes,I1.1
"Zeng C., Zhou C.Y., Lv S.K., He P., Huang J., GCN2defect: Graph Convolutional Networks for SMOTETomek-based Software Defect Prediction, pp. 69-79, (2021)",Include,Yes,I1.1
"Zhang F., Zheng Q., Zou Y., Hassan A.E., Cross-project defect prediction using a connectivity-based unsupervised classifier, Proceedings of the 38th International Conference on Software Engineering, ICSE 2016, Austin, TX, USA, May 14-22, 2016, pp. 309-320, (2016)",Exclude,Yes,E1.1
"Xu Z., Li S., Xu J., Liu J., Luo X., Zhang Y., Zhang T., Keung J., Tang Y., LDFR: learning deep feature representation for software defect prediction, J Sys Soft, 158, (2019)",Exclude,Yes,I2.2(E1.1)
"Li J., He P., Zhu J., Lyu M.R., Software defect prediction via convolutional neural network, 2017 IEEE International Conference on Software Quality, Reliability and Security (QRS), pp. 318-328, (2017)",Include,Yes,I1.1
"Pornprasit C., Tantithamthavorn C., DeepLineDP: Towards a Deep Learning Approach for Line-Level Defect Prediction, IEEE Transactions on Software Engineering, 1, (2022)",Exclude,Yes,I2.2(E1.1)
"Xu J., Wang F., Ai J., Defect prediction with semantics and context features of codes based on graph representation learning, Ieee Trans. Reliab, pp. 1-13, (2020)",Include,Yes,I1.1
"Tian J., Tian Y., A model based on program slice and deep learning for software defect prediction, Proc.-Int. Conf. Comput. Commun. Networks, Icccn, pp. 2-7, (2020)",Include,Yes,I2.3
"Cai Z., Lu L., Qiu S., An abstract syntax tree encoding method for cross-project defect prediction, Ieee Access, 7, pp. 170844-170853, (2019)",Include,Yes,I2.3
"Yang Y., Ai J., Wang F., Defect prediction based on the characteristics of multilayer structure of software network, 2018 Ieee International Conference on Software Quality, Reliability and Security Companion (QRS-C), pp. 27-34, (2018)",Include,Yes,I2.3
"Shippey T., Bowes D., Hall T., Automatically identifying code features for software defect prediction: Using AST N-grams, Inf. Softw. Technol., 106, pp. 142-160, (2019)",Include,Yes,"I1.1,I1.2"
"Zhang Y., Jin D., Xing Y., Gong Y., Automated defect identification via path analysis-based features with transfer learning, The Journal of Systems & Software, 166, (2020)",Include,Yes,I1.1
"Meilong S., He P., Xiao H., Li H., Zeng C., An approach to semantic and structural features learning for software defect prediction, Math. Problems Eng., 2020, (2020)",Include,Yes,"I1.1,I1.2"
"Wang H., Zhuang W., Zhang X., Software Defect Prediction Based on Gated Hierarchical LSTMs, IEEE Transactions on Reliability, 70, 2, pp. 711-727, (2021)",Include,Yes,I1.1
"Nguyen V. H., Tran L. M. S., Predicting vulnerable software components with dependency graphs, Proceedings of the 6th International Workshop on Security Measurements and Metrics, ser. MetriSec'10, pp. 31-38, (2010)",Include,Yes,I2.3
"Zhou T., Sun X., Xia X., Li B., Chen X., Improving defect prediction with deep forest, Inform Soft Tech, 114, pp. 204-216, (2019)",Exclude,Yes,E1.1
"Qu Y., Liu T., Chi J., Jin Y., Cui D., He A., Zheng Q., node2defect: Using network embedding to improve software defect prediction, 2018 33rd IEEE/ACM International Conference on Automated Software Engineering, ASE, pp. 844-849, (2018)",Include,Yes,I1.1
"Pan C., Lu M., Xu B., Gao H., An improved CNN model for withinproject software defect prediction, Appl. Sci., 9, 10, (2019)",Include,Yes,I1.1
"Li Z., Zou D., Xu S., Ou X., Jin H., Wang S., Deng Z., Zhong Y., VulDeePecker: A deep learningbased system for vulnerability detection, 25th Annual Network and Distributed System Security Symposium, Ndss 2018, (2018)",Exclude,Yes,E1.1
"Li M., Li C., Li S., Wu Y., Zhang B., Wen Y., ACGVD: Vulnerability detection based on comprehensive graph via graph neural network with attention, International Conference on Information and Communications Security, pp. 243-259, (2021)",Include,Yes,I1.1
"Wu H., Zhang Z., Wang S., Lei Y., Lin B., Qin Y., Zhang H., Mao X., Peculiar: Smart contract vulnerability detection based on crucial data flow graph and pre-Training techniques, 2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE). IEEE, pp. 378-389, (2021)",Include,Yes,I1.1
"Kronjee J., Hommersom A., Vranken H., Discovering software vulnerabilities using data-flow analysis and machine learning, Proceedings of The 13th International Conference on Availability, Reliability and Security, Ser. ARES 2018, (2018)",Include,Yes,I1.1
"Li Z., Zou D., Xu S., Jin H., Zhu Y., Chen Z., SySeVR: A framework for using deep learning to detect software vulnerabilities, IEEE Trans. Dependable Secure Comput., (2021)",Include,Yes,I1.1
"Zhou L., Huang M., Li Y., Et al., GraphEye: A Novel Solution for Detecting Vulnerable Functions Based on Graph Attention Network [C], 2021 IEEE Sixth International Conference on Data Science in Cyberspace (DSC). IEEE, pp. 381-388, (2021)",Include,Yes,I1.1
"Heo K., Oh H., Yi K., Machine-learning-guided selectively unsound static analysis, Proc. IEEE/ACM 39th Int. Conf. Softw. Eng. (ICSE), pp. 519-529, (2017)",Exclude,Yes,I2.2(E1.1)
"Duan X., Wu J., Ji S., Rui Z., Luo T., Yang M., Wu Y., Vulsniper: Focus your attention to shoot fine-grained vulnerabilities., IJCAI, pp. 4665-4671, (2019)",Include,Yes,I1.1
"Jeon S., Kim H.K., Autovas: an automated vulnerability analysis system with a deep learning approach, Comput. Secur., 106, (2021)",Exclude,Yes,E1.1
"An W., Chen L., Wang J., Du G., Shi G., Meng D., AVDHRAM: Automated vulnerability detection based on hierarchical representation and attention mechanism, 2020 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking, ISPA/BDCloud/SocialCom/SustainCom, pp. 337-344, (2020)",Exclude,Yes,E1.1
"Bilgin Z., Ersoy M.A., Soykan E.U., Tomur E., Comak P., Karacay L., Vulnerability prediction from source code using machine learning, IEEE Access, 8, pp. 150672-150684, (2020)",Include,Yes,I1.1
"Nong Y., Ou Y., Pradel M., Chen F., Cai H., Generating realistic vulnerabilities via neural code editing: An empirical study, ESEC/FSE 2022, pp. 1097-1109, (2022)",Exclude,Yes,I2.2(E3.2)
"Cui L., Zhiyu H., Yang J., Fei H., Yun X., Vuldetector: Detecting vulnerabilities using weighted feature graph comparison, IEEE Transactions on Information Forensics and Security, 16, pp. 2004-2017, (2020)",Exclude,Yes,E1.1
"Li Z., Zou D., Xu S., Chen Z., Zhu Y., Jin H., VulDeeLocator: A Deep Learning-based Fine-grained Vulnerability Detector, 2, pp. 1-15, (2020)",Exclude,Yes,E1.1
"Liu Z., Qian P., Wang X., Zhu L., He Q., Ji S., Smart contract vulnerability detection: From pure neural network to interpretable graph feature and expert pattern fusion, (2021)",Include,Yes,"I1.1,I1,2(?)"
"Zhuang Y., Liu Z., Qian P., Liu Q., Wang X., He Q., Smart contract vulnerability detection using graph neural network, Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence, IJCAI 2020, pp. 3283-3290, (2020)",Include,Yes,I1.1
"Ban X., Liu S., Chen C., Chua C., A performance evaluation of deep-learnt features for software vulnerability detection, Concurrency Comput., Practice Experience, 31, (2019)",Include,Yes,I2.3
"Zhu Q., Sun Z., Xiao Y., Zhang W., Yuan K., Xiong Y., Zhang L., A syntax-guided edit decoder for neural program repair, Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering., pp. 341-353, (2021)",Include,Yes,I2.3
"Vasic M., Kanade A., Maniatis P., Bieber D., Singh R., Neural program repair by jointly learning to localize and repair, 7th International Conference on Learning Representations, ICLR 2019. OpenReview.net, (2019)",Exclude,Yes,E1.1
"White M., Tufano M., Martinez M., Monperrus M., Poshyvanyk D., Sorting and transforming program repair ingredients via deep learning code similarities, Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution and Reengineering, pp. 479-490, (2019)",Include,Yes,I2.3
"Li Y., Wang S., Nguyen T.N., DEAR: A novel deep learning-based approach for automated program repair, International Conference on Software Engineering. ACM, pp. 511-523, (2022)",Include,Yes,I2.3
