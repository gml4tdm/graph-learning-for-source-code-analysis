Title,Full Reference
examining the significance of high-level programming features in source code author classification,"Frantzeskou G., MacDonell S., Stamatatos E., Gritzalis S., Examining the significance of high-level programming features in source code author classification, J. Syst. Softw., 81, 3, pp. 447-460, (2008)"
towards prioritizing documentation effort,"McBurney P.W., Et al., Towards prioritizing documentation effort, IEEE Trans. Softw. Eng., 44, 9, pp. 897-913, (2018)"
improving code: the (mis) perception of quality metrics,"Pantiuchina J., Lanza M., Bavota G., Improving code: The (mis) perception of quality metrics, 2018 IEEE international conference on software maintenance and evolution (ICSME), pp. 80-91, (2018)"
determining differences in reading behavior between experts and novices by investigating eye movement on source code constructs during a bug fixing task,"Aljehane S., Sharif B., Maletic J., Determining differences in reading behavior between experts and novices by investigating eye movement on source code constructs during a bug fixing task, ACM Symposium on Eye Tracking Research and Applications. ACM, (2021)"
a study of different coding styles affecting code readability,"Lee T., Lee J.B., In H., A study of different coding styles affecting code readability, Int J Softw Eng Appl, 7, pp. 413-422, (2013)"
an empirical study assessing source code readability in comprehension,"Johnson J., Lubo S., Yedla N., Et al., An empirical study assessing source code readability in comprehension, 2019 IEEE International conference on software maintenance and evolution (ICSME), pp. 513-523, (2019)"
refactoring: improving the design of existing code,"Fowler M., Beck K., Brant J., Opdyke W., Roberts D., Refactoring: Improving the Design of Existing Code, (1999)"
learning a metric for code readability,"Buse R., Weimer W., Learning a metric for code readability, Softw Eng IEEE Trans, 36, pp. 546-558, (2010)"
a literature study of embeddings on source code,"Chen Z., Monperrus M., A literature study of embeddings on source code, Arxiv, 1904, (2019)"
the adverse effects of code duplication in machine learning models of code,"Allamanis Miltiadis, The adverse effects of code duplication in machine learning models of code, Proceedings of the 2019 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, pp. 143-153, (2019)"
program readability: procedures versus comments,"Tenny T., Program readability: Procedures versus comments, IEEE Trans. Software Eng., 14, 9, pp. 1271-1279, (1988)"
recommending insightful comments for source code using crowdsourced knowledge,"Rahman M.M., Roy C.K., Keivanloo I., Recommending insightful comments for source code using crowdsourced knowledge, Proc. IEEE 15th Int. Work. Conf. Source Code Anal. Manipulation, pp. 81-90, (2015)"
a general software readability model,"Dorn J., A General Software Readability Model, 5, pp. 11-14, (2012)"
jitline: a simpler,"Pornprasit C., Tantithamthavorn C.K., Jitline: A simpler, better, faster, finer-grained just-in-time defect prediction, 2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR). IEEE, pp. 369-379, (2021)"
whodo: automating reviewer suggestions at scale,"Asthana S., Kumar R., Bhagwan R., Bird C., Bansal C., Maddila C., Mehta S., Ashok B., Whodo: Automating reviewer suggestions at scale, Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, pp. 937-945, (2019)"
how does code readability change during software evolution?,"Piantadosi V., Fierro F., Scalabrino S., Et al., How does code readability change during software evolution?, Empir Softw Eng, 25, pp. 5374-5412, (2020)"
towards automating code review at scale,"Hellendoorn V.J., Tsay J., Mukherjee M., Hirzel M., Towards automating code review at scale, pp. 1479-1482, (2021)"
a large-scale study on source code reviewer recommendation,"Lipcak J., Rossi B., A large-scale study on source code reviewer recommendation, Euromicro Conference on Software Engineering and Advanced Applications (SEAA), pp. 378-387, (2018)"
a study of the time dependence of code changes,"Alam O., Adams B., Hassan A.E., A study of the time dependence of code changes, Reverse Engineering 2009. WCRE'09. 16th Working Conference On. IEEE, pp. 21-30, (2009)"
decoding the representation of code in the brain: an fmri study of code review and expertise,"Floyd B., Santander T., Weimer W., Decoding the representation of code in the brain: An fMRI study of code review and expertise, Proceedings of the 39th International Conference on Software Engineering, ICSE 2017, pp. 175-186, (2017)"
code summarization: do transformers really understand code?,"Sontakke A.N., Patwardhan M., Vig L., Medicherla R.K., Naik R., Shroff G., Code summarization: Do transformers really understand code?, Deep Learning for Code Workshop, (2022)"
a large scale study of programming languages and code quality in github,"Ray B., Posnett D., Filkov V., Devanbu P., A large scale study of programming languages and code quality in github, Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 155-165, (2014)"
a simpler model of software readability,"Posnett D., Hindle A., Devanbu P., A simpler model of software readability, Proceedings of the 8Th Working Conference on Mining Software Repositories, pp. 73-82, (2011)"
convergent contemporary software peer review practices,"Rigby P.C., Bird C., Convergent contemporary software peer review practices, International Symposium on the Foundations of Software Engineering, pp. 202-212, (2013)"
adversarial examples for evaluating reading comprehension systems,"Jia R., Liang P., Adversarial examples for evaluating reading comprehension systems, (2017)"
reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation,"Balachandran V., Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation, International Conference on Software Engineering, pp. 931-940, (2013)"
impact of peer code review on peer impression formation: a survey,"Bosu A., Carver J.C., Impact of peer code review on peer impression formation: A survey, International Symposium on Empirical Software Engineering and Measurement, pp. 133-142, (2013)"
core: automating review recommendation for code changes,"Siow J.K., Gao C., Fan L., Chen S., Liu Y., Core: Automating review recommendation for code changes, 2020 IEEE 27th International Conference on Software Analysis, Evolution and Reengineering (SANER), pp. 284-295, (2020)"
automatically recommending peer reviewers in modern code review,"Zanjani M.B., Kagdi H., Bird C., Automatically recommending peer reviewers in modern code review, IEEE Transactions on Software Engineering, 42, pp. 530-543, (2015)"
investigating code review quality: do people and participation matter?,"Kononenko O., Baysal O., Guerrouj L., Cao Y., Godfrey M.W., Investigating code review quality: Do people and participation matter?, IEEE international conference on software maintenance and evolution (ICSME), pp. 111-120, (2015)"
improving source code readability: theory and practice,"Fakhoury S., Roy D., Hassan S.A., Et al., Improving source code readability: Theory and practice, 2019 IEEE/ACM 27Th International Conference on Program Comprehension (ICPC), pp. 2-12, (2019)"
don't touch my code!: examining the effects of ownership on software quality,"Bird C., Nagappan N., Murphy B., Gall H., Devanbu P., Don't touch my code!: Examining the effects of ownership on software quality, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference On Foundations of Software Engineering. ACM, pp. 4-14, (2011)"
improving code readability models with textual features,"Scalabrino S., Linares-Vasquez M., Poshyvanyk D., Et al., Improving code readability models with textual features, In: 2016 IEEE 24Th International Conference on Program Comprehension (ICPC), IEEE, pp. 1-10, (2016)"
towards understanding code readability and its impact on design quality,"Mannan U.A., Ahmed I., Sarma A., Towards understanding code readability and its impact on design quality, Proceedings of the 4Th ACM SIGSOFT International Workshop on NLP for Software Engineering, pp. 18-21, (2018)"
clone refactoring with lambda expressions,"Tsantalis N., Mazinanian D., Rostami S., Clone refactoring with lambda expressions, 2017 IEEE/ACM 39th International Conference on Software Engineering, ICSE, pp. 60-70, (2017)"
on the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation,"Palomba F., Bavota G., Di Penta M., Fasano F., Oliveto R., De Lucia A., On the diffuseness and the impact on maintainability of code smells: A large scale empirical investigation, Empirical Software Engineering, 23, 3, pp. 1188-1221, (2018)"
an empirical study of the relationships between code readability and software complexity.,"Alawad D.M., Panta M., Zibran M.F., An empirical study of the relationships between code readability and software complexity., (2019)"
is this github project maintained? measuring the level of maintenance activity of open-source projects,"Coelho J., Tulio Valente M., Milen L., Silva L.L., Is this GitHub project maintained? Measuring the level of maintenance activity of open-source projects, Information and Software Technology, 122, (2020)"
assessing generalizability of codebert,"Zhou X., Han D.G., Lo D., Assessing generalizability of codebert, 2021 IEEE International Conference on Software Maintenance and Evolution (ICSME), Pp. 425â€“436. IEEE, (2021)"
do code smells impact the effort of different maintenance programming activities?,"Soh Z., Yamashita A., Khomh F., Guhneuc Y.G., Do code smells impact the effort of different maintenance programming activities?, IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering, 1, pp. 393-402, (2016)"
prioritizing code documentation effort: can we do it simpler but better?,"Liu S., Guo Z., Li Y., Lu H., Chen L., Xu L., Zhou Y., Xu B., Prioritizing code documentation effort: Can we do it simpler but better?, Inf. Softw. Technol., 140, (2021)"
a study of the uniqueness of source code,"Gabel M., Su Z., A study of the uniqueness of source code, Proceedings of the 18th ACM SIGSOFT International Symposium on Foundations of Software Engineering, pp. 147-156, (2010)"
a hybrid approach to code reviewer recommendation with collaborative filtering,"Xia Z., Sun H., Jiang J., Wang X., Liu X., A hybrid approach to code reviewer recommendation with collaborative filtering, 2017 6th International Workshop on Software Mining (SoftwareMining), pp. 24-31, (2017)"
do professional developers benefit from design pattern documentation? a replication in the context of source code comprehension,"Gravino C., Risi M., Scanniello G., Tortora G., Do Professional Developers Benefit from Design Pattern Documentation? A Replication in the Context of Source Code Comprehension, Proceedings of the 15th International Conference on Model Driven Engineering Languages and Systems (MODELS'12)., pp. 185-201, (2012)"
investigating the validity of ground truth in code reviewer recommendation studies,"Dogan E., Tuzun E., Tecimer K.A., Guvenir H.A., Investigating the validity of ground truth in code reviewer recommendation studies, International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 1-6, (2019)"
evaluating source code summarization techniques: replication and expansion,"Eddy Brian P, Robinson Jeffrey A, Kraft Nicholas A, Carver Jeffrey C, Evaluating source code summarization techniques: Replication and expansion, 2013 21st International Conference on Program Comprehension (ICPC), pp. 13-22, (2013)"
how we refactor,"Murphy-Hill E.R., Parnin C., Black A.P, How we refactor, and how we know it, Proceedings of the 31st International Conference on Software Engineering, pp. 287-297, (2009)"
search-based peer reviewers recommendation in modern code review,"Ouni A., Kula R.G., Inoue K., Search-based peer reviewers recommendation in modern code review, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), pp. 367-377, (2016)"
the effect of poor source code lexicon and readability on developers' cognitive load,"Fakhoury S., Ma Y., Arnaoudova V., Adesope O., The effect of poor source code lexicon and readability on developers' cognitive load, Conference on Program Comprehension. ACM, pp. 286-296, (2018)"
a comprehensive model for code readability,"Scalabrino S., Linares-Vasquez M., Oliveto R., A comprehensive model for code readability, J Softw Evol Process, 30, (2018)"
a review of code reviewer recommendation studies: challenges and future directions,"Cetin H.A., Dogan E., Tuzun E., A review of code reviewer recommendation studies: Challenges and future directions, Science of Computer Programming, (2021)"
code readability testing,"Sedano T., Code readability testing, an empirical study, 2016 IEEE 29th International conference on software engineering education and training (CSEET), pp. 111-117, (2016)"
the impact of tangled code changes,"Herzig K., Zeller A., The impact of tangled code changes, 2013 10th Working Conference on Mining Software Repositories (MSR), pp. 121-130, (2013)"
towards automating code review activities,"Tufano R., Pascarella L., Tufano M., Poshyvanyk D., Bavota G., Towards automating code review activities, International Conference on Software Engineering. IEEE, pp. 163-174, (2021)"
