Title,Full Reference
"archerr: runtime environment driven program safety""","Chinchani R., Iyer A., Jayaraman B., Upadhyaya S., ARCHERR: Runtime Environment Driven Program Safety"", pp. 385-406"
automated clustering and program repair for introductory programming assignments,"Gulwani S., Radicek I., Zuleger F., Automated clustering and program repair for introductory programming assignments, PLDI 2018, pp. 465-480, (2018)"
infer: an automatic program verifier for memory safety of c programs,"Calcagno C., Distefano D., Infer: An automatic program verifier for memory safety of c programs, Proceedings of the Third International Conference on NASA Formal Methods, NFM'11, pp. 459-465, (2011)"
modeling programs hierarchically with stack-augmented lstm,"Liu F., Zhang L., Jin Z., Modeling programs hierarchically with stack-augmented lstm, Journal of Systems and Software, 164, (2020)"
deep reinforcement learning for syntactic error repair in student programs,"Gupta R., Kanade A., Shevade S.K., Deep reinforcement learning for syntactic error repair in student programs, The Thirty-Third AAAI Conference on Artificial Intelligence, AAAI 2019, pp. 930-937, (2019)"
a formula-based approach for automatic fault localization of imperative programs,"Lamraoui S., Nakajima S., A formula-based approach for automatic fault localization of imperative programs, International Conference on Formal Engineering Methods, ICFEM 2014, (2014)"
an automated framework for recommending program elements to novices (n),"ZIMMERMAN K., RUPAKHETI C. R., An automated framework for recommending program elements to novices (N), Proceedings of the 30th IEEE/ACM International Conference on Automated Software Engineering (ASE 2015), pp. 283-288, (2015)"
multipas: applying program transformations to introductory programming assignments for data augmentation,"Orvalho P., Janota M., Manquinho V., MultIPAs: Applying Program Transformations to Introductory Programming Assignments for Data Augmentation, Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ESEC/FSE 2022, pp. 1657-1661, (2022)"
a unified approach to global program optimization,"Kildall G.A., A unified approach to global program optimization, Proceedings of the 1st Annual ACM SIGACTSIGPLAN Symposium on Principles of Programming Languages, pp. 194-206, (1973)"
review of recent systems for automatic assessment of programming assignments,"IHANTOLA P., AHONIEMI T., KARAVIRTA V., SEPPALA O., Review of recent systems for automatic assessment of programming assignments, Proceedings of the 10th Koli Calling International Conference on Computing Education Research, pp. 86-93, (2010)"
automated error localization and correction for imperative programs,"Konighofer R., Bloem R., Automated error localization and correction for imperative programs, International Conference on Formal Methods in Computer-Aided Design, FMCAD '11, pp. 91-100, (2011)"
simplifying loop invariant generation using splitter predicates,"Sharma R., Dillig I., Dillig T., Aiken A., Simplifying loop invariant generation using splitter predicates, Computer Aided Verification - 23rd International Conference, CAV 2011, Snowbird, UT, USA, July 14-20, 2011. Proceedings, Lecture Notes in Computer Science, 6806, pp. 703-719, (2011)"
safeosl: ensuring memory safety of c via ownership-based intermediate language,"Yin X., Huang Z., Kan S., Et al., SafeOSL: ensuring memory safety of C via ownership-based intermediate language, Softw Pract Exp, 52, 5, pp. 1114-1142, (2022)"
auto-tuning a high-level language targeted to gpu codes,"Grauer-Gray S., Xu L., Searles R., Ayalasomayajula S., Cavazos J., Auto-tuning A High-Level Language Targeted to GPU Codes, (2012)"
ultimate kojak with memory safety checks,"Nutz A., Dietsch D., Mohamed M.M., Podelski A., ULTIMATE KOJAK with memory safety checks, TACAS, LNCS, 9035, pp. 458-460, (2015)"
automatic grading and feedback using program repair for introductory programming courses,"Parihar S., Dadachanji Z., Praveen Kumar Singh R. D., Karkare A., Bhattacharya A., Automatic grading and feedback using program repair for introductory programming courses, ACM Conference on Innovation and Technology in Computer Science Education, (2017)"
automatic grading of programming assignments: an approach based on formal semantics,"Liu X., Wang S., Wang P., Wu D., Automatic grading of programming assignments: An approach based on formal semantics, ICSE (SEET) 2019, pp. 126-137, (2019)"
automatically documenting program changes,"Buse R.P.L., Weimer W.R., Automatically documenting program changes, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering., pp. 33-42, (2010)"
depthk: a k-induction verifier based on invariant inference for c programs,"Rocha W., Rocha H., Ismail H., Cordeiro L., Fischer B., DepthK: A k-induction verifier based on invariant inference for C programs, TACAS, LNCS, 10206, pp. 360-364, (2017)"
invaastcluster: on applying invariant-based program clustering to introductory programming assignments,"Orvalho P., Janota M., Manquinho V., InvAASTCluster: On Applying Invariant-Based Program Clustering to Introductory Programming Assignments, (2022)"
dynamically discovering likely program invariants to support program evolution,"Ernst M.D., Cockrell J., Griswold W.G., Notkin D., Dynamically discovering likely program invariants to support program evolution, IEEE Transactions on Software Engineering, 27, 2, pp. 99-123, (2001)"
esp: path-sensitive program verification in polynomial time,"Das M., Lerner S., Seigle M., ESP: Path-Sensitive Program Verification in Polynomial Time, Proceedings of the ACM SIGPLAN 2002 Conference on Programming Language Design and Implementation (PLDI ?02). Association for Computing Machinery, pp. 57-68, (2002)"
exceptional situations and program reliability,"Weimer W., Necula G.C., Exceptional situations and program reliability, ACM Transactions on Programming Languages and Systems, 30, 2, pp. 1-51, (2008)"
the detection of fault-prone programs,"Munson J.C., Khoshgoftaar T.M., The detection of fault-prone programs, IEEE Trans. Softw. Eng., 26, 5, pp. 423-433, (1992)"
a tool for checking ansic programs,"Clarke E., Kroening D.F., A tool for checking ANSIC programs, Tools and Algorithms for the Construction and Analysis of Systems (TACAS 2004), pp. 168-176, (2004)"
signature verification using a 'siamese' time delay neural network,"Bromley J., Guyon I., LeCun Y., Sackinger E., Shah R., Signature verification using a 'Siamese' time delay neural network, Proc. Adv. Neural Inf. Process. Syst., 6, pp. 1-8, (1993)"
learning loop invariants for program verification,"Si X., Dai H., Raghothaman M., Naik M., Song L., Learning loop invariants for program verification, Proceedings of the 32nd International Conference on Neural Information Processing Systems (NIPS'18), (2018)"
automated correction for syntax errors in programming assignments using recurrent neural networks,"Bhatia S., Singh R., Automated correction for syntax errors in programming assignments using recurrent neural networks, CoRR, (2016)"
localizing and explaining reasons for non-terminating logic programs with failure-slices,"Neumerkel U., Mesnard F., Localizing and Explaining Reasons for Non-terminating Logic Programs with Failure-Slices, Principles and Practice of Declarative Programming, International Conference PPDP'99, 1702, pp. 328-342, (1999)"
semantic program alignment for equivalence checking,"Churchill B.R., Padon O., Sharma R., Aiken A., Semantic program alignment for equivalence checking, Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation, PLDI, pp. 1027-1040, (2019)"
effective program debloating via reinforcement learning,"Heo K., Lee W., Pashakhanloo P., Naik M., Effective program debloating via reinforcement learning, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, pp. 380-394, (2018)"
learning program embeddings to propagate feedback on student code,"Piech C., Huang J., Nguyen A., Phulsuksombati M., Sahami M., Guibas L., Learning program embeddings to propagate feedback on student code, International conference on machine Learning, pp. 1093-1102, (2015)"
neural attribution for semantic bug-localization in student programs,"Gupta R., Kanade A., Shevade S., Neural attribution for semantic bug-localization in student programs, NeurIPS, (2019)"
cpack of ipas: a c90 program benchmark of introductory programming assignments,"Orvalho P., Janota M., Manquinho V., CPack of IPAs: A C90 Program Benchmark of Introductory Programming Assignments, (2022)"
